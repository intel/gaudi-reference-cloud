// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: quota_admin_private.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// QuotaManagementPrivateServiceClient is the client API for QuotaManagementPrivateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QuotaManagementPrivateServiceClient interface {
	// Lists resource quotas for a service
	// if resource type and/or cloudaccount are specified then,
	// gets the quotas for that cloudaccount and/or resource type if they exist
	GetResourceQuotaPrivate(ctx context.Context, in *ServiceQuotaResourceRequestPrivate, opts ...grpc.CallOption) (*ServiceQuotasPrivate, error)
	// PingPrivate returns a successful response by the service implementation.
	// It can be used for testing connectivity to the service.
	PingPrivate(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type quotaManagementPrivateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQuotaManagementPrivateServiceClient(cc grpc.ClientConnInterface) QuotaManagementPrivateServiceClient {
	return &quotaManagementPrivateServiceClient{cc}
}

func (c *quotaManagementPrivateServiceClient) GetResourceQuotaPrivate(ctx context.Context, in *ServiceQuotaResourceRequestPrivate, opts ...grpc.CallOption) (*ServiceQuotasPrivate, error) {
	out := new(ServiceQuotasPrivate)
	err := c.cc.Invoke(ctx, "/proto.QuotaManagementPrivateService/GetResourceQuotaPrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quotaManagementPrivateServiceClient) PingPrivate(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.QuotaManagementPrivateService/PingPrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuotaManagementPrivateServiceServer is the server API for QuotaManagementPrivateService service.
// All implementations must embed UnimplementedQuotaManagementPrivateServiceServer
// for forward compatibility
type QuotaManagementPrivateServiceServer interface {
	// Lists resource quotas for a service
	// if resource type and/or cloudaccount are specified then,
	// gets the quotas for that cloudaccount and/or resource type if they exist
	GetResourceQuotaPrivate(context.Context, *ServiceQuotaResourceRequestPrivate) (*ServiceQuotasPrivate, error)
	// PingPrivate returns a successful response by the service implementation.
	// It can be used for testing connectivity to the service.
	PingPrivate(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	mustEmbedUnimplementedQuotaManagementPrivateServiceServer()
}

// UnimplementedQuotaManagementPrivateServiceServer must be embedded to have forward compatible implementations.
type UnimplementedQuotaManagementPrivateServiceServer struct {
}

func (UnimplementedQuotaManagementPrivateServiceServer) GetResourceQuotaPrivate(context.Context, *ServiceQuotaResourceRequestPrivate) (*ServiceQuotasPrivate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetResourceQuotaPrivate not implemented")
}
func (UnimplementedQuotaManagementPrivateServiceServer) PingPrivate(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingPrivate not implemented")
}
func (UnimplementedQuotaManagementPrivateServiceServer) mustEmbedUnimplementedQuotaManagementPrivateServiceServer() {
}

// UnsafeQuotaManagementPrivateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QuotaManagementPrivateServiceServer will
// result in compilation errors.
type UnsafeQuotaManagementPrivateServiceServer interface {
	mustEmbedUnimplementedQuotaManagementPrivateServiceServer()
}

func RegisterQuotaManagementPrivateServiceServer(s grpc.ServiceRegistrar, srv QuotaManagementPrivateServiceServer) {
	s.RegisterService(&QuotaManagementPrivateService_ServiceDesc, srv)
}

func _QuotaManagementPrivateService_GetResourceQuotaPrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceQuotaResourceRequestPrivate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuotaManagementPrivateServiceServer).GetResourceQuotaPrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.QuotaManagementPrivateService/GetResourceQuotaPrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuotaManagementPrivateServiceServer).GetResourceQuotaPrivate(ctx, req.(*ServiceQuotaResourceRequestPrivate))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuotaManagementPrivateService_PingPrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuotaManagementPrivateServiceServer).PingPrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.QuotaManagementPrivateService/PingPrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuotaManagementPrivateServiceServer).PingPrivate(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// QuotaManagementPrivateService_ServiceDesc is the grpc.ServiceDesc for QuotaManagementPrivateService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QuotaManagementPrivateService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.QuotaManagementPrivateService",
	HandlerType: (*QuotaManagementPrivateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetResourceQuotaPrivate",
			Handler:    _QuotaManagementPrivateService_GetResourceQuotaPrivate_Handler,
		},
		{
			MethodName: "PingPrivate",
			Handler:    _QuotaManagementPrivateService_PingPrivate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "quota_admin_private.proto",
}
