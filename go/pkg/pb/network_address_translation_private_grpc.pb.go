// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: network_address_translation_private.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AddressTranslationPrivateServiceClient is the client API for AddressTranslationPrivateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AddressTranslationPrivateServiceClient interface {
	// Create an Address Translation record.
	CreatePrivate(ctx context.Context, in *AddressTranslationCreatePrivateRequest, opts ...grpc.CallOption) (*AddressTranslationPrivate, error)
	// Retrieve an Address Translation record from DB
	GetPrivate(ctx context.Context, in *AddressTranslationGetPrivateRequest, opts ...grpc.CallOption) (*AddressTranslationPrivate, error)
	// List Address Translation records from DB. Optionally filter by column.
	ListPrivate(ctx context.Context, in *AddressTranslationListPrivateRequest, opts ...grpc.CallOption) (*AddressTranslationPrivateList, error)
	// Delete an Address Translation record.
	DeletePrivate(ctx context.Context, in *AddressTranslationGetPrivateRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Update the resource status
	UpdateStatusPrivate(ctx context.Context, in *AddressTranslationUpdateStatusPrivateRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// PingPrivate always returns a successful response by the service implementation.
	// It can be used for testing connectivity to the service.
	PingPrivate(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// List Address Translations as a stream.
	// This returns all non-deleted address translations as messages with WatchDeltaType=Updated,
	// followed by a single WatchDeltaType=Bookmark with the last-seen resourceVersion.
	SearchStreamPrivate(ctx context.Context, in *AddressTranslationSearchStreamPrivateRequest, opts ...grpc.CallOption) (AddressTranslationPrivateService_SearchStreamPrivateClient, error)
	// Return a stream of changes to Address Translations using messages with WatchDeltaType=Updated or Deleted.
	// Messages with WatchDeltaType=Bookmark and the last-seen resourceVersion will be sent periodically.
	Watch(ctx context.Context, in *AddressTranslationWatchRequest, opts ...grpc.CallOption) (AddressTranslationPrivateService_WatchClient, error)
}

type addressTranslationPrivateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAddressTranslationPrivateServiceClient(cc grpc.ClientConnInterface) AddressTranslationPrivateServiceClient {
	return &addressTranslationPrivateServiceClient{cc}
}

func (c *addressTranslationPrivateServiceClient) CreatePrivate(ctx context.Context, in *AddressTranslationCreatePrivateRequest, opts ...grpc.CallOption) (*AddressTranslationPrivate, error) {
	out := new(AddressTranslationPrivate)
	err := c.cc.Invoke(ctx, "/proto.AddressTranslationPrivateService/CreatePrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressTranslationPrivateServiceClient) GetPrivate(ctx context.Context, in *AddressTranslationGetPrivateRequest, opts ...grpc.CallOption) (*AddressTranslationPrivate, error) {
	out := new(AddressTranslationPrivate)
	err := c.cc.Invoke(ctx, "/proto.AddressTranslationPrivateService/GetPrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressTranslationPrivateServiceClient) ListPrivate(ctx context.Context, in *AddressTranslationListPrivateRequest, opts ...grpc.CallOption) (*AddressTranslationPrivateList, error) {
	out := new(AddressTranslationPrivateList)
	err := c.cc.Invoke(ctx, "/proto.AddressTranslationPrivateService/ListPrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressTranslationPrivateServiceClient) DeletePrivate(ctx context.Context, in *AddressTranslationGetPrivateRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.AddressTranslationPrivateService/DeletePrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressTranslationPrivateServiceClient) UpdateStatusPrivate(ctx context.Context, in *AddressTranslationUpdateStatusPrivateRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.AddressTranslationPrivateService/UpdateStatusPrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressTranslationPrivateServiceClient) PingPrivate(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/proto.AddressTranslationPrivateService/PingPrivate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressTranslationPrivateServiceClient) SearchStreamPrivate(ctx context.Context, in *AddressTranslationSearchStreamPrivateRequest, opts ...grpc.CallOption) (AddressTranslationPrivateService_SearchStreamPrivateClient, error) {
	stream, err := c.cc.NewStream(ctx, &AddressTranslationPrivateService_ServiceDesc.Streams[0], "/proto.AddressTranslationPrivateService/SearchStreamPrivate", opts...)
	if err != nil {
		return nil, err
	}
	x := &addressTranslationPrivateServiceSearchStreamPrivateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AddressTranslationPrivateService_SearchStreamPrivateClient interface {
	Recv() (*AddressTranslationWatchResponse, error)
	grpc.ClientStream
}

type addressTranslationPrivateServiceSearchStreamPrivateClient struct {
	grpc.ClientStream
}

func (x *addressTranslationPrivateServiceSearchStreamPrivateClient) Recv() (*AddressTranslationWatchResponse, error) {
	m := new(AddressTranslationWatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *addressTranslationPrivateServiceClient) Watch(ctx context.Context, in *AddressTranslationWatchRequest, opts ...grpc.CallOption) (AddressTranslationPrivateService_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &AddressTranslationPrivateService_ServiceDesc.Streams[1], "/proto.AddressTranslationPrivateService/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &addressTranslationPrivateServiceWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AddressTranslationPrivateService_WatchClient interface {
	Recv() (*AddressTranslationWatchResponse, error)
	grpc.ClientStream
}

type addressTranslationPrivateServiceWatchClient struct {
	grpc.ClientStream
}

func (x *addressTranslationPrivateServiceWatchClient) Recv() (*AddressTranslationWatchResponse, error) {
	m := new(AddressTranslationWatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AddressTranslationPrivateServiceServer is the server API for AddressTranslationPrivateService service.
// All implementations must embed UnimplementedAddressTranslationPrivateServiceServer
// for forward compatibility
type AddressTranslationPrivateServiceServer interface {
	// Create an Address Translation record.
	CreatePrivate(context.Context, *AddressTranslationCreatePrivateRequest) (*AddressTranslationPrivate, error)
	// Retrieve an Address Translation record from DB
	GetPrivate(context.Context, *AddressTranslationGetPrivateRequest) (*AddressTranslationPrivate, error)
	// List Address Translation records from DB. Optionally filter by column.
	ListPrivate(context.Context, *AddressTranslationListPrivateRequest) (*AddressTranslationPrivateList, error)
	// Delete an Address Translation record.
	DeletePrivate(context.Context, *AddressTranslationGetPrivateRequest) (*emptypb.Empty, error)
	// Update the resource status
	UpdateStatusPrivate(context.Context, *AddressTranslationUpdateStatusPrivateRequest) (*emptypb.Empty, error)
	// PingPrivate always returns a successful response by the service implementation.
	// It can be used for testing connectivity to the service.
	PingPrivate(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	// List Address Translations as a stream.
	// This returns all non-deleted address translations as messages with WatchDeltaType=Updated,
	// followed by a single WatchDeltaType=Bookmark with the last-seen resourceVersion.
	SearchStreamPrivate(*AddressTranslationSearchStreamPrivateRequest, AddressTranslationPrivateService_SearchStreamPrivateServer) error
	// Return a stream of changes to Address Translations using messages with WatchDeltaType=Updated or Deleted.
	// Messages with WatchDeltaType=Bookmark and the last-seen resourceVersion will be sent periodically.
	Watch(*AddressTranslationWatchRequest, AddressTranslationPrivateService_WatchServer) error
	mustEmbedUnimplementedAddressTranslationPrivateServiceServer()
}

// UnimplementedAddressTranslationPrivateServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAddressTranslationPrivateServiceServer struct {
}

func (UnimplementedAddressTranslationPrivateServiceServer) CreatePrivate(context.Context, *AddressTranslationCreatePrivateRequest) (*AddressTranslationPrivate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePrivate not implemented")
}
func (UnimplementedAddressTranslationPrivateServiceServer) GetPrivate(context.Context, *AddressTranslationGetPrivateRequest) (*AddressTranslationPrivate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrivate not implemented")
}
func (UnimplementedAddressTranslationPrivateServiceServer) ListPrivate(context.Context, *AddressTranslationListPrivateRequest) (*AddressTranslationPrivateList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPrivate not implemented")
}
func (UnimplementedAddressTranslationPrivateServiceServer) DeletePrivate(context.Context, *AddressTranslationGetPrivateRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePrivate not implemented")
}
func (UnimplementedAddressTranslationPrivateServiceServer) UpdateStatusPrivate(context.Context, *AddressTranslationUpdateStatusPrivateRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStatusPrivate not implemented")
}
func (UnimplementedAddressTranslationPrivateServiceServer) PingPrivate(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingPrivate not implemented")
}
func (UnimplementedAddressTranslationPrivateServiceServer) SearchStreamPrivate(*AddressTranslationSearchStreamPrivateRequest, AddressTranslationPrivateService_SearchStreamPrivateServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchStreamPrivate not implemented")
}
func (UnimplementedAddressTranslationPrivateServiceServer) Watch(*AddressTranslationWatchRequest, AddressTranslationPrivateService_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (UnimplementedAddressTranslationPrivateServiceServer) mustEmbedUnimplementedAddressTranslationPrivateServiceServer() {
}

// UnsafeAddressTranslationPrivateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AddressTranslationPrivateServiceServer will
// result in compilation errors.
type UnsafeAddressTranslationPrivateServiceServer interface {
	mustEmbedUnimplementedAddressTranslationPrivateServiceServer()
}

func RegisterAddressTranslationPrivateServiceServer(s grpc.ServiceRegistrar, srv AddressTranslationPrivateServiceServer) {
	s.RegisterService(&AddressTranslationPrivateService_ServiceDesc, srv)
}

func _AddressTranslationPrivateService_CreatePrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressTranslationCreatePrivateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressTranslationPrivateServiceServer).CreatePrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddressTranslationPrivateService/CreatePrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressTranslationPrivateServiceServer).CreatePrivate(ctx, req.(*AddressTranslationCreatePrivateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressTranslationPrivateService_GetPrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressTranslationGetPrivateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressTranslationPrivateServiceServer).GetPrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddressTranslationPrivateService/GetPrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressTranslationPrivateServiceServer).GetPrivate(ctx, req.(*AddressTranslationGetPrivateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressTranslationPrivateService_ListPrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressTranslationListPrivateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressTranslationPrivateServiceServer).ListPrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddressTranslationPrivateService/ListPrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressTranslationPrivateServiceServer).ListPrivate(ctx, req.(*AddressTranslationListPrivateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressTranslationPrivateService_DeletePrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressTranslationGetPrivateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressTranslationPrivateServiceServer).DeletePrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddressTranslationPrivateService/DeletePrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressTranslationPrivateServiceServer).DeletePrivate(ctx, req.(*AddressTranslationGetPrivateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressTranslationPrivateService_UpdateStatusPrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddressTranslationUpdateStatusPrivateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressTranslationPrivateServiceServer).UpdateStatusPrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddressTranslationPrivateService/UpdateStatusPrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressTranslationPrivateServiceServer).UpdateStatusPrivate(ctx, req.(*AddressTranslationUpdateStatusPrivateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressTranslationPrivateService_PingPrivate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressTranslationPrivateServiceServer).PingPrivate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddressTranslationPrivateService/PingPrivate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressTranslationPrivateServiceServer).PingPrivate(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressTranslationPrivateService_SearchStreamPrivate_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AddressTranslationSearchStreamPrivateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AddressTranslationPrivateServiceServer).SearchStreamPrivate(m, &addressTranslationPrivateServiceSearchStreamPrivateServer{stream})
}

type AddressTranslationPrivateService_SearchStreamPrivateServer interface {
	Send(*AddressTranslationWatchResponse) error
	grpc.ServerStream
}

type addressTranslationPrivateServiceSearchStreamPrivateServer struct {
	grpc.ServerStream
}

func (x *addressTranslationPrivateServiceSearchStreamPrivateServer) Send(m *AddressTranslationWatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _AddressTranslationPrivateService_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AddressTranslationWatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AddressTranslationPrivateServiceServer).Watch(m, &addressTranslationPrivateServiceWatchServer{stream})
}

type AddressTranslationPrivateService_WatchServer interface {
	Send(*AddressTranslationWatchResponse) error
	grpc.ServerStream
}

type addressTranslationPrivateServiceWatchServer struct {
	grpc.ServerStream
}

func (x *addressTranslationPrivateServiceWatchServer) Send(m *AddressTranslationWatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

// AddressTranslationPrivateService_ServiceDesc is the grpc.ServiceDesc for AddressTranslationPrivateService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AddressTranslationPrivateService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AddressTranslationPrivateService",
	HandlerType: (*AddressTranslationPrivateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePrivate",
			Handler:    _AddressTranslationPrivateService_CreatePrivate_Handler,
		},
		{
			MethodName: "GetPrivate",
			Handler:    _AddressTranslationPrivateService_GetPrivate_Handler,
		},
		{
			MethodName: "ListPrivate",
			Handler:    _AddressTranslationPrivateService_ListPrivate_Handler,
		},
		{
			MethodName: "DeletePrivate",
			Handler:    _AddressTranslationPrivateService_DeletePrivate_Handler,
		},
		{
			MethodName: "UpdateStatusPrivate",
			Handler:    _AddressTranslationPrivateService_UpdateStatusPrivate_Handler,
		},
		{
			MethodName: "PingPrivate",
			Handler:    _AddressTranslationPrivateService_PingPrivate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchStreamPrivate",
			Handler:       _AddressTranslationPrivateService_SearchStreamPrivate_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Watch",
			Handler:       _AddressTranslationPrivateService_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "network_address_translation_private.proto",
}
