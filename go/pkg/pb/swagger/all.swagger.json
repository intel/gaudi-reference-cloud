{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "ResourceDefinitionAction": {
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchNodesResponseComputeNode": {
      "properties": {
        "availabilityZone": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "instanceTypes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "namespace": {
          "type": "string"
        },
        "nodeId": {
          "format": "int32",
          "type": "integer"
        },
        "nodeName": {
          "type": "string"
        },
        "percentageResourcesUsed": {
          "format": "float",
          "type": "number"
        },
        "poolIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserDetailedCloudAccountRoleDetailed": {
      "properties": {
        "alias": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountRoleId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "effect": {
          "type": "string"
        },
        "permissions": {
          "items": {
            "$ref": "#/definitions/protoCloudAccountRolePermission"
          },
          "type": "array"
        },
        "updatedAt": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAPIToken": {
      "properties": {
        "id": {
          "format": "int64",
          "title": "/ Token ID from the model tokenizer",
          "type": "integer"
        },
        "logprob": {
          "format": "float",
          "title": "/ Logprob",
          "type": "number"
        },
        "special": {
          "title": "/ Is the token a special token\n/ Can be used to ignore tokens when concatenating",
          "type": "boolean"
        },
        "text": {
          "title": "/ Token text",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAccessPrincipal": {
      "properties": {
        "cluster": {
          "$ref": "#/definitions/protoObjectCluster"
        },
        "credentials": {
          "$ref": "#/definitions/protoObjectAccessCredentials"
        }
      },
      "type": "object"
    },
    "protoAccessType": {
      "default": "ACCESS_TYPE_SSH",
      "enum": [
        "ACCESS_TYPE_SSH",
        "ACCESS_TYPE_JUPYTER"
      ],
      "type": "string"
    },
    "protoAccount": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAccountPerson": {
      "properties": {
        "personId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAccountType": {
      "default": "ACCOUNT_TYPE_UNSPECIFIED",
      "enum": [
        "ACCOUNT_TYPE_UNSPECIFIED",
        "ACCOUNT_TYPE_STANDARD",
        "ACCOUNT_TYPE_PREMIUM",
        "ACCOUNT_TYPE_ENTERPRISE_PENDING",
        "ACCOUNT_TYPE_ENTERPRISE",
        "ACCOUNT_TYPE_INTEL",
        "ACCOUNT_TYPE_MEMBER"
      ],
      "type": "string"
    },
    "protoActionsRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoActionsResponse": {
      "properties": {
        "actions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoAddOnAdmin": {
      "properties": {
        "args": {
          "items": {
            "$ref": "#/definitions/protoKeyvaluepair"
          },
          "type": "array"
        },
        "artifact": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/protoKeyvaluepair"
          },
          "type": "array"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAddRegionRequest": {
      "properties": {
        "apiDns": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAddonResponse": {
      "properties": {
        "adminonly": {
          "type": "boolean"
        },
        "args": {
          "items": {
            "$ref": "#/definitions/protoKeyvaluepair"
          },
          "type": "array"
        },
        "artifacts": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "k8sversion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/protoKeyvaluepair"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        },
        "upgradeavailable": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAdminFirewallRuleResponse": {
      "properties": {
        "destinationip": {
          "type": "string"
        },
        "internalport": {
          "format": "int32",
          "type": "integer"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sourceip": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "state": {
          "type": "string"
        },
        "vipid": {
          "format": "int32",
          "type": "integer"
        },
        "vipname": {
          "type": "string"
        },
        "viptype": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAlert": {
      "properties": {
        "alertType": {
          "type": "string"
        },
        "clientRecordId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "creation": {
          "format": "date-time",
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "serviceName": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "receive a alert upon subscription",
      "type": "object"
    },
    "protoAllPoliciesResponse": {
      "properties": {
        "policies": {
          "items": {
            "$ref": "#/definitions/protoPolicyMetadata"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoAnnotations": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAuthorizationRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "verb": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAuthorizationRequestInternal": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "user": {
          "$ref": "#/definitions/protoUserIdentification"
        },
        "verb": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAuthorizationResponse": {
      "properties": {
        "allowed": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoBackup": {
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "folder": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingAccount": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingAccountDowngrade": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "downgradeOption": {
          "$ref": "#/definitions/protoDowngradeOption"
        },
        "force": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoBillingCoupon": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "code": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "disabled": {
          "format": "date-time",
          "type": "string"
        },
        "expires": {
          "format": "date-time",
          "type": "string"
        },
        "isStandard": {
          "type": "boolean"
        },
        "numRedeemed": {
          "format": "int64",
          "type": "integer"
        },
        "numUses": {
          "format": "int64",
          "type": "integer"
        },
        "redemptions": {
          "items": {
            "$ref": "#/definitions/protoBillingCouponRedemption"
          },
          "type": "array"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponCreate": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "creator": {
          "type": "string"
        },
        "expires": {
          "format": "date-time",
          "type": "string"
        },
        "isStandard": {
          "type": "boolean"
        },
        "numUses": {
          "format": "int64",
          "type": "integer"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponDisable": {
      "properties": {
        "code": {
          "type": "string"
        },
        "disabled": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponRedeem": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponRedemption": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "installed": {
          "type": "boolean"
        },
        "redeemed": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponResponse": {
      "properties": {
        "coupons": {
          "items": {
            "$ref": "#/definitions/protoBillingCoupon"
          },
          "type": "array"
        },
        "redemptions": {
          "items": {
            "$ref": "#/definitions/protoBillingCouponRedemption"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBillingCredit": {
      "properties": {
        "amountUsed": {
          "format": "double",
          "type": "number"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "couponCode": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "originalAmount": {
          "format": "double",
          "type": "number"
        },
        "reason": {
          "$ref": "#/definitions/protoBillingCreditReason"
        },
        "remainingAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoBillingCreditReason": {
      "default": "CREDIT_UNSPECIFIED",
      "enum": [
        "CREDIT_UNSPECIFIED",
        "CREDIT_INITIAL",
        "CREDIT_PURCHASED",
        "CREDIT_COUPON"
      ],
      "type": "string"
    },
    "protoBillingCreditResponse": {
      "properties": {
        "credits": {
          "items": {
            "$ref": "#/definitions/protoBillingCredit"
          },
          "type": "array"
        },
        "expirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "totalRemainingAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUnAppliedAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUsedAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoBillingInvoiceResponse": {
      "properties": {
        "invoices": {
          "items": {
            "$ref": "#/definitions/protoInvoice"
          },
          "type": "array"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingMigratedCredit": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingOption": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "creditCard": {
          "$ref": "#/definitions/protoCreditCard"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "format": "uint64",
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleInitial": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "other": {
          "$ref": "#/definitions/protoPaymentMethodOther"
        },
        "paymentType": {
          "$ref": "#/definitions/protoPaymentType"
        }
      },
      "type": "object"
    },
    "protoBillingPaidInstanceResponse": {
      "properties": {
        "instanceTypes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBillingRate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "rate": {
          "$ref": "#/definitions/protoRate"
        }
      },
      "type": "object"
    },
    "protoBillingUnappliedCredit": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "remainingAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoBillingUnappliedCreditBalance": {
      "properties": {
        "unappliedAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoBillingUsage": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "billingUsageMetrics": {
          "$ref": "#/definitions/protoBillingUsageMetrics"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "minsUsed": {
          "format": "double",
          "type": "number"
        },
        "productFamily": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        },
        "rate": {
          "type": "string"
        },
        "regionName": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingUsageMetrics": {
      "properties": {
        "usageQuantity": {
          "format": "double",
          "type": "number"
        },
        "usageQuantityUnitName": {
          "type": "string"
        },
        "usageUnitName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingUsageResponse": {
      "properties": {
        "downloadUrl": {
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUsage": {
          "format": "double",
          "type": "number"
        },
        "usages": {
          "items": {
            "$ref": "#/definitions/protoBillingUsage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBucketAccessPolicy": {
      "default": "UNSPECIFIED",
      "enum": [
        "UNSPECIFIED",
        "NONE",
        "READ",
        "READ_WRITE"
      ],
      "title": "- UNSPECIFIED: If policy was not provided, will default to `ACCESS_POLICY_NONE` on creation\n - NONE: No access by default, equals to private, explicit IAM policy need to be attached\n - READ: Read only public access\n - READ_WRITE: Read/Write public access",
      "type": "string"
    },
    "protoBucketLifecycleRule": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoBucketLifecycleRuleMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoBucketLifecycleRuleSpec"
        },
        "status": {
          "$ref": "#/definitions/protoBucketLifecycleRuleStatus"
        }
      },
      "type": "object"
    },
    "protoBucketLifecycleRuleMetadata": {
      "properties": {
        "bucketId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "creationTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "deletionTimestamp": {
          "description": "Timestamp when resource was requested to be deleted.",
          "format": "date-time",
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "updateTimestamp": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBucketLifecycleRuleMetadataRef": {
      "properties": {
        "bucketId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBucketLifecycleRuleSPhase": {
      "default": "LFRuleProvisioning",
      "enum": [
        "LFRuleProvisioning",
        "LFRuleReady",
        "LFRuleFailed",
        "LFRuleDeleting"
      ],
      "type": "string"
    },
    "protoBucketLifecycleRuleSearchResponse": {
      "properties": {
        "rules": {
          "items": {
            "$ref": "#/definitions/protoBucketLifecycleRule"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBucketLifecycleRuleSpec": {
      "properties": {
        "deleteMarker": {
          "title": "Deletes versioned objects if there only delete marker as the only version",
          "type": "boolean"
        },
        "expireDays": {
          "description": "Expires `current` versions of objects after a specified number of days counted from object creation.",
          "format": "int64",
          "type": "integer"
        },
        "noncurrentExpireDays": {
          "description": "A number of days after which to permanently delete non-current versions of objects.\nThe number of days is timed from when the object becomes non-current, which is when a\nversioned object is deleted or overwritten.",
          "format": "int64",
          "type": "integer"
        },
        "prefix": {
          "description": "A path prefix. The rule will be restricted to objects with the specified prefix.\nIf not specified, the rule will apply to all objects in the bucket.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBucketLifecycleRuleStatus": {
      "properties": {
        "phase": {
          "$ref": "#/definitions/protoBucketLifecycleRuleSPhase"
        },
        "ruleId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBucketNetworkGroup": {
      "properties": {
        "gateway": {
          "type": "string"
        },
        "prefixLength": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBucketPermission": {
      "default": "ReadBucket",
      "enum": [
        "ReadBucket",
        "WriteBucket",
        "DeleteBucket"
      ],
      "title": "- ReadBucket: Equal to granting:\n```\ns3:GetObject\n```\n - WriteBucket: Equal to granting:\n```\ns3:AbortMultipartUpload\ns3:PutObject\n```\n - DeleteBucket: Equal to granting:\n```\ns3:DeleteObject\n```",
      "type": "string"
    },
    "protoBucketPhase": {
      "default": "BucketProvisioning",
      "description": " - BucketProvisioning: The system is provisioning bucket.\nDefault.\n - BucketReady: The bucket is provisioned and ready to mount.\n - BucketDeleting: The bucket is in process of being deleted.\n - BucketDeleted: The bucket is deleted.\n - BucketFailed: The bucket creation failed.",
      "enum": [
        "BucketProvisioning",
        "BucketReady",
        "BucketDeleting",
        "BucketDeleted",
        "BucketFailed"
      ],
      "type": "string"
    },
    "protoBucketPolicyStatus": {
      "properties": {
        "lifecycleRules": {
          "items": {
            "$ref": "#/definitions/protoBucketLifecycleRule"
          },
          "type": "array"
        },
        "userAccessPolicies": {
          "items": {
            "$ref": "#/definitions/protoBucketUserAccess"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBucketSecurityGroup": {
      "properties": {
        "networkFilterAllow": {
          "items": {
            "$ref": "#/definitions/protoBucketNetworkGroup"
          },
          "type": "array"
        },
        "networkFilterDeny": {
          "items": {
            "$ref": "#/definitions/protoBucketNetworkGroup"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBucketUserAccess": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoObjectUserMetadata"
        },
        "spec": {
          "items": {
            "$ref": "#/definitions/protoObjectUserPermissionSpec"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBuckets": {
      "properties": {
        "docCount": {
          "format": "int32",
          "type": "integer"
        },
        "key": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBulkUploadResourceUsages": {
      "properties": {
        "resourceUsages": {
          "items": {
            "$ref": "#/definitions/protoResourceUsageCreate"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBulkUploadResourceUsagesFailed": {
      "properties": {
        "resourceUsages": {
          "items": {
            "$ref": "#/definitions/protoResourceUsageCreateFailed"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCISReport": {
      "properties": {
        "releaseId": {
          "type": "string"
        },
        "scanTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "scanTool": {
          "type": "string"
        },
        "vulnerabilities": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "protoChangeRequestStatus": {
      "default": "pending",
      "enum": [
        "pending",
        "approved",
        "denied"
      ],
      "type": "string"
    },
    "protoChangeRequestType": {
      "default": "create",
      "enum": [
        "create",
        "update",
        "enable"
      ],
      "type": "string"
    },
    "protoClientCredentials": {
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccount": {
      "properties": {
        "accessLimitedTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "adminName": {
          "type": "string"
        },
        "billingAccountCreated": {
          "type": "boolean"
        },
        "countryCode": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "creditsDepleted": {
          "format": "date-time",
          "type": "string"
        },
        "delinquent": {
          "type": "boolean"
        },
        "enrolled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "lowCredits": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "oid": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "paidServicesAllowed": {
          "type": "boolean"
        },
        "parentId": {
          "type": "string"
        },
        "personId": {
          "type": "string"
        },
        "restricted": {
          "type": "boolean"
        },
        "terminateMessageQueued": {
          "type": "boolean"
        },
        "terminatePaidServices": {
          "type": "boolean"
        },
        "tid": {
          "type": "string"
        },
        "tradeRestricted": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/protoAccountType"
        },
        "upgradedToEnterprise": {
          "$ref": "#/definitions/protoUpgradeStatus"
        },
        "upgradedToPremium": {
          "$ref": "#/definitions/protoUpgradeStatus"
        }
      },
      "type": "object"
    },
    "protoCloudAccountApproveList": {
      "properties": {
        "account": {
          "type": "string"
        },
        "enableStorage": {
          "type": "boolean"
        },
        "maxclusterilbOverride": {
          "format": "int32",
          "type": "integer"
        },
        "maxclusterngOverride": {
          "format": "int32",
          "type": "integer"
        },
        "maxclustersOverride": {
          "format": "int32",
          "type": "integer"
        },
        "maxclustervmOverride": {
          "format": "int32",
          "type": "integer"
        },
        "maxnodegroupvmOverride": {
          "format": "int32",
          "type": "integer"
        },
        "providername": {
          "type": "string"
        },
        "status": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoCloudAccountApproveListResponse": {
      "properties": {
        "approveListResponse": {
          "items": {
            "$ref": "#/definitions/protoCloudAccountApproveList"
          },
          "type": "array"
        },
        "existingresourcelimits": {
          "$ref": "#/definitions/protoResourceLimits"
        }
      },
      "type": "object"
    },
    "protoCloudAccountCreate": {
      "properties": {
        "accessLimitedTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "adminName": {
          "type": "string"
        },
        "billingAccountCreated": {
          "type": "boolean"
        },
        "countryCode": {
          "type": "string"
        },
        "creditsDepleted": {
          "format": "date-time",
          "type": "string"
        },
        "delinquent": {
          "type": "boolean"
        },
        "enrolled": {
          "type": "boolean"
        },
        "lowCredits": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "oid": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "paidServicesAllowed": {
          "type": "boolean"
        },
        "parentId": {
          "type": "string"
        },
        "personId": {
          "type": "string"
        },
        "restricted": {
          "type": "boolean"
        },
        "terminateMessageQueued": {
          "type": "boolean"
        },
        "terminatePaidServices": {
          "type": "boolean"
        },
        "tid": {
          "type": "string"
        },
        "tradeRestricted": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/protoAccountType"
        },
        "upgradedToEnterprise": {
          "$ref": "#/definitions/protoUpgradeStatus"
        },
        "upgradedToPremium": {
          "$ref": "#/definitions/protoUpgradeStatus"
        }
      },
      "type": "object"
    },
    "protoCloudAccountEnrollAction": {
      "default": "ENROLL_ACTION_NONE",
      "enum": [
        "ENROLL_ACTION_NONE",
        "ENROLL_ACTION_REGISTER",
        "ENROLL_ACTION_COUPON_OR_CREDIT_CARD",
        "ENROLL_ACTION_RETRY",
        "ENROLL_ACTION_TC"
      ],
      "title": "- ENROLL_ACTION_NONE: No action needed. Enrollment is done.\n - ENROLL_ACTION_REGISTER: Role is missing. Redirect user's browser to registration flow.\n - ENROLL_ACTION_COUPON_OR_CREDIT_CARD: Premium account with no payment method. Prompt for payment or\ncoupon.\n - ENROLL_ACTION_RETRY: An error occurred. Call Enroll again.\n - ENROLL_ACTION_TC: Terms \u0026 Condition accept status",
      "type": "string"
    },
    "protoCloudAccountEnrollRequest": {
      "properties": {
        "premium": {
          "title": "premium query parameter from post-registration redirect",
          "type": "boolean"
        },
        "termsStatus": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoCloudAccountEnrollResponse": {
      "properties": {
        "action": {
          "$ref": "#/definitions/protoCloudAccountEnrollAction"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountType": {
          "$ref": "#/definitions/protoAccountType"
        },
        "enrolled": {
          "type": "boolean"
        },
        "haveBillingAccount": {
          "type": "boolean"
        },
        "haveCloudAccount": {
          "type": "boolean"
        },
        "isMember": {
          "type": "boolean"
        },
        "registered": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoCloudAccountForComputeNodePool": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "createAdmin": {
          "type": "string"
        },
        "poolId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccountId": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccountMembers": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCloudAccountRole": {
      "properties": {
        "alias": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/protoCloudAccountRoleEffect"
        },
        "id": {
          "type": "string"
        },
        "permissions": {
          "items": {
            "$ref": "#/definitions/protoCloudAccountRolePermission"
          },
          "type": "array"
        },
        "updatedAt": {
          "type": "string"
        },
        "users": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCloudAccountRoleEffect": {
      "default": "allow",
      "enum": [
        "allow",
        "deny"
      ],
      "type": "string"
    },
    "protoCloudAccountRolePermission": {
      "properties": {
        "actions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createdAt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccountRoleUpdateEffect": {
      "default": "allow",
      "enum": [
        "allow",
        "deny"
      ],
      "type": "string"
    },
    "protoCloudAccountRoleUpdatePermission": {
      "properties": {
        "actions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccountRoles": {
      "properties": {
        "cloudAccountRoles": {
          "items": {
            "$ref": "#/definitions/protoCloudAccountRole"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCloudAccountUpgradeAction": {
      "default": "UPGRADE_ACTION_RETRY",
      "description": " - UPGRADE_ACTION_RETRY: An error occurred. Call Upgrade again.\n - UPGRADE_ACTION_UNSUPPORTED: An error occurred. Upgrade not supported.\n - UPGRADE_ACTION_NONE: No action needed. Upgrade is done.",
      "enum": [
        "UPGRADE_ACTION_RETRY",
        "UPGRADE_ACTION_UNSUPPORTED",
        "UPGRADE_ACTION_NONE"
      ],
      "type": "string"
    },
    "protoCloudAccountUpgradeRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountUpgradeToType": {
          "$ref": "#/definitions/protoAccountType"
        },
        "code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccountUpgradeResponse": {
      "properties": {
        "action": {
          "$ref": "#/definitions/protoCloudAccountUpgradeAction"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountType": {
          "$ref": "#/definitions/protoAccountType"
        }
      },
      "type": "object"
    },
    "protoCloudAccountUpgradeWithCreditCardRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountUpgradeToType": {
          "$ref": "#/definitions/protoAccountType"
        }
      },
      "type": "object"
    },
    "protoCloudCreditReason": {
      "default": "CREDITS_UNSPECIFIED",
      "enum": [
        "CREDITS_UNSPECIFIED",
        "CREDITS_INITIAL",
        "CREDITS_PURCHASED",
        "CREDITS_COUPON"
      ],
      "type": "string"
    },
    "protoCloudCreditsCouponRedeem": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudCreditsState": {
      "default": "CLOUD_CREDITS_STATE_UNSPECIFIED",
      "enum": [
        "CLOUD_CREDITS_STATE_UNSPECIFIED",
        "CLOUD_CREDITS_STATE_AVAILABLE",
        "CLOUD_CREDITS_STATE_THRESHOLD_REACHED",
        "CLOUD_CREDITS_STATE_USED",
        "CLOUD_CREDITS_STATE_EXPIRED",
        "CLOUD_CREDITS_STATE_OUTDATED"
      ],
      "type": "string"
    },
    "protoCluster": {
      "properties": {
        "SSHKeyName": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nodes": {
          "items": {
            "$ref": "#/definitions/protoClusterNode"
          },
          "type": "array"
        },
        "spec": {
          "$ref": "#/definitions/protoVNetSpec"
        },
        "storageNodes": {
          "items": {
            "$ref": "#/definitions/protoStorageNode"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoClusterCerts": {
      "properties": {
        "certexpirydate": {
          "type": "string"
        },
        "cpname": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoClusterCreateResponseForm": {
      "properties": {
        "clusterstate": {
          "type": "string"
        },
        "k8sversionname": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoClusterID": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "clustertype": {
          "type": "string"
        },
        "clusteruuid": {
          "type": "string"
        }
      },
      "title": "Cluster ID",
      "type": "object"
    },
    "protoClusterInfo": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoClusterNode": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "imageType": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "machineType": {
          "$ref": "#/definitions/protoMachineType"
        },
        "name": {
          "type": "string"
        },
        "nodeId": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/protoNodeRole"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoClusterResponseForm": {
      "properties": {
        "annotations": {
          "items": {
            "$ref": "#/definitions/protoAnnotations"
          },
          "type": "array"
        },
        "clusterstate": {
          "type": "string"
        },
        "clusterstatus": {
          "$ref": "#/definitions/protoClusterStatus"
        },
        "clustertype": {
          "type": "string"
        },
        "createddate": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "k8sversion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/protoNetwork"
        },
        "nodegroups": {
          "items": {
            "$ref": "#/definitions/protoNodeGroupResponseForm"
          },
          "type": "array"
        },
        "provisioningLog": {
          "items": {
            "$ref": "#/definitions/protoProvisioningLog"
          },
          "type": "array"
        },
        "storageenabled": {
          "type": "boolean"
        },
        "storages": {
          "items": {
            "$ref": "#/definitions/protoClusterStorageStatus"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/protoKeyValuePair"
          },
          "type": "array"
        },
        "upgradeavailable": {
          "type": "boolean"
        },
        "upgradek8sversionavailable": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "uuid": {
          "type": "string"
        },
        "vips": {
          "items": {
            "$ref": "#/definitions/protoGetVipResponse"
          },
          "title": "repeated KeyValuePair labels = 12;",
          "type": "array"
        }
      },
      "title": "Cluster Response Format",
      "type": "object"
    },
    "protoClusterSSHKeys": {
      "properties": {
        "clusterid": {
          "format": "int32",
          "type": "integer"
        },
        "sshprivatekey": {
          "type": "string"
        },
        "sshpublickey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoClusterSpec": {
      "properties": {
        "annotations": {
          "items": {
            "$ref": "#/definitions/protoAnnotations"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "k8sversionname": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/protoNetwork"
        },
        "runtimename": {
          "type": "string"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/protoKeyValuePair"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoClusterStatus": {
      "properties": {
        "clusteruuid": {
          "type": "string"
        },
        "errorcode": {
          "format": "int32",
          "type": "integer"
        },
        "lastupdate": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "title": "Status Response Format",
      "type": "object"
    },
    "protoClusterStorageStatus": {
      "properties": {
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "storageprovider": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoClustersResponse": {
      "properties": {
        "clusters": {
          "items": {
            "$ref": "#/definitions/protoClusterResponseForm"
          },
          "type": "array"
        },
        "resourcelimits": {
          "$ref": "#/definitions/protoResourceLimits"
        }
      },
      "title": "ClustersResponse",
      "type": "object"
    },
    "protoClustersResponseAdmin": {
      "properties": {
        "account": {
          "type": "string"
        },
        "clustertype": {
          "type": "string"
        },
        "cpupgradeavailable": {
          "type": "boolean"
        },
        "cpupgradeversions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createddate": {
          "type": "string"
        },
        "k8supgradeavailable": {
          "type": "boolean"
        },
        "k8supgradeversions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "k8sversion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nodegroups": {
          "items": {
            "$ref": "#/definitions/protoNodegroup"
          },
          "type": "array"
        },
        "provider": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoComponent": {
      "properties": {
        "artifact": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Component type",
      "type": "object"
    },
    "protoComponentList": {
      "properties": {
        "components": {
          "additionalProperties": {
            "$ref": "#/definitions/protoReleases"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "protoComponentType": {
      "default": "UNSPECIFIED_TYPE",
      "enum": [
        "UNSPECIFIED_TYPE",
        "OCI_IMAGE",
        "GIT_REPO",
        "COMPRESSED_BUNDLE",
        "FILE"
      ],
      "type": "string"
    },
    "protoComputeNodePool": {
      "properties": {
        "numberOfNodes": {
          "format": "int32",
          "type": "integer"
        },
        "poolAccountManagerAgsRole": {
          "type": "string"
        },
        "poolId": {
          "type": "string"
        },
        "poolName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoComputeNodePoolForInstanceScheduling": {
      "properties": {
        "poolId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoComputeNodePoolForPoolAccountManager": {
      "properties": {
        "poolId": {
          "type": "string"
        },
        "poolName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoConsoleInvoiceUnbilledByProductType": {
      "properties": {
        "amount": {
          "format": "int64",
          "type": "integer"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "minsUsed": {
          "format": "int64",
          "type": "integer"
        },
        "productType": {
          "title": "Example: m7.metal",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoConsoleInvoiceUnbilledByService": {
      "properties": {
        "invoiceByProductType": {
          "items": {
            "$ref": "#/definitions/protoConsoleInvoiceUnbilledByProductType"
          },
          "type": "array"
        },
        "serviceName": {
          "title": "Example: BMaaS",
          "type": "string"
        },
        "unbilledActiveInstances": {
          "type": "string"
        },
        "unbilledActiveMins": {
          "type": "string"
        },
        "unbilledBalance": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoConsoleInvoiceUnbilledResponse": {
      "properties": {
        "billingPeriod": {
          "format": "date-time",
          "title": "Example: May 2023",
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "estimatedTotal": {
          "type": "string"
        },
        "invoiceByService": {
          "items": {
            "$ref": "#/definitions/protoConsoleInvoiceUnbilledByService"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCoupon": {
      "properties": {
        "amount": {
          "format": "int64",
          "type": "integer"
        },
        "code": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "disabled": {
          "format": "date-time",
          "type": "string"
        },
        "expires": {
          "format": "date-time",
          "type": "string"
        },
        "isStandard": {
          "type": "boolean"
        },
        "numRedeemed": {
          "format": "int64",
          "type": "integer"
        },
        "numUses": {
          "format": "int64",
          "type": "integer"
        },
        "redemptions": {
          "items": {
            "$ref": "#/definitions/protoCouponRedemption"
          },
          "type": "array"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCouponCreate": {
      "properties": {
        "amount": {
          "format": "int64",
          "type": "integer"
        },
        "creator": {
          "type": "string"
        },
        "expires": {
          "format": "date-time",
          "type": "string"
        },
        "isStandard": {
          "type": "boolean"
        },
        "numUses": {
          "format": "int64",
          "type": "integer"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCouponDisable": {
      "properties": {
        "code": {
          "type": "string"
        },
        "disabled": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCouponRedemption": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "installed": {
          "type": "boolean"
        },
        "redeemed": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCouponResponse": {
      "properties": {
        "coupons": {
          "items": {
            "$ref": "#/definitions/protoCoupon"
          },
          "type": "array"
        },
        "redemptions": {
          "items": {
            "$ref": "#/definitions/protoCouponRedemption"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCpuSpec": {
      "properties": {
        "cores": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "sockets": {
          "format": "int32",
          "type": "integer"
        },
        "threads": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoCreateAddonAdminRequest": {
      "properties": {
        "adminonly": {
          "type": "boolean"
        },
        "args": {
          "items": {
            "$ref": "#/definitions/protoKeyvaluepair"
          },
          "type": "array"
        },
        "artifacts": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "k8sversion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/protoKeyvaluepair"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        },
        "upgradeavailable": {
          "type": "boolean"
        },
        "upgradeversions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCreateEvent": {
      "properties": {
        "clientRecordId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "eventState": {
          "type": "string"
        },
        "eventSubType": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "region": {
          "type": "string"
        },
        "serviceName": {
          "$ref": "#/definitions/protoServiceName"
        },
        "severity": {
          "$ref": "#/definitions/protoEventSeverity"
        },
        "status": {
          "$ref": "#/definitions/protoEventStatus"
        },
        "type": {
          "$ref": "#/definitions/protoEventType"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "create a event to be sent out",
      "type": "object"
    },
    "protoCreateInstanceTypeRequest": {
      "properties": {
        "allowManualInsert": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "displayname": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "iksadminkey": {
          "type": "string"
        },
        "imioverride": {
          "type": "boolean"
        },
        "instancetypename": {
          "type": "string"
        },
        "memory": {
          "format": "int32",
          "type": "integer"
        },
        "nodeprovidername": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "storage": {
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "InstanceType",
      "type": "object"
    },
    "protoCreateInvalidMeteringRecords": {
      "properties": {
        "createInvalidMeteringRecords": {
          "items": {
            "$ref": "#/definitions/protoInvalidMeteringRecordCreate"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCreateKubeFlowDeploymentResponse": {
      "properties": {
        "deploymentID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCreateServiceQuotaResponse": {
      "properties": {
        "region": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceQuotaResource": {
          "$ref": "#/definitions/protoServiceQuotaResource"
        }
      },
      "type": "object"
    },
    "protoCreatek8sversionRequest": {
      "properties": {
        "cpimi": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "workimi": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCredit": {
      "properties": {
        "amountUsed": {
          "format": "double",
          "type": "number"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "couponCode": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "originalAmount": {
          "format": "double",
          "type": "number"
        },
        "reason": {
          "$ref": "#/definitions/protoCloudCreditReason"
        },
        "remainingAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoCreditCard": {
      "properties": {
        "expiration": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCreditResponse": {
      "properties": {
        "credits": {
          "items": {
            "$ref": "#/definitions/protoCredit"
          },
          "type": "array"
        },
        "expirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "totalRemainingAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUnAppliedAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUsedAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoCreditsState": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "eventAt": {
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/protoCloudCreditsState"
        }
      },
      "type": "object"
    },
    "protoCreditsStateResponse": {
      "properties": {
        "eventAt": {
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/protoCloudCreditsState"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDeactivateAccounts": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "creditsDepleted": {
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDeactivateInstances": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "quotas": {
          "items": {
            "$ref": "#/definitions/protoInstanceQuotas"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoDeactivateInstancesResponse": {
      "properties": {
        "deactivationList": {
          "items": {
            "$ref": "#/definitions/protoDeactivateInstances"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoDefaultCloudAccountRoleAssignedResponse": {
      "properties": {
        "assigned": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDefaultFamily": {
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultProduct": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDefaultProductMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoProductSpec"
        }
      },
      "type": "object"
    },
    "protoDefaultProductDeleteRequest": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultProductMetadata": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultProductSearchRequest": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultQuotaSection": {
      "properties": {
        "bucketsQuota": {
          "format": "int64",
          "type": "string"
        },
        "cloudAccountType": {
          "type": "string"
        },
        "filesizeQuotaInTB": {
          "format": "int64",
          "type": "string"
        },
        "filevolumesQuota": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultRate": {
      "properties": {
        "accountType": {
          "type": "string"
        },
        "rate": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "usageExpr": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultVendor": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDefaultVendorMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoVendorSpec"
        }
      },
      "type": "object"
    },
    "protoDefaultVendorMetadata": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultVendorSearchRequest": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultVendortDeleteRequest": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "TODO fix typo",
      "type": "object"
    },
    "protoDeleteEventRequest": {
      "properties": {
        "messageId": {
          "type": "string"
        },
        "receiptHandle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDeleteEventRequestList": {
      "properties": {
        "deleteEventRequests": {
          "items": {
            "$ref": "#/definitions/protoDeleteEventRequest"
          },
          "type": "array"
        },
        "queueName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDeleteKubeFlowDeploymentResponse": {
      "properties": {
        "status": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDisableMonitorResponse": {
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDiskSpec": {
      "properties": {
        "size": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDispatcherRequest": {
      "properties": {
        "model": {
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/protoGenerateStreamRequest"
        },
        "requestID": {
          "type": "string"
        },
        "timeout": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDispatcherResponse": {
      "properties": {
        "model": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "response": {
          "$ref": "#/definitions/protoGenerateStreamResponse"
        },
        "status": {
          "$ref": "#/definitions/rpcStatus"
        }
      },
      "type": "object"
    },
    "protoDowngradeOption": {
      "default": "DOWNGRADE_OPTION_UNSPECIFIED",
      "enum": [
        "DOWNGRADE_OPTION_UNSPECIFIED",
        "DOWNGRADE_PREMIUM_TO_STANDARD_WITH_PAYMENT_OPTION"
      ],
      "type": "string"
    },
    "protoDpaiAirflow": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "deploymentMetadata": {
          "$ref": "#/definitions/protoDpaiAirflowDeploymentMeta"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiMeta"
        },
        "name": {
          "type": "string"
        },
        "sizeProperties": {
          "$ref": "#/definitions/protoDpaiAirflowSizeProperties"
        },
        "storageProperties": {
          "$ref": "#/definitions/protoDpaiAirflowStorageProperties"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "version": {
          "type": "string"
        },
        "webServerProperties": {
          "$ref": "#/definitions/protoDpaiAirflowWebServerProperties"
        },
        "workspaceName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowConf": {
      "properties": {
        "airflowId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiMeta"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowConfDeleteResponse": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowConfListResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiAirflowConf"
          },
          "type": "array"
        },
        "hasMore": {
          "type": "boolean"
        },
        "nextToken": {
          "type": "string"
        },
        "prevToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowDeploymentMeta": {
      "properties": {
        "backendDatabaseId": {
          "type": "string"
        },
        "deploymentId": {
          "type": "string"
        },
        "deploymentStatus": {
          "$ref": "#/definitions/protoDpaiDeploymentStatus"
        },
        "iksClusterId": {
          "type": "string"
        },
        "nodeGroupId": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowListResponse": {
      "properties": {
        "currOffset": {
          "format": "int64",
          "type": "string"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiAirflow"
          },
          "type": "array"
        },
        "lastOffset": {
          "format": "int64",
          "type": "string"
        },
        "limit": {
          "format": "int64",
          "type": "string"
        },
        "nextOffset": {
          "format": "int64",
          "type": "string"
        },
        "prevOffset": {
          "format": "int64",
          "type": "string"
        },
        "totalRecords": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowPathProperties": {
      "properties": {
        "dagFolderPath": {
          "type": "string"
        },
        "logFolder": {
          "type": "string"
        },
        "pluginFolderPath": {
          "type": "string"
        },
        "requirementPath": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowSchedulerProperties": {
      "properties": {
        "schedularCountDefault": {
          "format": "int32",
          "type": "integer"
        },
        "schedulerCountMax": {
          "format": "int32",
          "type": "integer"
        },
        "schedulerCountMin": {
          "format": "int32",
          "type": "integer"
        },
        "schedulerCpuLimit": {
          "type": "string"
        },
        "schedulerCpuRequest": {
          "type": "string"
        },
        "schedulerMemoryLimit": {
          "type": "string"
        },
        "schedulerMemoryRequest": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowSize": {
      "properties": {
        "airflowSchedulerProperties": {
          "$ref": "#/definitions/protoDpaiAirflowSchedulerProperties"
        },
        "airflowSizeWebserverProperties": {
          "$ref": "#/definitions/protoDpaiAirflowSizeWebServerProperties"
        },
        "airflowTriggerProperties": {
          "$ref": "#/definitions/protoDpaiAirflowTriggerProperties"
        },
        "airflowWorkerProperties": {
          "$ref": "#/definitions/protoDpaiAirflowWorkerProperties"
        },
        "backendDatabaseSizeId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "logDirectoryDiskSize": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiMeta"
        },
        "name": {
          "type": "string"
        },
        "nodeSizeId": {
          "type": "string"
        },
        "numberOfNodesDefault": {
          "format": "int32",
          "type": "integer"
        },
        "redisDiskSize": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowSizeDeleteResponse": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowSizeListResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiAirflowSize"
          },
          "type": "array"
        },
        "hasMore": {
          "type": "boolean"
        },
        "nextToken": {
          "type": "string"
        },
        "prevToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowSizeProperties": {
      "properties": {
        "numberOfNodes": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfSchedulers": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfWorkers": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowSizeWebServerProperties": {
      "properties": {
        "webserverCount": {
          "format": "int32",
          "type": "integer"
        },
        "webserverCpuLimit": {
          "type": "string"
        },
        "webserverCpuRequest": {
          "type": "string"
        },
        "webserverMemoryLimit": {
          "type": "string"
        },
        "webserverMemoryRequest": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowStorageProperties": {
      "properties": {
        "bucketId": {
          "type": "string"
        },
        "bucketPrincipal": {
          "type": "string"
        },
        "path": {
          "$ref": "#/definitions/protoDpaiAirflowPathProperties"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowTriggerProperties": {
      "properties": {
        "triggerCount": {
          "format": "int32",
          "type": "integer"
        },
        "triggerCpuLimit": {
          "type": "string"
        },
        "triggerCpuRequest": {
          "type": "string"
        },
        "triggerMemoryLimit": {
          "type": "string"
        },
        "triggerMemoryRequest": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowVersion": {
      "properties": {
        "airflowVersionProperties": {
          "$ref": "#/definitions/protoDpaiAirflowVersionProperties"
        },
        "backendDatabaseVersionId": {
          "type": "string"
        },
        "backwardCompatibleFrom": {
          "type": "string"
        },
        "chartReference": {
          "$ref": "#/definitions/protoDpaiChartReference"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "executorType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageReference": {
          "$ref": "#/definitions/protoDpaiImageReference"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiMeta"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowVersionDeleteResponse": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowVersionListResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiAirflowVersion"
          },
          "type": "array"
        },
        "hasMore": {
          "type": "boolean"
        },
        "nextToken": {
          "type": "string"
        },
        "prevToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowVersionProperties": {
      "properties": {
        "airflowVersion": {
          "type": "string"
        },
        "postgresVersion": {
          "type": "string"
        },
        "pythonVersion": {
          "type": "string"
        },
        "redisVersion": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowWebServerProperties": {
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "webserverAdminPassword": {
          "type": "string"
        },
        "webserverAdminUsername": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiAirflowWorkerProperties": {
      "properties": {
        "workerCountDefault": {
          "format": "int32",
          "type": "integer"
        },
        "workerCountMax": {
          "format": "int32",
          "type": "integer"
        },
        "workerCountMin": {
          "format": "int32",
          "type": "integer"
        },
        "workerCpuLimit": {
          "type": "string"
        },
        "workerCpuRequest": {
          "type": "string"
        },
        "workerMemoryLimit": {
          "type": "string"
        },
        "workerMemoryRequest": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiChartReference": {
      "properties": {
        "chartName": {
          "type": "string"
        },
        "repoName": {
          "type": "string"
        },
        "repoUrl": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiDeployment": {
      "properties": {
        "changeIndicator": {
          "$ref": "#/definitions/protoDpaiDeploymentChangeIndicator"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "input": {
          "format": "byte",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiDeploymentMeta"
        },
        "output": {
          "format": "byte",
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "serviceType": {
          "$ref": "#/definitions/protoDpaiServiceType"
        },
        "status": {
          "$ref": "#/definitions/protoDpaiDeploymentStatus"
        },
        "workspaceId": {
          "type": "string"
        }
      },
      "title": "deployments",
      "type": "object"
    },
    "protoDpaiDeploymentChangeIndicator": {
      "default": "DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED",
      "enum": [
        "DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED",
        "DPAI_CREATE",
        "DPAI_UPDATE",
        "DPAI_DELETE",
        "DPAI_RESTART",
        "DPAI_RESIZE",
        "DPAI_UPGRADE"
      ],
      "type": "string"
    },
    "protoDpaiDeploymentCreateResponse": {
      "properties": {
        "deploymentId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentDeleteResponse": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentListResponse": {
      "properties": {
        "currOffset": {
          "format": "int64",
          "type": "string"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiDeployment"
          },
          "type": "array"
        },
        "lastOffset": {
          "format": "int64",
          "type": "string"
        },
        "limit": {
          "format": "int64",
          "type": "string"
        },
        "nextOffset": {
          "format": "int64",
          "type": "string"
        },
        "prevOffset": {
          "format": "int64",
          "type": "string"
        },
        "totalRecords": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentMeta": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "title": "Common",
      "type": "object"
    },
    "protoDpaiDeploymentResponse": {
      "properties": {
        "deploymentId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/protoDpaiDeploymentStatus"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentState": {
      "default": "DPAI_DEPLOYMENT_STATE_UNSPECIFIED",
      "enum": [
        "DPAI_DEPLOYMENT_STATE_UNSPECIFIED",
        "DPAI_ACCEPTED",
        "DPAI_QUEUED",
        "DPAI_PENDING",
        "DPAI_RUNNING",
        "DPAI_SUCCESS",
        "DPAI_FAILED",
        "DPAI_CANCELLED",
        "DPAI_WAITING_FOR_UPSTREAM",
        "DPAI_UPSTREAM_FAILED",
        "DPAI_UPSTREAM_CANCELLED"
      ],
      "type": "string"
    },
    "protoDpaiDeploymentStatus": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/protoDpaiDeploymentState"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentTask": {
      "properties": {
        "deploymentId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "input": {
          "format": "byte",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiDeploymentTaskMeta"
        },
        "name": {
          "type": "string"
        },
        "output": {
          "format": "byte",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/protoDpaiDeploymentStatus"
        }
      },
      "title": "Micro deployments",
      "type": "object"
    },
    "protoDpaiDeploymentTaskCreateResponse": {
      "properties": {
        "dpaiDeploymentTaskId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentTaskDeleteResponse": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentTaskGetResponse": {
      "properties": {
        "dpaiDeploymentTask": {
          "$ref": "#/definitions/protoDpaiDeploymentTask"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentTaskListResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiDeploymentTask"
          },
          "type": "array"
        },
        "hasMore": {
          "type": "boolean"
        },
        "nextToken": {
          "type": "string"
        },
        "prevToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentTaskMeta": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiDeploymentTaskUpdateResponse": {
      "properties": {
        "dpaiDeploymentTask": {
          "$ref": "#/definitions/protoDpaiDeploymentTask"
        }
      },
      "type": "object"
    },
    "protoDpaiImageReference": {
      "properties": {
        "repository": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiMeta": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        }
      },
      "title": "Global",
      "type": "object"
    },
    "protoDpaiPostgres": {
      "properties": {
        "adminProperties": {
          "$ref": "#/definitions/protoDpaiPostgresAdminProperties"
        },
        "advanceConfiguration": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "deploymentMetadata": {
          "$ref": "#/definitions/protoDpaiPostgresDeploymentMeta"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiMeta"
        },
        "name": {
          "type": "string"
        },
        "optionalProperties": {
          "$ref": "#/definitions/protoDpaiPostgresOptionalProperties"
        },
        "serverUrl": {
          "type": "string"
        },
        "sizeProperties": {
          "$ref": "#/definitions/protoDpaiPostgresSizeProperties"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "versionId": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresAdminProperties": {
      "properties": {
        "adminPassword": {
          "type": "string"
        },
        "adminPasswordSecretReference": {
          "$ref": "#/definitions/protoDpaiSecretReference"
        },
        "adminUsername": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresDeploymentMeta": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "deploymentId": {
          "type": "string"
        },
        "deploymentStatus": {
          "$ref": "#/definitions/protoDpaiDeploymentStatus"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresListResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiPostgres"
          },
          "type": "array"
        },
        "hasMore": {
          "type": "boolean"
        },
        "nextToken": {
          "type": "string"
        },
        "prevToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresOptionalProperties": {
      "properties": {
        "initialDatabaseName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresSize": {
      "properties": {
        "description": {
          "type": "string"
        },
        "diskProperties": {
          "$ref": "#/definitions/protoDpaiPostgresSizeDiskProperties"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiMeta"
        },
        "name": {
          "type": "string"
        },
        "numberOfInstancesDefault": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfInstancesMax": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfInstancesMin": {
          "format": "int32",
          "type": "integer"
        },
        "pgPoolProperties": {
          "$ref": "#/definitions/protoDpaiPostgresSizePgPoolProperties"
        },
        "resourceCpuLimit": {
          "type": "string"
        },
        "resourceCpuRequest": {
          "type": "string"
        },
        "resourceMemoryLimit": {
          "type": "string"
        },
        "resourceMemoryRequest": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresSizeCreateRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "diskProperties": {
          "$ref": "#/definitions/protoDpaiPostgresSizeDiskProperties"
        },
        "name": {
          "type": "string"
        },
        "numberOfInstancesDefault": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfInstancesMax": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfInstancesMin": {
          "format": "int32",
          "type": "integer"
        },
        "pgPoolProperties": {
          "$ref": "#/definitions/protoDpaiPostgresSizePgPoolProperties"
        },
        "resourceCpuLimit": {
          "type": "string"
        },
        "resourceCpuRequest": {
          "type": "string"
        },
        "resourceMemoryLimit": {
          "type": "string"
        },
        "resourceMemoryRequest": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresSizeDeleteRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresSizeDeleteResponse": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresSizeDiskProperties": {
      "properties": {
        "diskSizeInGbDefault": {
          "format": "int32",
          "type": "integer"
        },
        "diskSizeInGbMax": {
          "format": "int32",
          "type": "integer"
        },
        "diskSizeInGbMin": {
          "format": "int32",
          "type": "integer"
        },
        "storageClassName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresSizeListResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiPostgresSize"
          },
          "type": "array"
        },
        "hasMore": {
          "type": "boolean"
        },
        "nextToken": {
          "type": "string"
        },
        "prevToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresSizePgPoolProperties": {
      "properties": {
        "numberOfInstancesDefault": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfInstancesMax": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfInstancesMin": {
          "format": "int32",
          "type": "integer"
        },
        "resourceCpuLimit": {
          "type": "string"
        },
        "resourceCpuRequest": {
          "type": "string"
        },
        "resourceMemoryLimit": {
          "type": "string"
        },
        "resourceMemoryRequest": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresSizeProperties": {
      "properties": {
        "diskSizeInGb": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfInstances": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfPgPoolInstances": {
          "format": "int32",
          "type": "integer"
        },
        "sizeId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresSizeUpdateRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "diskProperties": {
          "$ref": "#/definitions/protoDpaiPostgresSizeDiskProperties"
        },
        "id": {
          "type": "string"
        },
        "numberOfInstancesDefault": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfInstancesMax": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfInstancesMin": {
          "format": "int32",
          "type": "integer"
        },
        "pgPoolProperties": {
          "$ref": "#/definitions/protoDpaiPostgresSizePgPoolProperties"
        },
        "resourceCpuLimit": {
          "type": "string"
        },
        "resourceCpuRequest": {
          "type": "string"
        },
        "resourceMemoryLimit": {
          "type": "string"
        },
        "resourceMemoryRequest": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresVersion": {
      "properties": {
        "backwardCompatibleFrom": {
          "type": "string"
        },
        "chartReference": {
          "$ref": "#/definitions/protoDpaiChartReference"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageReference": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiMeta"
        },
        "name": {
          "type": "string"
        },
        "postgresVersion": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresVersionCreateRequest": {
      "properties": {
        "backwardCompatibleFrom": {
          "type": "string"
        },
        "chartReference": {
          "$ref": "#/definitions/protoDpaiChartReference"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "imageReference": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "postgresVersion": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresVersionDeleteRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresVersionDeleteResponse": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresVersionListResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiPostgresVersion"
          },
          "type": "array"
        },
        "hasMore": {
          "type": "boolean"
        },
        "nextToken": {
          "type": "string"
        },
        "prevToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiPostgresVersionUpdateRequest": {
      "properties": {
        "backwardCompatibleFrom": {
          "type": "string"
        },
        "chartReference": {
          "$ref": "#/definitions/protoDpaiChartReference"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "imageReference": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiSecretReference": {
      "properties": {
        "secretKeyName": {
          "type": "string"
        },
        "secretName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiServiceType": {
      "default": "DPAI_SERVICE_TYPE_UNSPECIFIED",
      "enum": [
        "DPAI_SERVICE_TYPE_UNSPECIFIED",
        "DPAI_WORKSPACE",
        "DPAI_HMS",
        "DPAI_SPARK",
        "DPAI_AIRFLOW",
        "DPAI_POSTGRES"
      ],
      "type": "string"
    },
    "protoDpaiWorkspace": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "deploymentMetadata": {
          "$ref": "#/definitions/protoDpaiWorkspaceDeploymentMeta"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDpaiMeta"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "services": {
          "items": {
            "$ref": "#/definitions/protoDpaiWorkspaceServices"
          },
          "type": "array"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "protoDpaiWorkspaceDeploymentMeta": {
      "properties": {
        "deploymentId": {
          "type": "string"
        },
        "deploymentStatus": {
          "$ref": "#/definitions/protoDpaiDeploymentStatus"
        },
        "iksId": {
          "type": "string"
        },
        "managementNodeGroupId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiWorkspaceListResponse": {
      "properties": {
        "currOffset": {
          "format": "int64",
          "type": "string"
        },
        "data": {
          "items": {
            "$ref": "#/definitions/protoDpaiWorkspace"
          },
          "type": "array"
        },
        "lastOffset": {
          "format": "int64",
          "type": "string"
        },
        "limit": {
          "format": "int64",
          "type": "string"
        },
        "nextOffset": {
          "format": "int64",
          "type": "string"
        },
        "prevOffset": {
          "format": "int64",
          "type": "string"
        },
        "totalRecords": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDpaiWorkspaceServices": {
      "properties": {
        "deploymentStatus": {
          "$ref": "#/definitions/protoDpaiDeploymentStatus"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "versionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoEmailRequest": {
      "properties": {
        "messageType": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "templateData": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "templateName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoEmailResponse": {
      "properties": {
        "messageId": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoEnableMonitorResponse": {
      "properties": {
        "config": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoEventSeverity": {
      "default": "EVENT_SEVERITY_UNSPECIFIED",
      "enum": [
        "EVENT_SEVERITY_UNSPECIFIED",
        "LOW",
        "MEDIUM",
        "HIGH"
      ],
      "title": "serverity decides on whether it is a notification or a alert or email\nlow will always be notifications\nmedium and high will be alerts",
      "type": "string"
    },
    "protoEventStatus": {
      "default": "EVENT_STATUS_UNSPECIFIED",
      "enum": [
        "EVENT_STATUS_UNSPECIFIED",
        "ACTIVE",
        "INACTIVE"
      ],
      "title": "status field will be expanded as functionality increases",
      "type": "string"
    },
    "protoEventType": {
      "default": "EVENT_TYPE_UNSPECIFIED",
      "enum": [
        "EVENT_TYPE_UNSPECIFIED",
        "NOTIFICATION",
        "ALERT",
        "EMAIL",
        "RESOURCE",
        "OPERATION",
        "AUDIT",
        "ERROR"
      ],
      "type": "string"
    },
    "protoEvents": {
      "properties": {
        "alerts": {
          "items": {
            "$ref": "#/definitions/protoAlert"
          },
          "type": "array"
        },
        "notifications": {
          "items": {
            "$ref": "#/definitions/protoNotification"
          },
          "type": "array"
        },
        "numberOfAlerts": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfNotifications": {
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "to receive events subscribed to",
      "type": "object"
    },
    "protoEventsFilter": {
      "properties": {
        "clientRecordId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoExecuteKFPreCheckResponse": {
      "properties": {
        "status": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoFamily": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFamilyRequest": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFamilyResponse": {
      "properties": {
        "families": {
          "items": {
            "$ref": "#/definitions/protoFamily"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoFilesystem": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoFilesystemMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoFilesystemSpec"
        },
        "status": {
          "$ref": "#/definitions/protoFilesystemStatus"
        }
      },
      "type": "object"
    },
    "protoFilesystemAccessModes": {
      "default": "ReadWrite",
      "enum": [
        "ReadWrite",
        "ReadOnly",
        "ReadWriteOnce"
      ],
      "title": "- ReadWrite: Read-Write\n - ReadOnly: Read-Only\n - ReadWriteOnce: ReadWriteOnce",
      "type": "string"
    },
    "protoFilesystemCapacity": {
      "properties": {
        "storage": {
          "title": "Filesystem capacity in GB",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFilesystemGetUserResponse": {
      "properties": {
        "password": {
          "title": "Filesystem user password",
          "type": "string"
        },
        "user": {
          "title": "Filesystem user name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFilesystemMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "creationTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "deletionTimestamp": {
          "description": "Timestamp when resource was requested to be deleted.",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize instances.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "resourceVersion can be provided with Update and Delete for concurrency control.",
          "type": "string"
        },
        "updateTimestamp": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFilesystemMetadataCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize instances.",
          "type": "object"
        },
        "name": {
          "description": "Name will be generated if empty.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFilesystemMetadataReference": {
      "description": "A reference to a single filesystem volume.",
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFilesystemMetadataSearch": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "filterType": {
          "$ref": "#/definitions/protoFilesystemType"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If not empty, only return instances that have these key/value pairs.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "protoFilesystemMetadataUpdate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The entire set of labels will be replaced with these labels.\nNot implemented.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFilesystemMountProtocols": {
      "default": "Weka",
      "enum": [
        "Weka",
        "NFS"
      ],
      "title": "- Weka: Weka\n - NFS: NFS",
      "type": "string"
    },
    "protoFilesystemMountStatus": {
      "properties": {
        "clusterAddr": {
          "title": "clusterAddr",
          "type": "string"
        },
        "clusterName": {
          "title": "clusterName",
          "type": "string"
        },
        "clusterVersion": {
          "title": "cluster version when available",
          "type": "string"
        },
        "filesystemName": {
          "title": "Name of the filesyste volume",
          "type": "string"
        },
        "namespace": {
          "title": "Name of the filesyste organization",
          "type": "string"
        },
        "username": {
          "title": "Username for this filesystem",
          "type": "string"
        },
        "volumePath": {
          "title": "volume mount path",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFilesystemPhase": {
      "default": "FSProvisioning",
      "enum": [
        "FSProvisioning",
        "FSReady",
        "FSDeleting",
        "FSDeleted",
        "FSFailed",
        "FSUpdating"
      ],
      "title": "- FSProvisioning: The system is provisioning filesystem volume.\nDefault.\n - FSReady: The filesystem volume is provisioned and ready to mount.\n - FSDeleting: The filesystem volume is in process of being deleted.\n - FSDeleted: The filesystem volume is deleted.\n - FSFailed: The filesystem volume creation failed.\n - FSUpdating: The filesystem volume is being updated",
      "type": "string"
    },
    "protoFilesystemSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoFilesystem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoFilesystemSpec": {
      "properties": {
        "accessModes": {
          "$ref": "#/definitions/protoFilesystemAccessModes"
        },
        "availabilityZone": {
          "description": "Not implemented.",
          "type": "string"
        },
        "encrypted": {
          "title": "Encryption flag",
          "type": "boolean"
        },
        "filesystemType": {
          "$ref": "#/definitions/protoFilesystemType"
        },
        "instanceType": {
          "title": "The name of the Instance type",
          "type": "string"
        },
        "mountProtocol": {
          "$ref": "#/definitions/protoFilesystemMountProtocols"
        },
        "request": {
          "$ref": "#/definitions/protoFilesystemCapacity"
        },
        "storageClass": {
          "$ref": "#/definitions/protoFilesystemStorageClass"
        }
      },
      "type": "object"
    },
    "protoFilesystemStatus": {
      "properties": {
        "message": {
          "description": "Additional details about the state or any error conditions.",
          "type": "string"
        },
        "mount": {
          "$ref": "#/definitions/protoFilesystemMountStatus"
        },
        "phase": {
          "$ref": "#/definitions/protoFilesystemPhase"
        },
        "securityGroup": {
          "$ref": "#/definitions/protoVolumeSecurityGroup"
        }
      },
      "type": "object"
    },
    "protoFilesystemStorageClass": {
      "default": "GeneralPurpose",
      "enum": [
        "GeneralPurpose",
        "AIOptimized",
        "GeneralPurposeStd"
      ],
      "title": "- GeneralPurpose: stoarge classes\n - AIOptimized: AI Workload optimized storage class\n - GeneralPurposeStd: stoarge classes",
      "type": "string"
    },
    "protoFilesystemType": {
      "default": "Unspecified",
      "enum": [
        "Unspecified",
        "ComputeGeneral",
        "ComputeKubernetes"
      ],
      "type": "string"
    },
    "protoFinishReason": {
      "default": "FINISH_REASON_LENGTH",
      "enum": [
        "FINISH_REASON_LENGTH",
        "FINISH_REASON_EOS_TOKEN",
        "FINISH_REASON_STOP_SEQUENCE"
      ],
      "type": "string"
    },
    "protoFirewallRuleResponse": {
      "properties": {
        "destinationip": {
          "type": "string"
        },
        "internalport": {
          "format": "int32",
          "type": "integer"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sourceip": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "state": {
          "type": "string"
        },
        "vipid": {
          "format": "int32",
          "type": "integer"
        },
        "vipname": {
          "type": "string"
        },
        "viptype": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGenerateAPIToken": {
      "properties": {
        "id": {
          "format": "int64",
          "title": "/ Token ID from the model tokenizer",
          "type": "integer"
        },
        "logprob": {
          "format": "float",
          "title": "/ Logprob",
          "type": "number"
        },
        "special": {
          "title": "/ Is the token a special token\n/ Can be used to ignore tokens when concatenating",
          "type": "boolean"
        },
        "text": {
          "title": "/ Token text",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGenerateRequestParameters": {
      "properties": {
        "bestOf": {
          "format": "int64",
          "title": "/ Generate best_of sequences and return the one if the highest token logprobs",
          "type": "integer"
        },
        "decoderInputDetails": {
          "title": "/ Get decoder input token logprobs and ids",
          "type": "boolean"
        },
        "details": {
          "title": "/ Get generation details",
          "type": "boolean"
        },
        "doSample": {
          "title": "/ Activate logits sampling",
          "type": "boolean"
        },
        "frequencyPenalty": {
          "description": "/ The parameter for frequency penalty. 1.0 means no penalty\n/ Penalize new tokens based on their existing frequency in the text so far,\n/ decreasing the model's likelihood to repeat the same line verbatim.",
          "format": "float",
          "type": "number"
        },
        "maxNewTokens": {
          "format": "int64",
          "title": "/ Maximum number of generated tokens",
          "type": "integer"
        },
        "repetitionPenalty": {
          "description": "/ The parameter for repetition penalty. 1.0 means no penalty.\n/ See [this paper](https://arxiv.org/pdf/1909.05858.pdf) for more details.",
          "format": "float",
          "type": "number"
        },
        "returnFullText": {
          "title": "/ Whether to prepend the prompt to the generated text",
          "type": "boolean"
        },
        "seed": {
          "format": "uint64",
          "title": "/ Random sampling seed",
          "type": "string"
        },
        "stop": {
          "items": {
            "type": "string"
          },
          "title": "/ Stop generating tokens if a member of `stop_sequences` is generated",
          "type": "array"
        },
        "temperature": {
          "description": "/ The value used to module the logits distribution.",
          "format": "float",
          "type": "number"
        },
        "topK": {
          "description": "/ The number of highest probability vocabulary tokens to keep for top-k-filtering.",
          "format": "int64",
          "type": "integer"
        },
        "topNTokens": {
          "format": "int64",
          "title": "/ Return the N most likely tokens at each step",
          "type": "integer"
        },
        "topP": {
          "description": "/ If set to \u003c 1, only the smallest set of most probable tokens with probabilities that add up to `top_p` or\n/ higher are kept for generation.",
          "format": "float",
          "type": "number"
        },
        "truncate": {
          "format": "int64",
          "title": "/ truncate inputs tokens to the given size",
          "type": "integer"
        },
        "typicalP": {
          "format": "float",
          "title": "/ Typical Decoding mass\n/ See [Typical Decoding for Natural Language Generation](https://arxiv.org/abs/2202.00666) for more information",
          "type": "number"
        },
        "watermark": {
          "title": "/ Watermarking with [A Watermark for Large Language Models](https://arxiv.org/abs/2301.10226)",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoGenerateStreamRequest": {
      "properties": {
        "params": {
          "$ref": "#/definitions/protoGenerateRequestParameters"
        },
        "prompt": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGenerateStreamResponse": {
      "properties": {
        "details": {
          "$ref": "#/definitions/protoStreamDetails"
        },
        "generatedText": {
          "title": "/ Complete generated text\n/ Only available when the generation is finished",
          "type": "string"
        },
        "token": {
          "$ref": "#/definitions/protoGenerateAPIToken"
        },
        "topTokens": {
          "items": {
            "$ref": "#/definitions/protoGenerateAPIToken"
          },
          "title": "/ Most likely tokens",
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetAccessResponse": {
      "properties": {
        "acl": {
          "items": {
            "$ref": "#/definitions/protoProductAccessResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetAccessResponseV2": {
      "properties": {
        "acl": {
          "items": {
            "$ref": "#/definitions/protoProductAccessResponseV2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetAddOnResponse": {
      "properties": {
        "addonresponse": {
          "items": {
            "$ref": "#/definitions/protoAddonResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetAdminFirewallRuleResponse": {
      "properties": {
        "getfirewallresponse": {
          "items": {
            "$ref": "#/definitions/protoAdminFirewallRuleResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetClusterAdmin": {
      "properties": {
        "account": {
          "type": "string"
        },
        "addons": {
          "items": {
            "$ref": "#/definitions/protoAddOnAdmin"
          },
          "type": "array"
        },
        "backup": {
          "items": {
            "$ref": "#/definitions/protoBackup"
          },
          "type": "array"
        },
        "certsexpiring": {
          "items": {
            "$ref": "#/definitions/protoClusterCerts"
          },
          "type": "array"
        },
        "clustertype": {
          "type": "string"
        },
        "k8supgradeavailable": {
          "type": "boolean"
        },
        "k8supgradeversions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "k8sversion": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "network": {
          "$ref": "#/definitions/protoNetworkAdmin"
        },
        "nodegroups": {
          "items": {
            "$ref": "#/definitions/protoNodegroup"
          },
          "type": "array"
        },
        "provider": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "snapshot": {
          "items": {
            "$ref": "#/definitions/protoSnapshot"
          },
          "type": "array"
        },
        "storageenabled": {
          "type": "boolean"
        },
        "storages": {
          "items": {
            "$ref": "#/definitions/protoClusterStorageStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetClustersAdmin": {
      "properties": {
        "response": {
          "items": {
            "$ref": "#/definitions/protoClustersResponseAdmin"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetDataResponse": {
      "properties": {
        "expiryDate": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetEventResponse": {
      "properties": {
        "createdby": {
          "type": "string"
        },
        "createddate": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetExternalIPResponse": {
      "properties": {
        "ip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetFirewallRuleResponse": {
      "properties": {
        "getfirewallresponse": {
          "items": {
            "$ref": "#/definitions/protoFirewallRuleResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetIMIResponse": {
      "properties": {
        "imiresponse": {
          "items": {
            "$ref": "#/definitions/protoIMIResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetIMIsInfoResponse": {
      "properties": {
        "osimage": {
          "items": {
            "$ref": "#/definitions/protoOSImages"
          },
          "type": "array"
        },
        "provider": {
          "items": {
            "$ref": "#/definitions/protoProviders"
          },
          "type": "array"
        },
        "runtime": {
          "items": {
            "$ref": "#/definitions/protoRuntimes"
          },
          "type": "array"
        },
        "state": {
          "items": {
            "$ref": "#/definitions/protoStates"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetInstanceTypeInfoResponse": {
      "properties": {
        "computeResponse": {
          "items": {
            "$ref": "#/definitions/protoInstanceTypeResponse"
          },
          "type": "array"
        },
        "nodeprovidername": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "states": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetInstanceTypeResponse": {
      "properties": {
        "computeInstanceType": {
          "$ref": "#/definitions/protoInstanceTypeResponse"
        },
        "iksInstanceType": {
          "$ref": "#/definitions/protoInstanceTypeResponse"
        }
      },
      "type": "object"
    },
    "protoGetInstanceTypesResponse": {
      "properties": {
        "instanceTypeResponse": {
          "items": {
            "$ref": "#/definitions/protoInstanceTypeResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetIntervalsResponse": {
      "properties": {
        "interval": {
          "items": {
            "$ref": "#/definitions/protoIntervals"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetJobStatusResponse": {
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetK8sVersionResponse": {
      "properties": {
        "k8sversions": {
          "items": {
            "$ref": "#/definitions/protoK8sversionResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetKFStatusResponse": {
      "properties": {
        "components": {
          "items": {
            "$ref": "#/definitions/protoKFStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetKubeconfigResponse": {
      "properties": {
        "clusterid": {
          "format": "int32",
          "type": "integer"
        },
        "kubeconfig": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetMetricTypesResponse": {
      "properties": {
        "metric": {
          "items": {
            "$ref": "#/definitions/protoMetrics"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetPublicAllInstancetypeResponse": {
      "properties": {
        "instancetypes": {
          "items": {
            "$ref": "#/definitions/protoGetPublicInstancetypeResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetPublicAllK8sversionResponse": {
      "properties": {
        "k8sversions": {
          "items": {
            "$ref": "#/definitions/protoGetPublicK8sversionResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetPublicAllRuntimeResponse": {
      "properties": {
        "runtimes": {
          "items": {
            "$ref": "#/definitions/protoGetPublicRuntimeResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetPublicInstancetypeResponse": {
      "properties": {
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "displayname": {
          "type": "string"
        },
        "instancecategory": {
          "type": "string"
        },
        "instancetypename": {
          "type": "string"
        },
        "memory": {
          "format": "int32",
          "type": "integer"
        },
        "storage": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoGetPublicK8sversionResponse": {
      "properties": {
        "k8sversionname": {
          "type": "string"
        },
        "runtimename": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetPublicRuntimeResponse": {
      "properties": {
        "k8sversionname": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "runtimename": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetRegionAccessResponse": {
      "properties": {
        "acl": {
          "items": {
            "$ref": "#/definitions/protoRegionAccessResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetResourceCategoriesResponse": {
      "properties": {
        "resourcetypes": {
          "items": {
            "$ref": "#/definitions/protoResourcetypes"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetResourcePatchesRequest": {
      "properties": {
        "availabilityZone": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetResourcePatchesResponse": {
      "properties": {
        "resourcePatches": {
          "items": {
            "$ref": "#/definitions/protoResourcePatch"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetUserCredential": {
      "properties": {
        "appClientName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "revoked": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetUserCredentialResponse": {
      "properties": {
        "appClients": {
          "items": {
            "$ref": "#/definitions/protoGetUserCredential"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetUserCredentialsResponse": {
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetVipResponse": {
      "properties": {
        "createddate": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dnsalias": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "members": {
          "items": {
            "$ref": "#/definitions/protoMembers"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "poolport": {
          "format": "int32",
          "type": "integer"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "vipIp": {
          "type": "string"
        },
        "vipid": {
          "format": "int32",
          "type": "integer"
        },
        "vipstate": {
          "type": "string"
        },
        "vipstatus": {
          "$ref": "#/definitions/protoVipStatus"
        },
        "viptype": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetVipsResponse": {
      "properties": {
        "response": {
          "items": {
            "$ref": "#/definitions/protoGetVipResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGpuSpec": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "modelName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGroupVersionResource": {
      "properties": {
        "group": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoHits": {
      "properties": {
        "Source": {
          "$ref": "#/definitions/protoSourceData"
        }
      },
      "type": "object"
    },
    "protoIMIInstanceTypeK8sResponse": {
      "properties": {
        "os": {
          "type": "string"
        },
        "osimageinstance": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "upstreamreleasename": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoIMIRequest": {
      "properties": {
        "artifact": {
          "type": "string"
        },
        "bootstraprepo": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "components": {
          "items": {
            "$ref": "#/definitions/protoComponent"
          },
          "type": "array"
        },
        "family": {
          "type": "string"
        },
        "iksadminkey": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "upstreamreleasename": {
          "type": "string"
        }
      },
      "title": "IMI Request",
      "type": "object"
    },
    "protoIMIResponse": {
      "properties": {
        "artifact": {
          "type": "string"
        },
        "bootstraprepo": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "components": {
          "items": {
            "$ref": "#/definitions/protoComponent"
          },
          "type": "array"
        },
        "cposimageinstances": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "family": {
          "type": "string"
        },
        "instacetypeimik8scompatibilityresponse": {
          "items": {
            "$ref": "#/definitions/protoInstanceTypeResponse"
          },
          "type": "array"
        },
        "instanceTypeResponse": {
          "items": {
            "$ref": "#/definitions/protoInstanceTypeResponse"
          },
          "type": "array"
        },
        "iscompatabilityactiveimi": {
          "type": "boolean"
        },
        "isk8sActive": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "upstreamreleasename": {
          "type": "string"
        }
      },
      "title": "IMI Response",
      "type": "object"
    },
    "protoInsertStorageQuotaByAccountRequest": {
      "properties": {
        "bucketsQuota": {
          "format": "int64",
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "filesizeQuotaInTB": {
          "format": "int64",
          "type": "string"
        },
        "filevolumesQuota": {
          "format": "int64",
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstacetypeIMIK8sCompatibility": {
      "properties": {
        "artifact": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "cposimageinstances": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "upstreamreleasename": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstance": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoInstanceMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoInstanceSpec"
        },
        "status": {
          "$ref": "#/definitions/protoInstanceStatus"
        }
      },
      "type": "object"
    },
    "protoInstanceCategory": {
      "default": "VirtualMachine",
      "enum": [
        "VirtualMachine",
        "BareMetalHost"
      ],
      "type": "string"
    },
    "protoInstanceGroup": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoInstanceGroupMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoInstanceGroupSpec"
        },
        "status": {
          "$ref": "#/definitions/protoInstanceGroupStatus"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reserved2": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupMetadataCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productId": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        },
        "reserved3": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupMetadataReference": {
      "description": "A reference to a single instance group.",
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupMetadataSearch": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupMetadataUpdate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reserved3": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupScaleResponse": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoInstanceGroupMetadata"
        },
        "status": {
          "$ref": "#/definitions/protoInstanceGroupScaleStatus"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupScaleStatus": {
      "properties": {
        "currentCount": {
          "format": "int32",
          "title": "the number of instances created in the instanceGroup",
          "type": "integer"
        },
        "currentMembers": {
          "description": "The names of existing and non-deleting instances in the instanceGroup.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "desiredCount": {
          "format": "int32",
          "title": "the number of instances expected in the instanceGroup",
          "type": "integer"
        },
        "newMembers": {
          "description": "The names of newly created instances in the instanceGroup.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "readyCount": {
          "description": "The number of instances with a phase of Ready.",
          "format": "int32",
          "type": "integer"
        },
        "readyMembers": {
          "description": "The names of instances with a phase of Ready.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoInstanceGroup"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupSpec": {
      "properties": {
        "instanceCount": {
          "format": "int32",
          "type": "integer"
        },
        "instanceSpec": {
          "$ref": "#/definitions/protoInstanceSpec"
        }
      },
      "type": "object"
    },
    "protoInstanceGroupStatus": {
      "properties": {
        "readyCount": {
          "description": "The number of instances with a phase of Ready.\nThe instance group is Ready when this equals InstanceGroupSpec.instanceCount.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoInstanceInterfaceStatus": {
      "properties": {
        "addresses": {
          "description": "List of IP addresses.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dnsName": {
          "description": "Fully qualified domain name (FQDN) of interface.",
          "type": "string"
        },
        "gateway": {
          "description": "Gateway IP address.",
          "type": "string"
        },
        "name": {
          "description": "Not implemented.",
          "type": "string"
        },
        "prefixLength": {
          "description": "Subnet prefix length.",
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "description": "Subnet IP address in format \"1.2.3.4\".",
          "type": "string"
        },
        "vNet": {
          "description": "Not implemented.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "creationTimestamp": {
          "description": "Not implemented.",
          "format": "date-time",
          "type": "string"
        },
        "deletionTimestamp": {
          "description": "Timestamp when resource was requested to be deleted.",
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize instances.\nThis is also used by TopologySpreadConstraints.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "resourceVersion can be provided with Update and Delete for concurrency control.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceMetadataCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize instances.\nThis is also used by TopologySpreadConstraints.",
          "type": "object"
        },
        "name": {
          "description": "Name will be generated if empty.",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceMetadataReference": {
      "description": "A reference to a single instance.",
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceMetadataSearch": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "instanceGroup": {
          "title": "If instanceGroupFilter is ExactValue, return instances in this instance group.\nOtherwise, this field is ignored",
          "type": "string"
        },
        "instanceGroupFilter": {
          "$ref": "#/definitions/protoSearchFilterCriteria"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If not empty, only return instances that have these key/value pairs.",
          "type": "object"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceMetadataUpdate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The entire set of labels will be replaced with these labels.\nNot implemented.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstancePhase": {
      "default": "Provisioning",
      "description": " - Provisioning: The system is creating and starting the instance.\nDefault.\n - Ready: The instance is running and has completed the running startup process.\n - Stopping: The instance is in the process of being stopped.\n - Stopped: The instance is stopped.\n - Terminating: The instance and its associated resources are in the process of being deleted.\n - Failed: The instance crashed, failed, or is otherwise unavailable.\n - Starting: The instance is in the process of startup.\n - Started: The instance has completed startup and is available to use.",
      "enum": [
        "Provisioning",
        "Ready",
        "Stopping",
        "Stopped",
        "Terminating",
        "Failed",
        "Starting",
        "Started"
      ],
      "type": "string"
    },
    "protoInstanceQuotas": {
      "properties": {
        "instanceType": {
          "type": "string"
        },
        "limit": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoInstanceSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoInstance"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoInstanceSpec": {
      "properties": {
        "availabilityZone": {
          "description": "Not implemented.",
          "type": "string"
        },
        "instanceGroup": {
          "description": "If not empty, this instance is part of the named instance group.",
          "type": "string"
        },
        "instanceType": {
          "description": "The name of an InstanceType.",
          "type": "string"
        },
        "interfaces": {
          "description": "Not implemented.",
          "items": {
            "$ref": "#/definitions/protoNetworkInterface"
          },
          "type": "array"
        },
        "machineImage": {
          "description": "The name of a MachineImage.\nNot implemented.",
          "type": "string"
        },
        "quickConnectEnabled": {
          "$ref": "#/definitions/protoTriState"
        },
        "runStrategy": {
          "$ref": "#/definitions/protoRunStrategy"
        },
        "sshPublicKeyNames": {
          "description": "The name of a previously stored SSH public key.\nUsers can use the corresponding SSH private key to SSH to this instance.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "topologySpreadConstraints": {
          "description": "This controls how instances are spread across the failure domains within the availability zone.\nThis can help to achieve high availability.\nIf this contains at least one key/value pair in matchLabels, then instances that have all of these key/value pairs\nwill be placed evenly across failure domains.",
          "items": {
            "$ref": "#/definitions/protoTopologySpreadConstraints"
          },
          "type": "array"
        },
        "userData": {
          "title": "The cloud-config for this instance",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceStatus": {
      "properties": {
        "interfaces": {
          "description": "A list of network interfaces, along with the private IP address assigned to the interface.",
          "items": {
            "$ref": "#/definitions/protoInstanceInterfaceStatus"
          },
          "type": "array"
        },
        "message": {
          "description": "Additional details about the state or any error conditions.",
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/protoInstancePhase"
        },
        "sshProxy": {
          "$ref": "#/definitions/protoSshProxyTunnelStatus"
        },
        "userName": {
          "description": "The user name that should be used to SSH into the instance.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceType": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoInstanceTypeMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoInstanceTypeSpec"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeDeleteRequest": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoInstanceTypeDeleteRequestMetadata"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeDeleteRequestMetadata": {
      "properties": {
        "name": {
          "description": "Unique name of the instance type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeGetRequestMetadata": {
      "properties": {
        "name": {
          "description": "Unique name of the instance type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeIMIK8sResponse": {
      "properties": {
        "category": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nodeprovidername": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeMetadata": {
      "properties": {
        "name": {
          "description": "Unique name of the instance type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeResponse": {
      "properties": {
        "category": {
          "type": "string"
        },
        "cposimageinstances": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "cpu": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "displayname": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "iksDB": {
          "type": "boolean"
        },
        "imiResponse": {
          "items": {
            "$ref": "#/definitions/protoIMIResponse"
          },
          "type": "array"
        },
        "imioverride": {
          "type": "boolean"
        },
        "instacetypeimik8scompatibilityresponse": {
          "items": {
            "$ref": "#/definitions/protoIMIResponse"
          },
          "type": "array"
        },
        "instancetypename": {
          "type": "string"
        },
        "iscompatabilityactiveinstance": {
          "type": "boolean"
        },
        "memory": {
          "format": "int32",
          "type": "integer"
        },
        "nodeprovidername": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "storage": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeSearchRequest": {
      "type": "object"
    },
    "protoInstanceTypeSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoInstanceType"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeSpec": {
      "properties": {
        "cpu": {
          "$ref": "#/definitions/protoCpuSpec"
        },
        "description": {
          "type": "string"
        },
        "disks": {
          "items": {
            "$ref": "#/definitions/protoDiskSpec"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "gpu": {
          "$ref": "#/definitions/protoGpuSpec"
        },
        "hbmMode": {
          "type": "string"
        },
        "instanceCategory": {
          "$ref": "#/definitions/protoInstanceCategory"
        },
        "memory": {
          "$ref": "#/definitions/protoMemorySpec"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeStatistics": {
      "description": "InstanceTypeStatistics provides statistical data for a specific instance type.",
      "properties": {
        "instanceCategory": {
          "description": "Category of the instance (VirtualMachine or BareMetalHost).",
          "type": "string"
        },
        "instanceType": {
          "description": "Type of the instance.",
          "type": "string"
        },
        "maxNewInstances": {
          "description": "Maximum number of additional instances that can be started.",
          "format": "int32",
          "type": "integer"
        },
        "runningInstances": {
          "description": "Number of instances currently running.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoInstanceTypeStats": {
      "properties": {
        "instanceType": {
          "type": "string"
        },
        "maxNewInstances": {
          "format": "int32",
          "type": "integer"
        },
        "runningInstances": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoIntervals": {
      "properties": {
        "interval": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidMeteringRecord": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "meteringRecordInvalidityReason": {
          "$ref": "#/definitions/protoMeteringRecordInvalidityReason"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidMeteringRecordCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "meteringRecordInvalidityReason": {
          "$ref": "#/definitions/protoMeteringRecordInvalidityReason"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidMeteringRecordFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidProductUsageRecord": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productUsageRecordInvalidityReason": {
          "$ref": "#/definitions/protoProductUsageRecordInvalidityReason"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidProductUsageRecordsFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvitationState": {
      "default": "INVITE_STATE_UNSPECIFIED",
      "enum": [
        "INVITE_STATE_UNSPECIFIED",
        "INVITE_STATE_PENDING_ACCEPT",
        "INVITE_STATE_ACCEPTED",
        "INVITE_STATE_REVOKED",
        "INVITE_STATE_EXPIRED",
        "INVITE_STATE_REJECTED",
        "INVITE_STATE_REMOVED"
      ],
      "type": "string"
    },
    "protoInvite": {
      "properties": {
        "expiry": {
          "format": "date-time",
          "type": "string"
        },
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "memberEmail": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInviteList": {
      "properties": {
        "canAddMoreMembers": {
          "type": "boolean"
        },
        "invites": {
          "items": {
            "$ref": "#/definitions/protoInvite"
          },
          "type": "array"
        },
        "memberCount": {
          "format": "int32",
          "type": "integer"
        },
        "membersLimit": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoInviteRequest": {
      "properties": {
        "cloudAccountRoleIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "expiry": {
          "format": "date-time",
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInviteRequestList": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "invites": {
          "items": {
            "$ref": "#/definitions/protoInviteRequest"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoInviteResendRequest": {
      "properties": {
        "adminAccountId": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInviteResendResponse": {
      "properties": {
        "blocked": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "retryLeft": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoInviteRevokeRequest": {
      "properties": {
        "adminAccountId": {
          "type": "string"
        },
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInviteUpdateRequest": {
      "properties": {
        "adminAccountId": {
          "type": "string"
        },
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvoice": {
      "properties": {
        "billingPeriod": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "downloadLink": {
          "type": "string"
        },
        "due": {
          "format": "double",
          "type": "number"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "uint64",
          "type": "string"
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "notifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "paid": {
          "format": "double",
          "type": "number"
        },
        "paidDate": {
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "statementLink": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "total": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoInvoiceDetail": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "rate": {
          "$ref": "#/definitions/protoRate"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "usage": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoK8sReleaseMD": {
      "properties": {
        "components": {
          "items": {
            "$ref": "#/definitions/protoReleaseComponents"
          },
          "type": "array"
        },
        "eolTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "eosTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "license": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "purl": {
          "type": "string"
        },
        "releaseId": {
          "type": "string"
        },
        "releaseTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "vendor": {
          "$ref": "#/definitions/protoValidVendors"
        }
      },
      "type": "object"
    },
    "protoK8sReleaseMDList": {
      "properties": {
        "releases": {
          "items": {
            "$ref": "#/definitions/protoK8sReleaseMD"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoK8sversionResponse": {
      "properties": {
        "cpimi": {
          "type": "string"
        },
        "major": {
          "type": "string"
        },
        "minor": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "releasename": {
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "workimi": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoKFStatus": {
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoKeyValue": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoKeyValuePair": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Generic Key-Value pair",
      "type": "object"
    },
    "protoKeyvaluepair": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoKubeFlowDeployment": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "deploymentID": {
          "type": "string"
        },
        "deploymentName": {
          "type": "string"
        },
        "k8sClusterID": {
          "type": "string"
        },
        "k8sClusterName": {
          "type": "string"
        },
        "kfVersion": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "storageClassName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLabelSelector": {
      "properties": {
        "matchLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "protoListAllServiceQuotaResponse": {
      "properties": {
        "allServicesQuotaResponse": {
          "items": {
            "$ref": "#/definitions/protoServiceQuotaResourceResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoListKubeFlowDeploymentResponse": {
      "properties": {
        "response": {
          "items": {
            "$ref": "#/definitions/protoKubeFlowDeployment"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoListServiceQuotaResponse": {
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceQuotaAllResources": {
          "items": {
            "$ref": "#/definitions/protoServiceQuotaResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoListSupportedModels": {
      "properties": {
        "models": {
          "items": {
            "$ref": "#/definitions/protoModel"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoListUsersByCloudAccountResponse": {
      "properties": {
        "users": {
          "items": {
            "$ref": "#/definitions/protoUser"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoLoadBalancer": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoLoadBalancerMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoLoadBalancerSpec"
        },
        "status": {
          "$ref": "#/definitions/protoLoadBalancerStatus"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerConditionsListenerStatus": {
      "properties": {
        "poolCreated": {
          "type": "boolean"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "vipCreated": {
          "type": "boolean"
        },
        "vipPoolLinked": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerConditionsStatus": {
      "properties": {
        "firewallRuleCreated": {
          "type": "boolean"
        },
        "listeners": {
          "items": {
            "$ref": "#/definitions/protoLoadBalancerConditionsListenerStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerListener": {
      "properties": {
        "pool": {
          "$ref": "#/definitions/protoLoadBalancerPool"
        },
        "port": {
          "description": "The public port of the load balancer.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerListenerStatus": {
      "properties": {
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "poolID": {
          "format": "int32",
          "type": "integer"
        },
        "poolMembers": {
          "items": {
            "$ref": "#/definitions/protoLoadBalancerPoolStatusMember"
          },
          "type": "array"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "vipID": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "creationTimestamp": {
          "description": "Not implemented.",
          "format": "date-time",
          "type": "string"
        },
        "deletionTimestamp": {
          "description": "Timestamp when resource was requested to be deleted.",
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize load balancers.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "resourceVersion can be provided with Update and Delete for concurrency control.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerMetadataCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize load balancers.",
          "type": "object"
        },
        "name": {
          "description": "Name will be generated if empty.",
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerMetadataReference": {
      "description": "A reference to a single load balancer.",
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerMetadataSearch": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If not empty, only return load balancers that have these key/value pairs.",
          "type": "object"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerMetadataUpdate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize load balancers.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerMonitorType": {
      "default": "tcp",
      "description": " - tcp: Healthcheck monitoring type utilizing TCP checks.\nDefault.\n - http: HTTP monitoring type expecting a \"200 OK\" HTTP Response.\n - https: HTTPS monitoring type expecting a \"200 OK\" HTTP Response.",
      "enum": [
        "tcp",
        "http",
        "https"
      ],
      "type": "string"
    },
    "protoLoadBalancerPool": {
      "properties": {
        "instanceResourceIds": {
          "description": "(Optional) Set of Instances to make up the members of the pool.\nOne of instances or instanceSelectors is valid.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "instanceSelectors": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "(Optional) Map of string keys and values that controls how the lb pool members are selected.\n One of instances or instanceSelectors is valid.",
          "type": "object"
        },
        "loadBalancingMode": {
          "$ref": "#/definitions/protoLoadBalancingMode"
        },
        "monitor": {
          "$ref": "#/definitions/protoLoadBalancerMonitorType"
        },
        "port": {
          "description": "The port to route traffic to each instance.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerPoolStatusMember": {
      "properties": {
        "instanceRef": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoLoadBalancer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerSecurity": {
      "properties": {
        "sourceips": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerSpec": {
      "properties": {
        "listeners": {
          "items": {
            "$ref": "#/definitions/protoLoadBalancerListener"
          },
          "type": "array"
        },
        "security": {
          "$ref": "#/definitions/protoLoadBalancerSecurity"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerSpecUpdate": {
      "properties": {
        "listeners": {
          "items": {
            "$ref": "#/definitions/protoLoadBalancerListener"
          },
          "type": "array"
        },
        "security": {
          "$ref": "#/definitions/protoLoadBalancerSecurity"
        }
      },
      "type": "object"
    },
    "protoLoadBalancerStatus": {
      "properties": {
        "conditions": {
          "$ref": "#/definitions/protoLoadBalancerConditionsStatus"
        },
        "listeners": {
          "items": {
            "$ref": "#/definitions/protoLoadBalancerListenerStatus"
          },
          "type": "array"
        },
        "message": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "vip": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLoadBalancers": {
      "properties": {
        "lbresponses": {
          "items": {
            "$ref": "#/definitions/protoLoadbalancerResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoLoadBalancingMode": {
      "default": "roundRobin",
      "description": " - roundRobin: Default.",
      "enum": [
        "roundRobin",
        "leastConnectionsMember"
      ],
      "type": "string"
    },
    "protoLoadbalancer": {
      "properties": {
        "backendports": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createddate": {
          "type": "string"
        },
        "frontendportd": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "lbname": {
          "type": "string"
        },
        "nodegrouptype": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "vip": {
          "type": "string"
        },
        "viptype": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLoadbalancerResponse": {
      "properties": {
        "lb": {
          "$ref": "#/definitions/protoLoadbalancer"
        },
        "lbid": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoLookupRequest": {
      "properties": {
        "action": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "resourceIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLookupRequestInternal": {
      "properties": {
        "action": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "resourceIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceType": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/protoUserIdentification"
        }
      },
      "type": "object"
    },
    "protoLookupResponse": {
      "properties": {
        "resourceIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMaasGenerateRequestParams": {
      "properties": {
        "maxNewTokens": {
          "format": "int64",
          "title": "/ Maximum number of generated tokens",
          "type": "integer"
        },
        "temperature": {
          "description": "/ The value used to module the logits distribution.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoMaasGenerateStreamRequest": {
      "properties": {
        "params": {
          "$ref": "#/definitions/protoMaasGenerateRequestParams"
        },
        "prompt": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMaasGenerateStreamResponse": {
      "properties": {
        "details": {
          "$ref": "#/definitions/protoStreamDetails"
        },
        "generatedText": {
          "title": "/ Complete generated text\n/ Only available when the generation is finished",
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "token": {
          "$ref": "#/definitions/protoAPIToken"
        },
        "topTokens": {
          "items": {
            "$ref": "#/definitions/protoAPIToken"
          },
          "title": "/ Most likely tokens",
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoMaasRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/protoMaasGenerateStreamRequest"
        }
      },
      "type": "object"
    },
    "protoMaasResponse": {
      "properties": {
        "response": {
          "$ref": "#/definitions/protoMaasGenerateStreamResponse"
        }
      },
      "type": "object"
    },
    "protoMachineImage": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoMachineImageMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoMachineImageSpec"
        }
      },
      "type": "object"
    },
    "protoMachineImageComponent": {
      "properties": {
        "description": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "infoUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMachineImageDeleteRequest": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoMachineImageDeleteRequestMetadata"
        }
      },
      "type": "object"
    },
    "protoMachineImageDeleteRequestMetadata": {
      "properties": {
        "name": {
          "description": "Unique name of the machine image.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMachineImageGetRequestMetadata": {
      "properties": {
        "name": {
          "description": "Unique name of the machine image.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMachineImageMetadata": {
      "properties": {
        "name": {
          "description": "Unique name of the machine image.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMachineImageSearchRequest": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoMachineImageSearchRequestMetadata"
        }
      },
      "type": "object"
    },
    "protoMachineImageSearchRequestMetadata": {
      "properties": {
        "instanceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMachineImageSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoMachineImage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoMachineImageSpec": {
      "properties": {
        "components": {
          "items": {
            "$ref": "#/definitions/protoMachineImageComponent"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "hidden": {
          "description": "If true, this machine image will not be returned by the MachineImageService.Search method but it can still be used to launch instances.",
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "imageCategories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "instanceCategories": {
          "description": "If not empty, this machine image is only compatible with the specified instance categories.",
          "items": {
            "$ref": "#/definitions/protoInstanceCategory"
          },
          "type": "array"
        },
        "instanceTypes": {
          "description": "If not empty, this machine image is only compatible with the specified instance types.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "md5sum": {
          "type": "string"
        },
        "sha256sum": {
          "type": "string"
        },
        "sha512sum": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "virtualSizeBytes": {
          "format": "uint64",
          "title": "The virtual image size (size of the disk in the guest). This can be determined with qemu-img info:\n  $ qemu-img info ubuntu-2204-jammy-v20250107.qcow2\n  virtual size: 10 GiB (10737418240 bytes)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMachineType": {
      "default": "SML_VM_TYPE",
      "enum": [
        "SML_VM_TYPE",
        "MED_VM_TYPE",
        "LRG_VM_TYPE",
        "PVC_BM_1100_4",
        "PVC_BM_1100_8",
        "PVC_BM_1550_8",
        "GAUDI_BM_TYPE",
        "UNKNOWN_TYPE"
      ],
      "type": "string"
    },
    "protoMemberAccount": {
      "properties": {
        "memberAccount": {
          "items": {
            "$ref": "#/definitions/protoMemberCloudAccount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoMemberCloudAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/protoAccountType"
        }
      },
      "type": "object"
    },
    "protoMemberPersonId": {
      "properties": {
        "memberEmail": {
          "type": "string"
        },
        "personId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMembers": {
      "properties": {
        "ipaddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoMemorySpec": {
      "properties": {
        "dimmCount": {
          "format": "int32",
          "type": "integer"
        },
        "dimmSize": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "speed": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoMessageResponse": {
      "properties": {
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "body": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "receiptHandle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMeteringAvailableFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "meteringDuration": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMeteringAvailableResponse": {
      "properties": {
        "meteringDataAvailable": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoMeteringFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMeteringRecord": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMeteringRecordInvalidityReason": {
      "default": "DEFAULT_INVALIDITY_REASON",
      "enum": [
        "DEFAULT_INVALIDITY_REASON",
        "MISSING_CLOUD_ACCOUNT_ID",
        "MISSING_TRANSACTION_ID",
        "MISSING_RESOURCE_NAME",
        "NO_MATCHING_PRODUCT",
        "DUPLICATE_TRANSACTION_ID",
        "INVALID_METERING_QTY",
        "INVALID_METERING_ENTRY",
        "FAILED_TO_CALCULATE_QTY",
        "FAILED_TO_GET_PRODUCT_RATE"
      ],
      "type": "string"
    },
    "protoMetrics": {
      "properties": {
        "metric": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMigratedCredits": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoModel": {
      "properties": {
        "modelName": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoNetwork": {
      "properties": {
        "clustercidr": {
          "type": "string"
        },
        "clusterdns": {
          "type": "string"
        },
        "enableloadbalancer": {
          "type": "boolean"
        },
        "region": {
          "type": "string"
        },
        "servicecidr": {
          "type": "string"
        }
      },
      "title": "Network",
      "type": "object"
    },
    "protoNetworkAdmin": {
      "properties": {
        "clustercidr": {
          "type": "string"
        },
        "loadbalancer": {
          "items": {
            "$ref": "#/definitions/protoLoadbalancer"
          },
          "type": "array"
        },
        "servicecidr": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoNetworkInterface": {
      "properties": {
        "name": {
          "description": "Name of the network interface as known by the operating system.\nNot implemented.",
          "type": "string"
        },
        "vNet": {
          "description": "Name of the VNet that the network interface connects to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoNode": {
      "properties": {
        "createddate": {
          "type": "string"
        },
        "dnsname": {
          "type": "string"
        },
        "imi": {
          "type": "string"
        },
        "ipaddress": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "wekaStorage": {
          "$ref": "#/definitions/protoWekaStorageStatusAdmin"
        }
      },
      "type": "object"
    },
    "protoNodeGroupResponse": {
      "properties": {
        "nodegroups": {
          "items": {
            "$ref": "#/definitions/protoNodeGroupResponseForm"
          },
          "type": "array"
        }
      },
      "title": "NodeGroupResponse",
      "type": "object"
    },
    "protoNodeGroupResponseForm": {
      "properties": {
        "annotations": {
          "items": {
            "$ref": "#/definitions/protoAnnotations"
          },
          "type": "array"
        },
        "clustertype": {
          "type": "string"
        },
        "clusteruuid": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "createddate": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "imiid": {
          "type": "string"
        },
        "instancetypeid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkinterfacename": {
          "type": "string"
        },
        "nodegroupstate": {
          "type": "string"
        },
        "nodegroupstatus": {
          "$ref": "#/definitions/protoNodegroupstatus"
        },
        "nodegrouptype": {
          "type": "string"
        },
        "nodegroupuuid": {
          "type": "string"
        },
        "nodes": {
          "items": {
            "$ref": "#/definitions/protoNodeStatus"
          },
          "type": "array"
        },
        "sshkeyname": {
          "items": {
            "$ref": "#/definitions/protoSshKey"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/protoKeyValuePair"
          },
          "type": "array"
        },
        "upgradeavailable": {
          "type": "boolean"
        },
        "upgradeimiid": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "upgradestrategy": {
          "$ref": "#/definitions/protoUpgradeStrategy"
        },
        "userdataurl": {
          "type": "string"
        },
        "vnets": {
          "items": {
            "$ref": "#/definitions/protoVnet"
          },
          "type": "array"
        }
      },
      "title": "NodeGroupResponseForm",
      "type": "object"
    },
    "protoNodeInstanceTypeStats": {
      "properties": {
        "InstanceTypeStats": {
          "items": {
            "$ref": "#/definitions/protoInstanceTypeStats"
          },
          "type": "array"
        },
        "nodeId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoNodeResources": {
      "description": "NodeResources describes the resource usage metrics of a node.",
      "properties": {
        "freeGPU": {
          "description": "Number of available GPUs.",
          "format": "int32",
          "type": "integer"
        },
        "freeMemoryBytes": {
          "description": "Amount of free memory in bytes.",
          "format": "int64",
          "type": "string"
        },
        "freeMilliCPU": {
          "description": "Amount of free CPU in milliunits.",
          "format": "int64",
          "type": "string"
        },
        "usedGPU": {
          "description": "Number of used GPUs.",
          "format": "int32",
          "type": "integer"
        },
        "usedMemoryBytes": {
          "description": "Amount of used memory in bytes.",
          "format": "int64",
          "type": "string"
        },
        "usedMilliCPU": {
          "description": "Amount of used CPU in milliunits.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoNodeRole": {
      "default": "COMPUTE_NODE",
      "enum": [
        "COMPUTE_NODE",
        "CONTROLLER_NODE",
        "JUPYTERHUB_NODE",
        "LOGIN_NODE",
        "UNKNOWN_ROLE"
      ],
      "type": "string"
    },
    "protoNodeStatus": {
      "properties": {
        "createddate": {
          "type": "string"
        },
        "dnsname": {
          "type": "string"
        },
        "errorcode": {
          "format": "int32",
          "type": "integer"
        },
        "imi": {
          "type": "string"
        },
        "instanceimi": {
          "type": "string"
        },
        "ipaddress": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "unschedulable": {
          "type": "boolean"
        },
        "wekaStorage": {
          "$ref": "#/definitions/protoWekaStorageStatus"
        }
      },
      "type": "object"
    },
    "protoNodegroup": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "imi": {
          "type": "string"
        },
        "imiupgradeavailable": {
          "type": "boolean"
        },
        "imiupgradeversions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "instancetype": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nodegroupsummary": {
          "$ref": "#/definitions/protoNodegroupSummary"
        },
        "nodegrouptype": {
          "type": "string"
        },
        "nodegrouptypename": {
          "type": "string"
        },
        "nodes": {
          "items": {
            "$ref": "#/definitions/protoNode"
          },
          "type": "array"
        },
        "nodgroupuuid": {
          "type": "string"
        },
        "releaseversion": {
          "type": "string"
        },
        "sshkey": {
          "items": {
            "$ref": "#/definitions/protoSshKey"
          },
          "type": "array"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoNodegroupSpec": {
      "properties": {
        "annotations": {
          "items": {
            "$ref": "#/definitions/protoAnnotations"
          },
          "type": "array"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "instancetypeid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nodegrouptype": {
          "type": "string"
        },
        "sshkeyname": {
          "items": {
            "$ref": "#/definitions/protoSshKey"
          },
          "type": "array"
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/protoKeyValuePair"
          },
          "type": "array"
        },
        "upgradestrategy": {
          "$ref": "#/definitions/protoUpgradeStrategy"
        },
        "userdataurl": {
          "type": "string"
        },
        "vnets": {
          "items": {
            "$ref": "#/definitions/protoVnet"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoNodegroupSummary": {
      "properties": {
        "activenodes": {
          "format": "int32",
          "type": "integer"
        },
        "deletingnodes": {
          "format": "int32",
          "type": "integer"
        },
        "errornodes": {
          "format": "int32",
          "type": "integer"
        },
        "provisioningnodes": {
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "NodegroupSummary",
      "type": "object"
    },
    "protoNodegroupstatus": {
      "properties": {
        "clusteruuid": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "errorcode": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nodegroupsummary": {
          "$ref": "#/definitions/protoNodegroupSummary"
        },
        "nodegroupuuid": {
          "type": "string"
        },
        "nodestatus": {
          "items": {
            "$ref": "#/definitions/protoNodeStatus"
          },
          "type": "array"
        },
        "reason": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "title": "Nodegroupstatus",
      "type": "object"
    },
    "protoNotification": {
      "properties": {
        "clientRecordId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "creation": {
          "format": "date-time",
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "notificationType": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "serviceName": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "receive a notification upon subscription",
      "type": "object"
    },
    "protoOSImages": {
      "properties": {
        "osimage": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectAccessCredentials": {
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectBucket": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoObjectBucketMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoObjectBucketSpec"
        },
        "status": {
          "$ref": "#/definitions/protoObjectBucketStatus"
        }
      },
      "type": "object"
    },
    "protoObjectBucketActions": {
      "default": "GetBucketLocation",
      "enum": [
        "GetBucketLocation",
        "GetBucketPolicy",
        "ListBucket",
        "ListBucketMultipartUploads",
        "ListMultipartUploadParts",
        "GetBucketTagging"
      ],
      "type": "string"
    },
    "protoObjectBucketCreateMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize instances.",
          "type": "object"
        },
        "name": {
          "description": "Name will be generated if empty.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectBucketMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "creationTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "deletionTimestamp": {
          "description": "Timestamp when resource was requested to be deleted.",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize instances.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "resourceVersion can be provided with Update and Delete for concurrency control.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectBucketMetadataRef": {
      "properties": {
        "bucketId": {
          "type": "string"
        },
        "bucketName": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectBucketSearchMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If not empty, only return instances that have these key/value pairs.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "protoObjectBucketSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoObjectBucket"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoObjectBucketSpec": {
      "properties": {
        "accessPolicy": {
          "$ref": "#/definitions/protoBucketAccessPolicy"
        },
        "availabilityZone": {
          "description": "Not implemented.",
          "type": "string"
        },
        "instanceType": {
          "title": "The name of the Instance type",
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/protoStorageCapacityRequest"
        },
        "versioned": {
          "title": "Is bucket should be versioned, cannot be changed later",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoObjectBucketStatus": {
      "properties": {
        "cluster": {
          "$ref": "#/definitions/protoObjectCluster"
        },
        "message": {
          "description": "Additional details about the state or any error conditions.",
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/protoBucketPhase"
        },
        "policy": {
          "$ref": "#/definitions/protoBucketPolicyStatus"
        },
        "securityGroup": {
          "$ref": "#/definitions/protoBucketSecurityGroup"
        }
      },
      "type": "object"
    },
    "protoObjectCluster": {
      "properties": {
        "accessEndpoint": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectUser": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoObjectUserMetadata"
        },
        "spec": {
          "items": {
            "$ref": "#/definitions/protoObjectUserPermissionSpec"
          },
          "type": "array"
        },
        "status": {
          "$ref": "#/definitions/protoObjectUserStatus"
        }
      },
      "type": "object"
    },
    "protoObjectUserMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "creationTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "deleteTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "updateTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectUserMetadataCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectUserMetadataRef": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectUserPermissionSpec": {
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/protoObjectBucketActions"
          },
          "type": "array"
        },
        "bucketId": {
          "type": "string"
        },
        "permission": {
          "items": {
            "$ref": "#/definitions/protoBucketPermission"
          },
          "type": "array"
        },
        "prefix": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoObjectUserPhase": {
      "default": "ObjectUserProvisioning",
      "description": " - ObjectUserProvisioning: The system is provisioning bucket.\nDefault.\n - ObjectUserReady: The user is provisioned and ready to mount.\n - ObjectUserDeleting: The user is in process of being deleted.\n - ObjectUserDeleted: The user is deleted.\n - ObjectUserFailed: The user creation failed.",
      "enum": [
        "ObjectUserProvisioning",
        "ObjectUserReady",
        "ObjectUserDeleting",
        "ObjectUserDeleted",
        "ObjectUserFailed"
      ],
      "type": "string"
    },
    "protoObjectUserSearchResponse": {
      "properties": {
        "users": {
          "items": {
            "$ref": "#/definitions/protoObjectUser"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoObjectUserStatus": {
      "properties": {
        "phase": {
          "$ref": "#/definitions/protoObjectUserPhase"
        },
        "principal": {
          "$ref": "#/definitions/protoAccessPrincipal"
        }
      },
      "type": "object"
    },
    "protoOtpRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoOtpState": {
      "default": "OTP_STATE_PENDING",
      "enum": [
        "OTP_STATE_PENDING",
        "OTP_STATE_ACCEPTED",
        "OTP_STATE_EXPIRED",
        "OTP_STATE_INVALID"
      ],
      "type": "string"
    },
    "protoOverridePoliciesAndValues": {
      "properties": {
        "overridePolicies": {
          "type": "boolean"
        },
        "overrideValues": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoPaymentMethodOther": {
      "type": "object"
    },
    "protoPaymentType": {
      "default": "PAYMENT_UNSPECIFIED",
      "enum": [
        "PAYMENT_UNSPECIFIED",
        "PAYMENT_CREDIT_CARD",
        "PAYMENT_OTHER"
      ],
      "type": "string"
    },
    "protoPolicyDetails": {
      "properties": {
        "policy": {
          "type": "object"
        },
        "policyMetadata": {
          "$ref": "#/definitions/protoPolicyMetadata"
        }
      },
      "type": "object"
    },
    "protoPolicyMetadata": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoPolicyRequest": {
      "properties": {
        "action": {
          "type": "string"
        },
        "expression": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoPostSnapshotResponse": {
      "properties": {
        "clusteruuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoPrePaymentResponse": {
      "properties": {
        "directPostUrl": {
          "type": "string"
        },
        "functionMode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProduct": {
      "properties": {
        "access": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "eccn": {
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "matchExpr": {
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "pcq": {
          "type": "string"
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/protoRate"
          },
          "type": "array"
        },
        "status": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductAccessRequest": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductAccessRequestV2": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductAccessResponse": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductAccessResponseV2": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductChangeRequestResponse": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "proposedData": {
          "$ref": "#/definitions/protoProposedData"
        },
        "requestStatus": {
          "$ref": "#/definitions/protoChangeRequestStatus"
        },
        "requestType": {
          "$ref": "#/definitions/protoChangeRequestType"
        },
        "requester": {
          "type": "string"
        },
        "reviewer": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductChangeRequestResponseList": {
      "properties": {
        "productChangeRequests": {
          "items": {
            "$ref": "#/definitions/protoProductChangeRequestResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoProductData": {
      "properties": {
        "accountTypesBlocked": {
          "type": "string"
        },
        "accountWhitelist": {
          "type": "boolean"
        },
        "billingEnable": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "displayCategory": {
          "type": "string"
        },
        "displayDesc": {
          "type": "string"
        },
        "displayHighlight": {
          "type": "string"
        },
        "displayInfo": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "eccn": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "familyId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "instanceCategory": {
          "type": "string"
        },
        "instanceMode": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "matchExpr": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pcq": {
          "type": "string"
        },
        "releaseStatus": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "usecase": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductFamily": {
      "properties": {
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductFilter": {
      "properties": {
        "accountType": {
          "$ref": "#/definitions/protoAccountType"
        },
        "eccn": {
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "matchExpr": {
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "pcq": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductInterest": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "productId": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductInterestRequest": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "productId": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductInterestResponse": {
      "properties": {
        "productInterests": {
          "items": {
            "$ref": "#/definitions/protoProductInterest"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoProductResponse": {
      "properties": {
        "products": {
          "items": {
            "$ref": "#/definitions/protoProduct"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoProductSpec": {
      "properties": {
        "access": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "eccn": {
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "matchExpr": {
          "type": "string"
        },
        "metadata": {
          "items": {
            "$ref": "#/definitions/protoKeyValue"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "pcq": {
          "type": "string"
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/protoDefaultRate"
          },
          "type": "array"
        },
        "status": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductStatus": {
      "default": "PRODUCT_STATUS_UNSPECIFIED",
      "enum": [
        "PRODUCT_STATUS_UNSPECIFIED",
        "PRODUCT_STATUS_READY",
        "PRODUCT_STATUS_PROVISIONING",
        "PRODUCT_STATUS_ERROR"
      ],
      "type": "string"
    },
    "protoProductUsage": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsageRecord": {
      "properties": {
        "cloudAccountId": {
          "description": "cloud account id the usage is associated with.",
          "type": "string"
        },
        "endTime": {
          "description": "start time and end time if applicable.",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "additional properties.",
          "type": "object"
        },
        "quantity": {
          "description": "usage quantity.",
          "format": "double",
          "type": "number"
        },
        "region": {
          "description": "region for which usage is being posted.",
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "description": "start time and end time if applicable.",
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "title": "time when the usage was measured,",
          "type": "string"
        },
        "transactionId": {
          "description": "client defined identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsageRecordCreate": {
      "properties": {
        "cloudAccountId": {
          "description": "cloud account id the usage is associated with.",
          "type": "string"
        },
        "endTime": {
          "description": "start time and end time if applicable.",
          "format": "date-time",
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "additional properties.",
          "type": "object"
        },
        "quantity": {
          "description": "usage quantity.",
          "format": "double",
          "type": "number"
        },
        "region": {
          "description": "region for which usage is being posted.",
          "type": "string"
        },
        "startTime": {
          "description": "start time and end time if applicable.",
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "title": "time when the usage was measured,",
          "type": "string"
        },
        "transactionId": {
          "description": "client defined identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsageRecordInvalidityReason": {
      "default": "DEFAULT_PRODUCT_USAGE_RECORD_INVALIDITY_REASON",
      "enum": [
        "DEFAULT_PRODUCT_USAGE_RECORD_INVALIDITY_REASON",
        "PRODUCT_USAGE_RECORD_MISSING_CLOUD_ACCOUNT_ID",
        "PRODUCT_USAGE_RECORD_MISSING_TRANSACTION_ID",
        "PRODUCT_USAGE_RECORD_NO_MATCHING_PRODUCT",
        "PRODUCT_USAGE_RECORD_DUPLICATE_TRANSACTION_ID",
        "PRODUCT_USAGE_RECORD_FAILED_TO_GET_PRODUCT_RATE"
      ],
      "type": "string"
    },
    "protoProductUsageRecordsFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsages": {
      "properties": {
        "productUsages": {
          "items": {
            "$ref": "#/definitions/protoProductUsage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoProductUsagesFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsagesReportFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUserFilter": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "productFilter": {
          "$ref": "#/definitions/protoProductFilter"
        }
      },
      "type": "object"
    },
    "protoProposedData": {
      "properties": {
        "product": {
          "$ref": "#/definitions/protoProductData"
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/protoRateData"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoProviders": {
      "properties": {
        "provider": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProvisioningLog": {
      "properties": {
        "logentry": {
          "type": "string"
        },
        "loglevel": {
          "type": "string"
        },
        "logobject": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        }
      },
      "title": "Provisioning Log Table",
      "type": "object"
    },
    "protoPublishEventRequest": {
      "properties": {
        "createEvent": {
          "$ref": "#/definitions/protoCreateEvent"
        },
        "subject": {
          "type": "string"
        },
        "topicName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoPublishEventResponse": {
      "properties": {
        "messageId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoQueryResourcesMetricsResponse": {
      "properties": {
        "response": {
          "items": {
            "$ref": "#/definitions/protoQueryResourcesMetricsResponseItem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoQueryResourcesMetricsResponseItem": {
      "properties": {
        "item": {
          "type": "string"
        },
        "queryvalue": {
          "items": {
            "$ref": "#/definitions/protoQueryvalue"
          },
          "type": "array"
        },
        "unit": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoQueryvalue": {
      "properties": {
        "epochtime": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoQuotaConfig": {
      "properties": {
        "limits": {
          "format": "int64",
          "type": "string"
        },
        "quotaUnit": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoQuotaScope": {
      "properties": {
        "scopeType": {
          "type": "string"
        },
        "scopeValue": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRate": {
      "properties": {
        "accountType": {
          "$ref": "#/definitions/protoAccountType"
        },
        "rate": {
          "type": "string"
        },
        "unit": {
          "$ref": "#/definitions/protoRateUnit"
        },
        "usageExpr": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRateData": {
      "properties": {
        "accountType": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "rate": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "usageExpr": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRateUnit": {
      "default": "RATE_UNIT_UNSPECIFIED",
      "description": "Expand as more product types such as storage and networking are added.",
      "enum": [
        "RATE_UNIT_UNSPECIFIED",
        "RATE_UNIT_DOLLARS_PER_MINUTE",
        "RATE_UNIT_DOLLARS_PER_TB_PER_HOUR",
        "RATE_UNIT_DOLLARS_PER_INFERENCE",
        "RATE_UNIT_DOLLARS_PER_MILLION_TOKENS"
      ],
      "type": "string"
    },
    "protoReceiveEventRequest": {
      "properties": {
        "eventName": {
          "type": "string"
        },
        "maxNumberOfMessages": {
          "format": "int64",
          "type": "string"
        },
        "queueName": {
          "type": "string"
        },
        "timeStamp": {
          "type": "string"
        },
        "waitTimeSeconds": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoReceiveEventResponse": {
      "properties": {
        "messageResponse": {
          "items": {
            "$ref": "#/definitions/protoMessageResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoRecommendationPolicy": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "policy": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "protoRecommendedVersion": {
      "properties": {
        "createdAt": {
          "type": "string"
        },
        "reason": {
          "type": "object"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegion": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "apiDns": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "vnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionAccessRequest": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "regionName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionAccessResponse": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "regionName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionFilter": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "apiDns": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionResponse": {
      "properties": {
        "regions": {
          "items": {
            "$ref": "#/definitions/protoRegion"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoRegionUser": {
      "properties": {
        "apiDns": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionUserFilter": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "regionFilter": {
          "$ref": "#/definitions/protoRegionFilter"
        }
      },
      "type": "object"
    },
    "protoRegionUserResponse": {
      "properties": {
        "regions": {
          "items": {
            "$ref": "#/definitions/protoRegionUser"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoRelatedAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRelatedAccounts": {
      "properties": {
        "relatedAccounts": {
          "items": {
            "$ref": "#/definitions/protoRelatedAccount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoReleaseComparisonFilter": {
      "properties": {
        "componentName": {
          "$ref": "#/definitions/protoReleaseComponent"
        },
        "currReleaseId": {
          "type": "string"
        },
        "newReleaseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoReleaseComponent": {
      "default": "UNSPECIFIED_COMPONENT",
      "enum": [
        "UNSPECIFIED_COMPONENT",
        "KUBERNETES",
        "CALICO",
        "CONTAINERD",
        "RUNC"
      ],
      "type": "string"
    },
    "protoReleaseComponents": {
      "properties": {
        "License": {
          "type": "string"
        },
        "ReleaseTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "purl": {
          "type": "string"
        },
        "releaseId": {
          "type": "string"
        },
        "sha256": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/protoComponentType"
        },
        "vendor": {
          "$ref": "#/definitions/protoValidVendors"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoReleaseFilter": {
      "properties": {
        "component": {
          "$ref": "#/definitions/protoReleaseComponent"
        },
        "top": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoReleases": {
      "properties": {
        "id": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoReportNodeStatisticsRequest": {
      "properties": {
        "schedulerNodeStatistics": {
          "description": "Collection of statistics for each node.",
          "items": {
            "$ref": "#/definitions/protoSchedulerNodeStatistics"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoReportProductUsage": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productUsageId": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "unReportedQuantity": {
          "format": "double",
          "type": "number"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoReportProductUsageId": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoReportProductUsageUpdate": {
      "properties": {
        "productUsageReportId": {
          "type": "string"
        },
        "unReportedQuantity": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoResourceDefinition": {
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/ResourceDefinitionAction"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceDefinitions": {
      "properties": {
        "resources": {
          "items": {
            "$ref": "#/definitions/protoResourceDefinition"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoResourceLimits": {
      "properties": {
        "maxclusterpercloudaccount": {
          "format": "int32",
          "type": "integer"
        },
        "maxclustervm": {
          "format": "int32",
          "type": "integer"
        },
        "maxnodegroupspercluster": {
          "format": "int32",
          "type": "integer"
        },
        "maxnodespernodegroup": {
          "format": "int32",
          "type": "integer"
        },
        "maxvipspercluster": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoResourceMetadata": {
      "properties": {
        "allowDelete": {
          "type": "boolean"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "creationTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "description": "A globally unique UUID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceMetadataCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Not implemented.",
          "type": "object"
        },
        "name": {
          "description": "If Name is not empty, it must be unique within the cloudAccountId.\nIt will be generated if empty.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceMetadataReference": {
      "description": "A reference to a single resource.",
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceMetadataSearch": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "protoResourceMeteringRecords": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "meteringRecords": {
          "items": {
            "$ref": "#/definitions/protoMeteringRecord"
          },
          "type": "array"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceMeteringRecordsList": {
      "properties": {
        "resourceMeteringRecordsList": {
          "items": {
            "$ref": "#/definitions/protoResourceMeteringRecords"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoResourcePatch": {
      "properties": {
        "gvr": {
          "$ref": "#/definitions/protoGroupVersionResource"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "title": "Labels to be patched onto the resource",
          "type": "object"
        },
        "namespace": {
          "title": "For BMaaS, this is the namespace of the Metal3 BareMetalHost resource. For VMaaS, this is an empty string",
          "type": "string"
        },
        "nodeName": {
          "title": "For VMaaS, this is the K8s node resource name. For BMaaS, this is the Metal3 BareMetalHost resource name",
          "type": "string"
        },
        "ownedLabelsRegex": {
          "description": "Regex which are currently present on the resource for the matching labels.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoResourceUsage": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "unReportedQuantity": {
          "format": "double",
          "type": "number"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceUsageCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceUsageCreateFailed": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceUsageId": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceUsageUpdate": {
      "properties": {
        "resourceUsageId": {
          "type": "string"
        },
        "unReportedQuantity": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoResourceUsages": {
      "properties": {
        "resourceUsages": {
          "items": {
            "$ref": "#/definitions/protoResourceUsage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoResourceUsagesFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourcetypes": {
      "properties": {
        "resourceId": {
          "format": "int32",
          "type": "integer"
        },
        "resourcetypes": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResponseData": {
      "properties": {
        "isAliasCreated": {
          "type": "boolean"
        },
        "isIndexCreated": {
          "type": "boolean"
        },
        "isTemplateCreated": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoReviewProductChangeRequestFilter": {
      "properties": {
        "approve": {
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoRoleRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "systemRole": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRunStrategy": {
      "default": "RerunOnFailure",
      "description": " - RerunOnFailure: Instance will initially be running. It will be restarted if a failure occurs.\nIf the instance powers itself off, it will not be restarted.\nDefault.\n - Halted: Instance should never be running.\n - Always: Instance should always be running.",
      "enum": [
        "RerunOnFailure",
        "Halted",
        "Always"
      ],
      "type": "string"
    },
    "protoRuntimes": {
      "properties": {
        "runtime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSBOM": {
      "properties": {
        "createTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "format": {
          "$ref": "#/definitions/protoValidSBOMFormats"
        },
        "sbom": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSchedulerAction": {
      "properties": {
        "action": {
          "$ref": "#/definitions/protoSchedulerActionType"
        }
      },
      "type": "object"
    },
    "protoSchedulerActionType": {
      "default": "START_CREDIT_INSTALL_SCHEDULER",
      "enum": [
        "START_CREDIT_INSTALL_SCHEDULER",
        "START_POST_USAGE_SCHEDULER",
        "START_ENT_LINK_SCHEDULER",
        "START_CREDIT_USAGE_SCHEDULER",
        "START_CREDIT_EXPIRY_SCHEDULER",
        "START_SERVICE_TERMINATION_SCHEDULER"
      ],
      "type": "string"
    },
    "protoSchedulerNode": {
      "description": "SchedulerNode represents the scheduling attributes of a node in a cluster.",
      "properties": {
        "availabilityZone": {
          "description": "Availability zone within the region.",
          "type": "string"
        },
        "clusterGroup": {
          "description": "Grouping of clusters.",
          "type": "string"
        },
        "clusterId": {
          "description": "Cluster identifier.",
          "type": "string"
        },
        "computeNodePools": {
          "items": {
            "type": "string"
          },
          "title": "Supported poolIds",
          "type": "array"
        },
        "namespace": {
          "description": "Namespace of the node.",
          "type": "string"
        },
        "networkMode": {
          "description": "Network mode (VV or VB).",
          "type": "string"
        },
        "nodeName": {
          "description": "Name of the node.",
          "type": "string"
        },
        "partition": {
          "description": "Partition within the cluster.",
          "type": "string"
        },
        "region": {
          "description": "Region of the node.",
          "type": "string"
        },
        "sourceGvr": {
          "$ref": "#/definitions/protoGroupVersionResource"
        }
      },
      "type": "object"
    },
    "protoSchedulerNodeStatistics": {
      "description": "SchedulerNodeStatistics encapsulates the configurations and current status of a single node.",
      "properties": {
        "instanceTypeStatistics": {
          "description": "Detailed statistics of instances by type.",
          "items": {
            "$ref": "#/definitions/protoInstanceTypeStatistics"
          },
          "type": "array"
        },
        "nodeResources": {
          "$ref": "#/definitions/protoNodeResources"
        },
        "schedulerNode": {
          "$ref": "#/definitions/protoSchedulerNode"
        }
      },
      "type": "object"
    },
    "protoSearchAllLogsResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoHits"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchCloudAccountsForComputeNodePoolResponse": {
      "properties": {
        "CloudAccountsForComputeNodePool": {
          "items": {
            "$ref": "#/definitions/protoCloudAccountForComputeNodePool"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchComputeNodePoolsForInstanceSchedulingResponse": {
      "properties": {
        "computeNodePools": {
          "items": {
            "$ref": "#/definitions/protoComputeNodePoolForInstanceScheduling"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchComputeNodePoolsForNodeAdminResponse": {
      "properties": {
        "computeNodePools": {
          "items": {
            "$ref": "#/definitions/protoComputeNodePool"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchComputeNodePoolsForPoolAccountManagerResponse": {
      "properties": {
        "ComputeNodePoolsForPoolAccountManager": {
          "items": {
            "$ref": "#/definitions/protoComputeNodePoolForPoolAccountManager"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchFilterCriteria": {
      "default": "Default",
      "enum": [
        "Default",
        "Any",
        "Empty",
        "NonEmpty",
        "ExactValue"
      ],
      "title": "- Default: Use the default behavior, which is described in the specific SearchFilterCriteria field.\n - Any: Return records with any value in this field (including empty).\n - Empty: Return records with an empty value in this field\n - NonEmpty: Return records with a non-empty value in this field\n - ExactValue: Return records with an exact value in this field",
      "type": "string"
    },
    "protoSearchInstanceTypeStatsForNodeResponse": {
      "properties": {
        "NodeInstanceTypeStats": {
          "items": {
            "$ref": "#/definitions/protoNodeInstanceTypeStats"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchLogsByFilterResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoHits"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchLogsByPhraseResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoHits"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchLogsByTermResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoHits"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchNodesResponse": {
      "properties": {
        "computeNodes": {
          "items": {
            "$ref": "#/definitions/SearchNodesResponseComputeNode"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSearchPanelDataResponse": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/protoBuckets"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSecuritySummary": {
      "properties": {
        "cisReport": {
          "type": "object"
        },
        "releaseId": {
          "type": "string"
        },
        "vulnerabilities": {
          "items": {
            "$ref": "#/definitions/protoVulnerabilitySummary"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSendEmailRequest": {
      "properties": {
        "bccRecipients": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ccRecipients": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "messageType": {
          "type": "string"
        },
        "recipient": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sender": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "templateData": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "templateName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSendInviteCodeRequest": {
      "properties": {
        "adminAccountId": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoServiceDetail": {
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoServiceName": {
      "default": "SERVICE_NAME_UNSPECIFIED",
      "enum": [
        "SERVICE_NAME_UNSPECIFIED",
        "BILLING",
        "CREDIT",
        "BILLING_DRIVER_ARIA",
        "BILLING_DRIVER_INTEL",
        "BILLING_DRIVER_STANDARD"
      ],
      "title": "this enum will go away when we have service registration",
      "type": "string"
    },
    "protoServiceQuotaRegistrationRequest": {
      "properties": {
        "region": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceResources": {
          "items": {
            "$ref": "#/definitions/protoServiceResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoServiceQuotaRegistrationResponse": {
      "properties": {
        "region": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceResources": {
          "items": {
            "$ref": "#/definitions/protoServiceResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoServiceQuotaResource": {
      "properties": {
        "createdTime": {
          "format": "date-time",
          "type": "string"
        },
        "quotaConfig": {
          "$ref": "#/definitions/protoQuotaConfig"
        },
        "reason": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/protoQuotaScope"
        },
        "updatedTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoServiceQuotaResourceResponse": {
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceQuotaResource": {
          "items": {
            "$ref": "#/definitions/protoServiceQuotaResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoServiceResource": {
      "properties": {
        "maxLimit": {
          "format": "int64",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "quotaUnit": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoServiceResourceResponse": {
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceResources": {
          "$ref": "#/definitions/protoServiceResource"
        }
      },
      "type": "object"
    },
    "protoServiceResourcesListResponse": {
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceResources": {
          "items": {
            "$ref": "#/definitions/protoServiceResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoServicesListResponse": {
      "properties": {
        "services": {
          "items": {
            "$ref": "#/definitions/protoServiceDetail"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSetProductStatus": {
      "properties": {
        "error": {
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/protoProductStatus"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSetProductStatusRequest": {
      "properties": {
        "status": {
          "items": {
            "$ref": "#/definitions/protoSetProductStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSlurmClusterCreateResponse": {
      "properties": {
        "clusterId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSlurmClusterResponse": {
      "properties": {
        "clusters": {
          "items": {
            "$ref": "#/definitions/protoClusterInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSnapshot": {
      "properties": {
        "created": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSourceData": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "clusterRegion": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "log": {
          "type": "string"
        },
        "systemComponent": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "timestamp1": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSshKey": {
      "properties": {
        "sshkey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSshProxyTunnelStatus": {
      "properties": {
        "proxyAddress": {
          "description": "The IP address or FQDN of the SSH proxy.",
          "type": "string"
        },
        "proxyPort": {
          "description": "The TCP port for the SSH proxy.",
          "format": "int32",
          "type": "integer"
        },
        "proxyUser": {
          "description": "The username required to connect to the SSH proxy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSshPublicKey": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoResourceMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoSshPublicKeySpec"
        }
      },
      "type": "object"
    },
    "protoSshPublicKeySearchRequest": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoResourceMetadataSearch"
        }
      },
      "type": "object"
    },
    "protoSshPublicKeySearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoSshPublicKey"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSshPublicKeySpec": {
      "properties": {
        "ownerEmail": {
          "type": "string"
        },
        "sshPublicKey": {
          "description": "SSH public key in authorized_keys format \"ssh-rsa ... comment\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoStatement": {
      "properties": {
        "mimeType": {
          "type": "string"
        },
        "statement": {
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoStates": {
      "properties": {
        "state": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoStorageAccessModeType": {
      "default": "STORAGE_READ_WRITE",
      "enum": [
        "STORAGE_READ_WRITE",
        "STORAGE_READ_ONLY",
        "STORAGE_READ_WRITE_ONCE",
        "STORAGE_ACCESS_UNKNOWN"
      ],
      "type": "string"
    },
    "protoStorageBucketUsageResponse": {
      "properties": {
        "accountType": {
          "title": "Storage tier",
          "type": "string"
        },
        "bucketSize": {
          "title": "Total provisioned size in TB",
          "type": "string"
        },
        "buckets": {
          "title": "Number of buckets",
          "type": "string"
        },
        "cloudAccountId": {
          "title": "Cloudaccount Id",
          "type": "string"
        },
        "clusterScheduled": {
          "title": "Cluster where bucket has been scheduled",
          "type": "string"
        },
        "email": {
          "title": "User email",
          "type": "string"
        },
        "region": {
          "title": "Region name",
          "type": "string"
        },
        "usedCapacity": {
          "title": "Used Capacity Bytes",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoStorageCapacityRequest": {
      "properties": {
        "size": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoStorageFilesystemUsageResponse": {
      "properties": {
        "accountType": {
          "title": "Storage tier",
          "type": "string"
        },
        "cloudAccountId": {
          "title": "Cloudaccount Id",
          "type": "string"
        },
        "clusterScheduled": {
          "title": "Cluster where filesystem has been scheduled",
          "type": "string"
        },
        "email": {
          "title": "User email",
          "type": "string"
        },
        "hasIksVolumes": {
          "title": "Whether storage has any IKS volumes",
          "type": "string"
        },
        "numFilesystems": {
          "title": "Number of filesystems",
          "type": "string"
        },
        "orgId": {
          "title": "Organization ID",
          "type": "string"
        },
        "region": {
          "title": "Region name",
          "type": "string"
        },
        "totalProvisioned": {
          "title": "Total provisioned size in TB",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoStorageGetResourceUsageResponse": {
      "properties": {
        "bucketUsages": {
          "items": {
            "$ref": "#/definitions/protoStorageBucketUsageResponse"
          },
          "type": "array"
        },
        "filesystemUsages": {
          "items": {
            "$ref": "#/definitions/protoStorageFilesystemUsageResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoStorageMountType": {
      "default": "STORAGE_WEKA",
      "enum": [
        "STORAGE_WEKA",
        "STORAGE_MOUNT_UNKNOWN"
      ],
      "type": "string"
    },
    "protoStorageNode": {
      "properties": {
        "accessMode": {
          "$ref": "#/definitions/protoStorageAccessModeType"
        },
        "capacity": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fsResourceId": {
          "type": "string"
        },
        "localMountDir": {
          "type": "string"
        },
        "mount": {
          "$ref": "#/definitions/protoStorageMountType"
        },
        "name": {
          "type": "string"
        },
        "remoteMountDir": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoStorageQuotaByAccount": {
      "properties": {
        "bucketsQuota": {
          "format": "int64",
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountType": {
          "type": "string"
        },
        "filesizeQuotaInTB": {
          "format": "int64",
          "type": "string"
        },
        "filevolumesQuota": {
          "format": "int64",
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoStorageQuotas": {
      "properties": {
        "defaultQuotaSection": {
          "items": {
            "$ref": "#/definitions/protoDefaultQuotaSection"
          },
          "type": "array"
        },
        "storageQuotaByAccount": {
          "items": {
            "$ref": "#/definitions/protoStorageQuotaByAccount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoStorageQuotasByAccount": {
      "properties": {
        "DefaultQuota": {
          "$ref": "#/definitions/protoStorageQuotaByAccount"
        },
        "UpdatedQuota": {
          "$ref": "#/definitions/protoStorageQuotaByAccount"
        }
      },
      "type": "object"
    },
    "protoStorageSpec": {
      "properties": {
        "enablestorage": {
          "type": "boolean"
        },
        "storagesize": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoStreamDetails": {
      "properties": {
        "finishReason": {
          "$ref": "#/definitions/protoFinishReason"
        },
        "generatedTokens": {
          "format": "int64",
          "title": "/ Number of generated tokens",
          "type": "integer"
        },
        "seed": {
          "format": "uint64",
          "title": "/ Sampling seed if sampling was activated",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSubnetMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "creationTimestamp": {
          "description": "Not implemented.",
          "format": "date-time",
          "type": "string"
        },
        "deletionTimestamp": {
          "description": "Timestamp when resource was requested to be deleted.",
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize subnets.\nThis can also be used by to evaluate placements for instances.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "resourceVersion can be provided with Update and Delete for concurrency control.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSubnetMetadataCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize instances.\nThis is also used by TopologySpreadConstraints.",
          "type": "object"
        },
        "name": {
          "description": "Name will be generated if empty.",
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSubnetMetadataReference": {
      "description": "A reference to a single subnet.",
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSubnetMetadataSearch": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If not empty, only return instances that have these key/value pairs.",
          "type": "object"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSubnetPhase": {
      "default": "SubnetPhase_Provisioning",
      "description": " - SubnetPhase_Provisioning: The system is creating the Subnet.\nDefault.\n - SubnetPhase_Ready: The subnet has been created.\n - SubnetPhase_Deleting: The subnet is being deleted.\n - SubnetPhase_Deleted: The subnet has been deleted.",
      "enum": [
        "SubnetPhase_Provisioning",
        "SubnetPhase_Ready",
        "SubnetPhase_Deleting",
        "SubnetPhase_Deleted"
      ],
      "type": "string"
    },
    "protoSubnetSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoVPCSubnet"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoSubnetSpec": {
      "properties": {
        "availabilityZone": {
          "type": "string"
        },
        "cidrBlock": {
          "type": "string"
        },
        "vpcId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSubnetStatus": {
      "properties": {
        "message": {
          "description": "Additional details about the state or any error conditions.",
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/protoSubnetPhase"
        }
      },
      "type": "object"
    },
    "protoSubscribeEventRequest": {
      "properties": {
        "protocol": {
          "type": "string"
        },
        "queueName": {
          "type": "string"
        },
        "topicName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSubscribeEventResponse": {
      "properties": {
        "subscriptionArn": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSystemRoleExistResponse": {
      "properties": {
        "exist": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoTopologySpreadConstraints": {
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/protoLabelSelector"
        }
      },
      "type": "object"
    },
    "protoTrainingRegistrationResponse": {
      "properties": {
        "expiryDate": {
          "type": "string"
        },
        "jupyterLoginInfo": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "sshLoginInfo": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoTriState": {
      "default": "Undefined",
      "enum": [
        "Undefined",
        "True",
        "False"
      ],
      "type": "string"
    },
    "protoUnappliedCreditBalance": {
      "properties": {
        "unappliedAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoUnappliedCredits": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "remainingAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoUpdateQuotaServiceResponse": {
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceQuotaResource": {
          "$ref": "#/definitions/protoServiceQuotaResource"
        }
      },
      "type": "object"
    },
    "protoUpdateRecommendations": {
      "properties": {
        "currentVersion": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "versions": {
          "items": {
            "$ref": "#/definitions/protoRecommendedVersion"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoUpdateStorageQuotaByAccountRequest": {
      "properties": {
        "bucketsQuota": {
          "format": "int64",
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "filesizeQuotaInTB": {
          "format": "int64",
          "type": "string"
        },
        "filevolumesQuota": {
          "format": "int64",
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUpgradeStatus": {
      "default": "UPGRADE_COMPLETE",
      "enum": [
        "UPGRADE_COMPLETE",
        "UPGRADE_NOT_INITIATED",
        "UPGRADE_PENDING",
        "UPGRADE_PENDING_CC",
        "UPGRADE_PENDING_CC_VERIFIED"
      ],
      "type": "string"
    },
    "protoUpgradeStrategy": {
      "properties": {
        "drainnodes": {
          "type": "boolean"
        },
        "maxunavailablepercentage": {
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "UpgradeStrategy",
      "type": "object"
    },
    "protoUsage": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUsageCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "resourceId": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUsageFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUsageUpdate": {
      "properties": {
        "id": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "reported": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoUsageV2": {
      "description": "Usage is taken by metering which is wrong.",
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "region": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUsages": {
      "properties": {
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalQuantity": {
          "format": "double",
          "type": "number"
        },
        "usages": {
          "items": {
            "$ref": "#/definitions/protoUsageV2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoUsagesFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUser": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountRoles": {
          "items": {
            "$ref": "#/definitions/protoUserCloudAccountRole"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "systemRoles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoUserCloudAccountRole": {
      "properties": {
        "alias": {
          "type": "string"
        },
        "cloudAccountRoleId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUserDetailed": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountRoles": {
          "items": {
            "$ref": "#/definitions/UserDetailedCloudAccountRoleDetailed"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "systemRoles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoUserIdentification": {
      "properties": {
        "email": {
          "type": "string"
        },
        "enterpriseId": {
          "type": "string"
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoUserRegistrationResponse": {
      "properties": {
        "response": {
          "$ref": "#/definitions/protoResponseData"
        }
      },
      "type": "object"
    },
    "protoUserRequest": {
      "properties": {
        "iksadminkey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUserResponse": {
      "properties": {
        "isAuthenticatedUser": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoVNet": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoVNetMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoVNetSpec"
        }
      },
      "type": "object"
    },
    "protoVNetDeleteRequestMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVNetGetRequestMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVNetMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVNetPutRequestMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVNetSearchRequest": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoVNetSearchRequestMetadata"
        }
      },
      "type": "object"
    },
    "protoVNetSearchRequestMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVNetSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoVNet"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoVNetSpec": {
      "properties": {
        "availabilityZone": {
          "type": "string"
        },
        "prefixLength": {
          "description": "The reserved subnet will have a prefix length with this value or less.",
          "format": "int32",
          "type": "integer"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVPC": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoVPCMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoVPCSpec"
        },
        "status": {
          "$ref": "#/definitions/protoVPCStatus"
        }
      },
      "type": "object"
    },
    "protoVPCMetadata": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "creationTimestamp": {
          "description": "Not implemented.",
          "format": "date-time",
          "type": "string"
        },
        "deletionTimestamp": {
          "description": "Timestamp when resource was requested to be deleted.",
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize vpcs.\nThis can also be used by to evaluate placements for instances.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "resourceVersion can be provided with Update and Delete for concurrency control.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVPCMetadataCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize instances.\nThis is also used by TopologySpreadConstraints.",
          "type": "object"
        },
        "name": {
          "description": "Name will be generated if empty.",
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVPCMetadataReference": {
      "description": "A reference to a single vpc.",
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVPCMetadataSearch": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If not empty, only return instances that have these key/value pairs.",
          "type": "object"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVPCMetadataUpdate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The entire set of labels will be replaced with these labels.\nNot implemented.",
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "reserved1": {
          "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceVersion": {
          "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVPCPhase": {
      "default": "VPCPhase_Provisioning",
      "description": " - VPCPhase_Provisioning: The system is creating the VPC.\nDefault.\n - VPCPhase_Ready: The VPC has been created.",
      "enum": [
        "VPCPhase_Provisioning",
        "VPCPhase_Ready"
      ],
      "type": "string"
    },
    "protoVPCSearchResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/protoVPC"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoVPCSpec": {
      "properties": {
        "cidrBlock": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVPCStatus": {
      "properties": {
        "message": {
          "description": "Additional details about the state or any error conditions.",
          "type": "string"
        },
        "phase": {
          "$ref": "#/definitions/protoVPCPhase"
        }
      },
      "type": "object"
    },
    "protoVPCSubnet": {
      "properties": {
        "metadata": {
          "$ref": "#/definitions/protoSubnetMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoSubnetSpec"
        },
        "status": {
          "$ref": "#/definitions/protoSubnetStatus"
        }
      },
      "type": "object"
    },
    "protoValidSBOMFormats": {
      "default": "UNSPECIFIED_FORMAT",
      "enum": [
        "UNSPECIFIED_FORMAT",
        "SPDX_FORMAT",
        "CYCLONEDX_FORMAT"
      ],
      "type": "string"
    },
    "protoValidVendors": {
      "default": "UNSPECIFIED_KUBE_VENDOR",
      "enum": [
        "UNSPECIFIED_KUBE_VENDOR",
        "OSS_KUBE_VENDOR",
        "RANCHER_KUBE_VENDOR"
      ],
      "type": "string"
    },
    "protoValidateInviteCodeRequest": {
      "properties": {
        "adminCloudAccountId": {
          "type": "string"
        },
        "inviteCode": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoValidateInviteCodeResponse": {
      "properties": {
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoVendor": {
      "properties": {
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "families": {
          "items": {
            "$ref": "#/definitions/protoProductFamily"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVendorRequest": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVendorResponse": {
      "properties": {
        "vendors": {
          "items": {
            "$ref": "#/definitions/protoVendor"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoVendorSpec": {
      "properties": {
        "description": {
          "type": "string"
        },
        "families": {
          "items": {
            "$ref": "#/definitions/protoDefaultFamily"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVerifyOtpRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        },
        "otpCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVerifyOtpResponse": {
      "properties": {
        "blocked": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "otpState": {
          "$ref": "#/definitions/protoOtpState"
        },
        "retryLeft": {
          "format": "int32",
          "type": "integer"
        },
        "validated": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoVipResponse": {
      "properties": {
        "description": {
          "type": "string"
        },
        "dnsalias": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "poolport": {
          "format": "int32",
          "type": "integer"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "vipid": {
          "format": "int32",
          "type": "integer"
        },
        "vipstate": {
          "type": "string"
        },
        "viptype": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVipStatus": {
      "properties": {
        "errorcode": {
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "poolid": {
          "format": "int32",
          "type": "integer"
        },
        "vipid": {
          "type": "string"
        },
        "vipstate": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVnet": {
      "properties": {
        "availabilityzonename": {
          "type": "string"
        },
        "networkinterfacevnetname": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVolumeNetworkGroup": {
      "properties": {
        "gateway": {
          "type": "string"
        },
        "prefixLength": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVolumeSecurityGroup": {
      "properties": {
        "networkFilterAllow": {
          "items": {
            "$ref": "#/definitions/protoVolumeNetworkGroup"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoVulnerabilitiesResult": {
      "properties": {
        "report": {
          "items": {
            "$ref": "#/definitions/protoVulnerabilityReport"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoVulnerabilitiesWrapper": {
      "properties": {
        "Vulns": {
          "items": {
            "$ref": "#/definitions/protoVulnerability"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoVulnerability": {
      "properties": {
        "Id": {
          "type": "string"
        },
        "affectedPackage": {
          "type": "string"
        },
        "affectedVersions": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fixedVersion": {
          "type": "string"
        },
        "publishedAt": {
          "format": "date-time",
          "type": "string"
        },
        "severity": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVulnerabilityComparisonReport": {
      "properties": {
        "report": {
          "items": {
            "$ref": "#/definitions/protoVulnerabilityComparisonSummary"
          },
          "type": "array"
        },
        "summary": {
          "items": {
            "$ref": "#/definitions/protoVulnerabilityDiscovery"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoVulnerabilityComparisonSummary": {
      "properties": {
        "common": {
          "$ref": "#/definitions/protoVulnerabilitiesWrapper"
        },
        "componentName": {
          "type": "string"
        },
        "currComponentSHA256": {
          "type": "string"
        },
        "currReleaseId": {
          "type": "string"
        },
        "currScanTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "fixed": {
          "$ref": "#/definitions/protoVulnerabilitiesWrapper"
        },
        "new": {
          "$ref": "#/definitions/protoVulnerabilitiesWrapper"
        },
        "newComponentSHA256": {
          "type": "string"
        },
        "newReleaseId": {
          "type": "string"
        },
        "newScanTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "scanTool": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVulnerabilityDiscovery": {
      "properties": {
        "common": {
          "format": "int64",
          "type": "integer"
        },
        "component": {
          "type": "string"
        },
        "fixed": {
          "format": "int64",
          "type": "integer"
        },
        "new": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoVulnerabilityReport": {
      "properties": {
        "componentName": {
          "type": "string"
        },
        "componentSHA256": {
          "type": "string"
        },
        "componentVersion": {
          "type": "string"
        },
        "releaseId": {
          "type": "string"
        },
        "scanTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "scanTool": {
          "type": "string"
        },
        "vulnerabilities": {
          "items": {
            "$ref": "#/definitions/protoVulnerability"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoVulnerabilitySummary": {
      "properties": {
        "componentName": {
          "type": "string"
        },
        "componentSHA256": {
          "type": "string"
        },
        "componentVersion": {
          "type": "string"
        },
        "releaseId": {
          "type": "string"
        },
        "scanTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "scanTool": {
          "type": "string"
        },
        "vulnerabilityCount": {
          "additionalProperties": {
            "format": "int64",
            "type": "integer"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "protoWekaStorageStatus": {
      "properties": {
        "clientId": {
          "type": "string"
        },
        "customStatus": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoWekaStorageStatusAdmin": {
      "properties": {
        "clientId": {
          "type": "string"
        },
        "customStatus": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protobufAny": {
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
      "properties": {
        "@type": {
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protobufNullValue": {
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value.",
      "enum": [
        "NULL_VALUE"
      ],
      "type": "string"
    },
    "rpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of\n[google.rpc.Code][google.rpc.Code].",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized\nby the client.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "info": {
    "title": "Intel Developer Cloud: Complete API",
    "version": "version not set"
  },
  "paths": {
    "/proto.AuthzService/Check": {
      "post": {
        "operationId": "AuthzService_Check",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoAuthorizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAuthorizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Verifies if the user, based on the provided token, and http request information, has the necessary authorization to perform the specified action.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.AuthzService/CheckInternal": {
      "post": {
        "operationId": "AuthzService_CheckInternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoAuthorizationRequestInternal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAuthorizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Internal verification call to determine if a specific user has the required authorization to execute the given action. This is intended for use by internal clients.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.AuthzService/Lookup": {
      "post": {
        "operationId": "AuthzService_Lookup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLookupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLookupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Check if the user has the necessary authorization to perform the specified action given multiple resource IDs.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.AuthzService/LookupInternal": {
      "post": {
        "operationId": "AuthzService_LookupInternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLookupRequestInternal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLookupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Internal verification call if a specific user has the necessary authorization to perform the specified action given multiple resource IDs. This is intended for use by internal clients.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.AuthzService/SystemRoleExists": {
      "post": {
        "operationId": "AuthzService_SystemRoleExists",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSystemRoleExistResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.BillingCreditService/ReadInternal": {
      "post": {
        "operationId": "BillingCreditService_ReadInternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoBillingCredit"
                }
              },
              "title": "Stream result of protoBillingCredit",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/proto.BillingDeactivateInstancesService/Ping": {
      "post": {
        "operationId": "BillingDeactivateInstancesService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "BillingDeactivateInstancesService"
        ]
      }
    },
    "/proto.CloudCreditsCreditService/ReadInternal": {
      "post": {
        "operationId": "CloudCreditsCreditService_ReadInternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoCredit"
                }
              },
              "title": "Stream result of protoCredit",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/proto.Dispatcher/DoWork": {
      "post": {
        "operationId": "Dispatcher_DoWork",
        "parameters": [
          {
            "description": " (streaming inputs)",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDispatcherResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDispatcherRequest"
                }
              },
              "title": "Stream result of protoDispatcherRequest",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "DoWork is the agent entry point",
        "tags": [
          "Dispatcher"
        ]
      }
    },
    "/proto.DpaiDeploymentService/Ping": {
      "post": {
        "operationId": "DpaiDeploymentService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "DpaiDeploymentService"
        ]
      }
    },
    "/proto.DpaiPostgresSizeService/DpaiPostgresSizeCreate": {
      "post": {
        "operationId": "DpaiPostgresSizeService_DpaiPostgresSizeCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresSizeCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DpaiPostgresSizeService"
        ]
      }
    },
    "/proto.DpaiPostgresSizeService/DpaiPostgresSizeDelete": {
      "post": {
        "operationId": "DpaiPostgresSizeService_DpaiPostgresSizeDelete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresSizeDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresSizeDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DpaiPostgresSizeService"
        ]
      }
    },
    "/proto.DpaiPostgresSizeService/DpaiPostgresSizeUpdate": {
      "post": {
        "operationId": "DpaiPostgresSizeService_DpaiPostgresSizeUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresSizeUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DpaiPostgresSizeService"
        ]
      }
    },
    "/proto.DpaiPostgresVersionService/DpaiPostgresVersionCreate": {
      "post": {
        "operationId": "DpaiPostgresVersionService_DpaiPostgresVersionCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersionCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DpaiPostgresVersionService"
        ]
      }
    },
    "/proto.DpaiPostgresVersionService/DpaiPostgresVersionDelete": {
      "post": {
        "operationId": "DpaiPostgresVersionService_DpaiPostgresVersionDelete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersionDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersionDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DpaiPostgresVersionService"
        ]
      }
    },
    "/proto.DpaiPostgresVersionService/DpaiPostgresVersionUpdate": {
      "post": {
        "operationId": "DpaiPostgresVersionService_DpaiPostgresVersionUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersionUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DpaiPostgresVersionService"
        ]
      }
    },
    "/proto.FileStorageService/Ping": {
      "post": {
        "operationId": "FileStorageService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "FileStorageService"
        ]
      }
    },
    "/proto.FleetAdminService/GetResourcePatches": {
      "post": {
        "operationId": "FleetAdminService_GetResourcePatches",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoGetResourcePatchesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetResourcePatchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the list of patches which needs to be applied on the resource (Nodes/BaremetalHosts)",
        "tags": [
          "FleetAdminService"
        ]
      }
    },
    "/proto.FleetAdminService/ReportNodeStatistics": {
      "post": {
        "operationId": "FleetAdminService_ReportNodeStatistics",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReportNodeStatisticsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Sync the Fleet Admin DB with latest NodeStatistics",
        "tags": [
          "FleetAdminService"
        ]
      }
    },
    "/proto.GlobalOperationsService/Ping": {
      "post": {
        "operationId": "GlobalOperationsService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "GlobalOperationsService"
        ]
      }
    },
    "/proto.Iks/GetKubeConfig": {
      "post": {
        "operationId": "Iks_GetKubeConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoClusterID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetKubeconfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Deprecated: Use RetrieveKubeConfig instead.",
        "tags": [
          "Iks"
        ]
      }
    },
    "/proto.InstanceGroupService/Ping": {
      "post": {
        "operationId": "InstanceGroupService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "InstanceGroupService"
        ]
      }
    },
    "/proto.InstanceService/Ping": {
      "post": {
        "operationId": "InstanceService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "InstanceService"
        ]
      }
    },
    "/proto.InstanceTypeService/Delete": {
      "post": {
        "operationId": "InstanceTypeService_Delete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInstanceTypeDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete an instance typ.",
        "tags": [
          "InstanceTypeService"
        ]
      }
    },
    "/proto.InstanceTypeService/Put": {
      "post": {
        "operationId": "InstanceTypeService_Put",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInstanceType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create or update an instance type.",
        "tags": [
          "InstanceTypeService"
        ]
      }
    },
    "/proto.InstanceTypeService/SearchStream": {
      "post": {
        "operationId": "InstanceTypeService_SearchStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInstanceTypeSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoInstanceType"
                }
              },
              "title": "Stream result of protoInstanceType",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List instance types as a stream.",
        "tags": [
          "InstanceTypeService"
        ]
      }
    },
    "/proto.LoadBalancerService/Ping": {
      "post": {
        "operationId": "LoadBalancerService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "LoadBalancerService"
        ]
      }
    },
    "/proto.MachineImageService/Delete": {
      "post": {
        "operationId": "MachineImageService_Delete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMachineImageDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete a machine image.",
        "tags": [
          "MachineImageService"
        ]
      }
    },
    "/proto.MachineImageService/Put": {
      "post": {
        "operationId": "MachineImageService_Put",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMachineImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create or update a machine image.",
        "tags": [
          "MachineImageService"
        ]
      }
    },
    "/proto.MachineImageService/SearchStream": {
      "post": {
        "operationId": "MachineImageService_SearchStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMachineImageSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoMachineImage"
                }
              },
              "title": "Stream result of protoMachineImage",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List machine images as a stream.",
        "tags": [
          "MachineImageService"
        ]
      }
    },
    "/proto.MeteringService/Ping": {
      "post": {
        "operationId": "MeteringService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/proto.MeteringService/SearchResourceMeteringRecords": {
      "post": {
        "operationId": "MeteringService_SearchResourceMeteringRecords",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMeteringFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceMeteringRecordsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "this API is only for internal use, please DO NOT expose as a external API as it is not RESTful",
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/proto.NotificationGatewayService/Create": {
      "post": {
        "operationId": "NotificationGatewayService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "register as a event provider",
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/proto.NotificationGatewayService/sendEmailNotification": {
      "post": {
        "operationId": "NotificationGatewayService_sendEmailNotification",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Send email notifications",
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/proto.ObjectStorageService/Ping": {
      "post": {
        "operationId": "ObjectStorageService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/proto.ProductCatalogService/Ping": {
      "post": {
        "operationId": "ProductCatalogService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/proto.ProductCatalogService/SetStatus": {
      "post": {
        "operationId": "ProductCatalogService_SetStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSetProductStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/proto.ProductCatalogServiceV2/Ping": {
      "post": {
        "operationId": "ProductCatalogServiceV2_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/proto.ProductCatalogServiceV2/SetStatus": {
      "post": {
        "operationId": "ProductCatalogServiceV2_SetStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSetProductStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/proto.ProductSyncService/Delete": {
      "post": {
        "operationId": "ProductSyncService_Delete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultProductDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductSyncService"
        ]
      }
    },
    "/proto.ProductSyncService/Put": {
      "post": {
        "operationId": "ProductSyncService_Put",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductSyncService"
        ]
      }
    },
    "/proto.ProductSyncService/SearchStream": {
      "post": {
        "operationId": "ProductSyncService_SearchStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultProductSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDefaultProduct"
                }
              },
              "title": "Stream result of protoDefaultProduct",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductSyncService"
        ]
      }
    },
    "/proto.SshPublicKeyService/SearchStream": {
      "post": {
        "operationId": "SshPublicKeyService_SearchStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSshPublicKeySearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoSshPublicKey"
                }
              },
              "title": "Stream result of protoSshPublicKey",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List stored SSH public keys as a stream.\nWarning: This does not work with OpenAPI client.\nInternal-use only.",
        "tags": [
          "SshPublicKeyService"
        ]
      }
    },
    "/proto.SubnetService/Ping": {
      "post": {
        "operationId": "SubnetService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "SubnetService"
        ]
      }
    },
    "/proto.UsageRecordService/Ping": {
      "post": {
        "operationId": "UsageRecordService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "UsageRecordService"
        ]
      }
    },
    "/proto.UsageService/MarkProductUsageAsReported": {
      "post": {
        "operationId": "UsageService_MarkProductUsageAsReported",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReportProductUsageId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/proto.UsageService/MarkResourceUsageAsReported": {
      "post": {
        "operationId": "UsageService_MarkResourceUsageAsReported",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsageId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/proto.UsageService/Ping": {
      "post": {
        "operationId": "UsageService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "UsageService"
        ]
      }
    },
    "/proto.UsageService/UpdateProductUsageReport": {
      "post": {
        "operationId": "UsageService_UpdateProductUsageReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReportProductUsageUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/proto.UserCredentialsService/Ping": {
      "post": {
        "operationId": "UserCredentialsService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/proto.VNetService/Ping": {
      "post": {
        "operationId": "VNetService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "VNetService"
        ]
      }
    },
    "/proto.VNetService/SearchStream": {
      "post": {
        "operationId": "VNetService_SearchStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoVNetSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoVNet"
                }
              },
              "title": "Stream result of protoVNet",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List stored VNets as a stream.",
        "tags": [
          "VNetService"
        ]
      }
    },
    "/proto.VPCService/Ping": {
      "post": {
        "operationId": "VPCService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "VPCService"
        ]
      }
    },
    "/proto.VendorSyncService/Delete": {
      "post": {
        "operationId": "VendorSyncService_Delete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultVendortDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorSyncService"
        ]
      }
    },
    "/proto.VendorSyncService/Put": {
      "post": {
        "operationId": "VendorSyncService_Put",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultVendor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorSyncService"
        ]
      }
    },
    "/proto.VendorSyncService/SearchStream": {
      "post": {
        "operationId": "VendorSyncService_SearchStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultVendorSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDefaultVendor"
                }
              },
              "title": "Stream result of protoDefaultVendor",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorSyncService"
        ]
      }
    },
    "/v1/api/pc/products": {
      "post": {
        "operationId": "ProductCatalogServiceV2_UserReadExternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "external user read call",
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/v1/api/products": {
      "post": {
        "operationId": "ProductCatalogService_UserReadExternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "external user read call",
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/v1/authorization/actions": {
      "post": {
        "operationId": "AuthzService_Actions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoActionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoActionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieves the actions that a user can perform on a resource. Requires a user token for authorization.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles": {
      "get": {
        "operationId": "AuthzService_QueryCloudAccountRoles",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountRoles"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "post": {
        "operationId": "AuthzService_CreateCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "alias": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "deletedAt": {
                  "type": "string"
                },
                "effect": {
                  "$ref": "#/definitions/protoCloudAccountRoleEffect"
                },
                "id": {
                  "type": "string"
                },
                "permissions": {
                  "items": {
                    "$ref": "#/definitions/protoCloudAccountRolePermission"
                  },
                  "type": "array"
                },
                "updatedAt": {
                  "type": "string"
                },
                "users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/default": {
      "get": {
        "operationId": "AuthzService_DefaultCloudAccountRoleAssigned",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDefaultCloudAccountRoleAssignedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Internal method called only by cloudaccount-enroll",
        "tags": [
          "AuthzService"
        ]
      },
      "post": {
        "operationId": "AuthzService_AssignDefaultCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "admins": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "members": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Internal method called only by cloudaccount-enroll",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{cloudAccountRoleId}/permissions": {
      "post": {
        "operationId": "AuthzService_AddPermissionToCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "cloudAccountRoleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "permission": {
                  "$ref": "#/definitions/protoCloudAccountRolePermission"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{cloudAccountRoleId}/permissions/{id}": {
      "delete": {
        "operationId": "AuthzService_RemovePermissionFromCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "cloudAccountRoleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{cloudAccountRoleId}/permissions/{permission.id}": {
      "put": {
        "operationId": "AuthzService_UpdatePermissionCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "cloudAccountRoleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "permission.id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "permission": {
                  "properties": {
                    "actions": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "resourceId": {
                      "type": "string"
                    },
                    "resourceType": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{id}": {
      "delete": {
        "operationId": "AuthzService_RemoveCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "get": {
        "operationId": "AuthzService_GetCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "put": {
        "operationId": "AuthzService_UpdateCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "alias": {
                  "type": "string"
                },
                "effect": {
                  "$ref": "#/definitions/protoCloudAccountRoleUpdateEffect"
                },
                "permissions": {
                  "items": {
                    "$ref": "#/definitions/protoCloudAccountRoleUpdatePermission"
                  },
                  "type": "array"
                },
                "users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{id}/resources": {
      "delete": {
        "operationId": "AuthzService_RemoveResourceFromCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{id}/users": {
      "delete": {
        "operationId": "AuthzService_RemoveUserFromCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "post": {
        "operationId": "AuthzService_AddUserToCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/users": {
      "get": {
        "operationId": "AuthzService_ListUsersByCloudAccount",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListUsersByCloudAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/users/{userId}": {
      "get": {
        "operationId": "AuthzService_GetUser",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUserDetailed"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/users/{userId}/roles": {
      "post": {
        "operationId": "AuthzService_AddCloudAccountRolesToUser",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "cloudAccountRoleIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "put": {
        "operationId": "AuthzService_RemoveCloudAccountRolesFromUser",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "cloudAccountRoleIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/ping": {
      "get": {
        "operationId": "AuthzService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/policies/create": {
      "post": {
        "operationId": "AuthzService_CreatePolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/policies/remove": {
      "post": {
        "operationId": "AuthzService_RemovePolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/resources": {
      "get": {
        "operationId": "AuthzService_ListResourceDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceDefinitions"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/system_role/assign": {
      "post": {
        "operationId": "AuthzService_AssignSystemRole",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/system_role/unassign": {
      "post": {
        "operationId": "AuthzService_UnassignSystemRole",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/billing/accounts": {
      "post": {
        "operationId": "BillingAccountService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/v1/billing/accounts/downgrade": {
      "post": {
        "operationId": "BillingAccountService_DowngradePremiumtoStandard",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingAccountDowngrade"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/v1/billing/event/dismiss": {
      "post": {
        "operationId": "NotificationGatewayService_DismissEvent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoEventsFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/billing/events/all": {
      "get": {
        "operationId": "NotificationGatewayService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clientRecordId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoEvents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "this will be short lived - short polling",
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/billing/events/subscribe": {
      "post": {
        "operationId": "NotificationGatewayService_Subscribe",
        "parameters": [
          {
            "in": "query",
            "name": "clientId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoEvents"
                }
              },
              "title": "Stream result of protoEvents",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "to subscribe to long polling",
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/billing/instances/deactivate": {
      "get": {
        "operationId": "BillingDeactivateInstancesService_GetDeactivateInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeactivateInstancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingDeactivateInstancesService"
        ]
      }
    },
    "/v1/billing/instances/deactivate/stream": {
      "get": {
        "operationId": "BillingDeactivateInstancesService_GetDeactivateInstancesStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDeactivateInstancesResponse"
                }
              },
              "title": "Stream result of protoDeactivateInstancesResponse",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingDeactivateInstancesService"
        ]
      }
    },
    "/v1/billing/invoices": {
      "get": {
        "operationId": "BillingInvoiceService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "uint64",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "searchStart",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "searchEnd",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingInvoiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInvoiceService"
        ]
      }
    },
    "/v1/billing/invoices/detail": {
      "get": {
        "operationId": "BillingInvoiceService_ReadDetail",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "invoiceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoInvoiceDetail"
                }
              },
              "title": "Stream result of protoInvoiceDetail",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInvoiceService"
        ]
      }
    },
    "/v1/billing/invoices/statement": {
      "get": {
        "operationId": "BillingInvoiceService_ReadStatement",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "invoiceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoStatement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInvoiceService"
        ]
      }
    },
    "/v1/billing/invoices/unbilled": {
      "get": {
        "operationId": "BillingInvoiceService_ReadUnbilled",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoInvoiceDetail"
                }
              },
              "title": "Stream result of protoInvoiceDetail",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInvoiceService"
        ]
      }
    },
    "/v1/billing/ops/actions/scheduler": {
      "post": {
        "operationId": "BillingOpsActionService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSchedulerAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingOpsActionService"
        ]
      }
    },
    "/v1/billing/options": {
      "get": {
        "operationId": "BillingOptionService_Read",
        "parameters": [
          {
            "format": "uint64",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "startTime",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "endTime",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingOption"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingOptionService"
        ]
      }
    },
    "/v1/billing/paid/instancetypes": {
      "get": {
        "operationId": "BillingInstancesService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingPaidInstanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInstancesService"
        ]
      }
    },
    "/v1/billing/payments/postpayment": {
      "get": {
        "operationId": "PaymentService_AddPaymentPostProcessing",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "primaryPaymentMethodNo",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Implements update_acct_billing_group_m",
        "tags": [
          "PaymentService"
        ]
      }
    },
    "/v1/billing/payments/prepayment": {
      "get": {
        "operationId": "PaymentService_AddPaymentPreProcessing",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoPrePaymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Implements assign_collections_acct_group_m, set_session_m",
        "tags": [
          "PaymentService"
        ]
      }
    },
    "/v1/billing/rates": {
      "get": {
        "operationId": "BillingRateService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoBillingRate"
                }
              },
              "title": "Stream result of protoBillingRate",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingRateService"
        ]
      }
    },
    "/v1/billing/service/deactivate": {
      "get": {
        "operationId": "BillingDeactivateInstancesService_GetDeactivatedServiceAccounts",
        "parameters": [
          {
            "in": "query",
            "name": "productFamily",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cleanupThreshold",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tradeRestricted",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDeactivateAccounts"
                }
              },
              "title": "Stream result of protoDeactivateAccounts",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingDeactivateInstancesService"
        ]
      }
    },
    "/v1/billing/sync": {
      "post": {
        "operationId": "BillingProductCatalogSyncService_Sync",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingProductCatalogSyncService"
        ]
      }
    },
    "/v1/billing/usages": {
      "get": {
        "operationId": "BillingUsageService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "searchStart",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "searchEnd",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingUsageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingUsageService"
        ]
      }
    },
    "/v1/cloudaccount/ping": {
      "get": {
        "operationId": "CloudAccountService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts": {
      "get": {
        "operationId": "CloudAccountService_Search",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "parentId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tid",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "oid",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "created",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "owner",
            "required": false,
            "type": "string"
          },
          {
            "default": "ACCOUNT_TYPE_UNSPECIFIED",
            "enum": [
              "ACCOUNT_TYPE_UNSPECIFIED",
              "ACCOUNT_TYPE_STANDARD",
              "ACCOUNT_TYPE_PREMIUM",
              "ACCOUNT_TYPE_ENTERPRISE_PENDING",
              "ACCOUNT_TYPE_ENTERPRISE",
              "ACCOUNT_TYPE_INTEL",
              "ACCOUNT_TYPE_MEMBER"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "billingAccountCreated",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "enrolled",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "lowCredits",
            "required": false,
            "type": "boolean"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "creditsDepleted",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "terminatePaidServices",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "terminateMessageQueued",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "personId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "countryCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "paidServicesAllowed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "restricted",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "adminName",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "accessLimitedTimestamp",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tradeRestricted",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "UPGRADE_COMPLETE",
            "enum": [
              "UPGRADE_COMPLETE",
              "UPGRADE_NOT_INITIATED",
              "UPGRADE_PENDING",
              "UPGRADE_PENDING_CC",
              "UPGRADE_PENDING_CC_VERIFIED"
            ],
            "in": "query",
            "name": "upgradedToPremium",
            "required": false,
            "type": "string"
          },
          {
            "default": "UPGRADE_COMPLETE",
            "enum": [
              "UPGRADE_COMPLETE",
              "UPGRADE_NOT_INITIATED",
              "UPGRADE_PENDING",
              "UPGRADE_PENDING_CC",
              "UPGRADE_PENDING_CC_VERIFIED"
            ],
            "in": "query",
            "name": "upgradedToEnterprise",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoCloudAccount"
                }
              },
              "title": "Stream result of protoCloudAccount",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      },
      "post": {
        "operationId": "CloudAccountService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountId"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/client/{clientId}/accounts": {
      "get": {
        "operationId": "CloudAccountAppClientService_GetAppClientCloudAccount",
        "parameters": [
          {
            "in": "path",
            "name": "clientId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Called internally by OPA only - name and countryCode overwritten for member",
        "tags": [
          "CloudAccountAppClientService"
        ]
      }
    },
    "/v1/cloudaccounts/enroll": {
      "post": {
        "operationId": "CloudAccountEnrollService_Enroll",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountEnrollRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountEnrollResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Enroll creates a cloud account and a billing account for a new user.\nFor premium users, Enroll checks for billing options or cloud credits.\nCloudAccountEnrollResponse.Action tells the caller what to do next to\nmove the enrollment process further.",
        "tags": [
          "CloudAccountEnrollService"
        ]
      }
    },
    "/v1/cloudaccounts/ensure": {
      "post": {
        "operationId": "CloudAccountService_Ensure",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{cloudAccountId}/members/add": {
      "post": {
        "operationId": "CloudAccountMemberService_AddMembers",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "members": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{cloudAccountId}/members/delete": {
      "post": {
        "operationId": "CloudAccountMemberService_RemoveMembers",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "members": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{id}": {
      "delete": {
        "operationId": "CloudAccountService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      },
      "get": {
        "operationId": "CloudAccountService_GetById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      },
      "patch": {
        "operationId": "CloudAccountService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "accessLimitedTimestamp": {
                  "format": "date-time",
                  "type": "string"
                },
                "adminName": {
                  "type": "string"
                },
                "billingAccountCreated": {
                  "type": "boolean"
                },
                "countryCode": {
                  "type": "string"
                },
                "creditsDepleted": {
                  "format": "date-time",
                  "type": "string"
                },
                "delinquent": {
                  "type": "boolean"
                },
                "enrolled": {
                  "type": "boolean"
                },
                "lowCredits": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "owner": {
                  "type": "string"
                },
                "paidServicesAllowed": {
                  "type": "boolean"
                },
                "parentId": {
                  "type": "string"
                },
                "personId": {
                  "type": "string"
                },
                "restricted": {
                  "type": "boolean"
                },
                "terminateMessageQueued": {
                  "type": "boolean"
                },
                "terminatePaidServices": {
                  "type": "boolean"
                },
                "tid": {
                  "type": "string"
                },
                "tradeRestricted": {
                  "type": "boolean"
                },
                "type": {
                  "$ref": "#/definitions/protoAccountType"
                },
                "upgradedToEnterprise": {
                  "$ref": "#/definitions/protoUpgradeStatus"
                },
                "upgradedToPremium": {
                  "$ref": "#/definitions/protoUpgradeStatus"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{id}/members": {
      "get": {
        "operationId": "CloudAccountMemberService_ReadMembers",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountMembers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{id}/members/active": {
      "get": {
        "operationId": "CloudAccountMemberService_ReadActiveMembers",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountMembers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieve all active members who have accepted invites of a cloud account, excluding the cloud account owner",
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/create": {
      "post": {
        "operationId": "CloudAccountInvitationService_CreateInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteRequestList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/member/reject": {
      "post": {
        "operationId": "CloudAccountInvitationMemberService_RejectInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/read": {
      "get": {
        "operationId": "CloudAccountInvitationService_ReadInvite",
        "parameters": [
          {
            "in": "query",
            "name": "adminAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInviteList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/remove": {
      "post": {
        "operationId": "CloudAccountInvitationService_RemoveInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/resend": {
      "post": {
        "operationId": "CloudAccountInvitationService_ResendInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteResendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInviteResendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/revoke": {
      "post": {
        "operationId": "CloudAccountInvitationService_RevokeInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteRevokeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/name/{name}": {
      "get": {
        "operationId": "CloudAccountService_GetByName",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/name/{userName}/members": {
      "get": {
        "operationId": "CloudAccountMemberService_ReadUserCloudAccounts",
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "onlyActive",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoMemberAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/personid/{personid}": {
      "get": {
        "operationId": "CloudAccountService_GetByPersonId",
        "parameters": [
          {
            "in": "path",
            "name": "personid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/sendinvitecode": {
      "post": {
        "operationId": "CloudAccountInvitationService_SendInviteCode",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSendInviteCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/tid/{tid}/oid/{oid}": {
      "get": {
        "operationId": "CloudAccountService_GetByOid",
        "parameters": [
          {
            "in": "path",
            "name": "tid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "oid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/update/personid": {
      "post": {
        "operationId": "CloudAccountMemberService_UpdatePersonId",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMemberPersonId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Called internally by cloudaccount-enroll only",
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/upgrade": {
      "post": {
        "operationId": "CloudAccountEnrollService_Upgrade",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountUpgradeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountUpgradeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountEnrollService"
        ]
      }
    },
    "/v1/cloudaccounts/upgradecc": {
      "post": {
        "operationId": "CloudAccountEnrollService_UpgradeWithCreditCard",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountUpgradeWithCreditCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountUpgradeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountEnrollService"
        ]
      }
    },
    "/v1/cloudaccounts/user/{userName}/accounts": {
      "get": {
        "operationId": "CloudAccountMemberService_GetCloudAccountsForOpa",
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRelatedAccounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Called internally by OPA only",
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/user/{userName}/personId": {
      "get": {
        "operationId": "CloudAccountMemberService_GetMemberPersonId",
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAccountPerson"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Called internally by OPA only",
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/validateinvitecode": {
      "post": {
        "operationId": "CloudAccountInvitationService_ValidateInviteCode",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoValidateInviteCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoValidateInviteCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitor/enable": {
      "post": {
        "operationId": "CloudMonitorService_EnableMonitor",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoEnableMonitorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitor/resources/{resourceId}/disable": {
      "post": {
        "operationId": "CloudMonitorService_DisableMonitor",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDisableMonitorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitor/resources/{resourceId}/query": {
      "post": {
        "operationId": "CloudMonitorService_QueryResourcesMetrics",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "category": {
                  "type": "string"
                },
                "end": {
                  "type": "string"
                },
                "metric": {
                  "type": "string"
                },
                "resourceType": {
                  "type": "string"
                },
                "start": {
                  "type": "string"
                },
                "step": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoQueryResourcesMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitorlogs/resources/{resourceId}/query/byfilter": {
      "post": {
        "operationId": "CloudMonitorLogsService_SearchLogsByFilter",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "endTime": {
                  "type": "string"
                },
                "fieldNames": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "fieldValues": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "pageNumber": {
                  "format": "int32",
                  "type": "integer"
                },
                "resourceType": {
                  "type": "string"
                },
                "size": {
                  "format": "int32",
                  "type": "integer"
                },
                "startTime": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchLogsByFilterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorLogsService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitorlogs/resources/{resourceId}/query/byphrase": {
      "post": {
        "operationId": "CloudMonitorLogsService_SearchLogsByPhrase",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "endTime": {
                  "type": "string"
                },
                "pageNumber": {
                  "format": "int32",
                  "type": "integer"
                },
                "resourceType": {
                  "type": "string"
                },
                "searchPhrase": {
                  "type": "string"
                },
                "size": {
                  "format": "int32",
                  "type": "integer"
                },
                "startTime": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchLogsByPhraseResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorLogsService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitorlogs/resources/{resourceId}/query/byterm": {
      "post": {
        "operationId": "CloudMonitorLogsService_SearchLogsByTerm",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "endTime": {
                  "type": "string"
                },
                "pageNumber": {
                  "format": "int32",
                  "type": "integer"
                },
                "resourceType": {
                  "type": "string"
                },
                "searchTerm": {
                  "type": "string"
                },
                "size": {
                  "format": "int32",
                  "type": "integer"
                },
                "startTime": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchLogsByTermResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorLogsService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitorlogs/resources/{resourceId}/query/logs": {
      "post": {
        "operationId": "CloudMonitorLogsService_SearchAllLogs",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "endTime": {
                  "type": "string"
                },
                "pageNumber": {
                  "format": "int32",
                  "type": "integer"
                },
                "resourceType": {
                  "type": "string"
                },
                "size": {
                  "format": "int32",
                  "type": "integer"
                },
                "startTime": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchAllLogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorLogsService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitorlogs/resources/{resourceId}/query/searchpanel": {
      "post": {
        "operationId": "CloudMonitorLogsService_SearchPanelData",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "endTime": {
                  "type": "string"
                },
                "fieldName": {
                  "type": "string"
                },
                "resourceType": {
                  "type": "string"
                },
                "size": {
                  "format": "int32",
                  "type": "integer"
                },
                "startTime": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchPanelDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorLogsService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitorlogs/userregistration": {
      "post": {
        "operationId": "CloudMonitorLogsService_UserRegistration",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resourceType": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUserRegistrationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorLogsService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/clusters": {
      "get": {
        "operationId": "TrainingClusterService_List",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clusterName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSlurmClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TrainingClusterService"
        ]
      },
      "post": {
        "operationId": "TrainingClusterService_Create",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "cluster": {
                  "$ref": "#/definitions/protoCluster"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSlurmClusterCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TrainingClusterService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/clusters/{clusterId}": {
      "get": {
        "operationId": "TrainingClusterService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TrainingClusterService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/computenodepools": {
      "get": {
        "operationId": "FleetAdminService_SearchComputeNodePoolsForInstanceScheduling",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchComputeNodePoolsForInstanceSchedulingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the list of compute node pools that the CloudAccount is allowed to launch instances in.",
        "tags": [
          "FleetAdminService"
        ]
      },
      "put": {
        "operationId": "FleetAdminService_UpdateComputeNodePoolsForCloudAccount",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "computeNodePools": {
                  "items": {
                    "$ref": "#/definitions/protoComputeNodePoolForInstanceScheduling"
                  },
                  "type": "array"
                },
                "createAdmin": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the list of compute node pools that the CloudAccount is allowed to launch instances in.\nDEPRECATED. WILL BE REPLACED WITH AddCloudAccountToComputeNodePool AND DeleteCloudAccountFromComputeNodePool.",
        "tags": [
          "FleetAdminService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflow": {
      "get": {
        "operationId": "DpaiAirflowService_DpaiAirflowList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workspaceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List all the DPAI Airflow Service in the given cloud account. Supports wildcard filter on name.",
        "tags": [
          "DpaiAirflowService"
        ]
      },
      "post": {
        "operationId": "DpaiAirflowService_DpaiAirflowCreate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "sizeProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowSizeProperties"
                },
                "storageProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowStorageProperties"
                },
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "version": {
                  "type": "string"
                },
                "webServerProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowWebServerProperties"
                },
                "workspaceId": {
                  "type": "string"
                },
                "workspaceName": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create new DPAI Airflow Service",
        "tags": [
          "DpaiAirflowService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflow/name/{name}": {
      "get": {
        "operationId": "DpaiAirflowService_DpaiAirflowGetByName",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workspaceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a DPAI Airflow by name",
        "tags": [
          "DpaiAirflowService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflow/{id}": {
      "delete": {
        "operationId": "DpaiAirflowService_DpaiAirflowDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete the DPAI Airflow",
        "tags": [
          "DpaiAirflowService"
        ]
      },
      "get": {
        "operationId": "DpaiAirflowService_DpaiAirflowGetById",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a DPAI Airflow by ID",
        "tags": [
          "DpaiAirflowService"
        ]
      },
      "patch": {
        "operationId": "DpaiAirflowService_DpaiAirflowUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the DPAI Airflow metadata.",
        "tags": [
          "DpaiAirflowService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowVersion/{id}": {
      "delete": {
        "operationId": "DpaiAirflowVersionService_DpaiAirflowVersionDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowVersionDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete DPAI Airflow Version",
        "tags": [
          "DpaiAirflowVersionService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowconfig": {
      "get": {
        "operationId": "DpaiAirflowConfService_DpaiAirflowConfList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "airflowId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowConfListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List DPAI Airflow Configurations",
        "tags": [
          "DpaiAirflowConfService"
        ]
      },
      "post": {
        "operationId": "DpaiAirflowConfService_DpaiAirflowConfCreate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "airflowId": {
                  "type": "string"
                },
                "createdBy": {
                  "type": "string"
                },
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowConf"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create new DPAI Airflow Configuration",
        "tags": [
          "DpaiAirflowConfService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowconfig/{id}": {
      "delete": {
        "operationId": "DpaiAirflowConfService_DpaiAirflowConfDeleteByAirflowId",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowConfDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete DPAI Airflow Configuration",
        "tags": [
          "DpaiAirflowConfService"
        ]
      },
      "get": {
        "operationId": "DpaiAirflowConfService_DpaiAirflowConfGetById",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowConf"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get DPAI Airflow Configuration by ID",
        "tags": [
          "DpaiAirflowConfService"
        ]
      },
      "patch": {
        "operationId": "DpaiAirflowConfService_DpaiAirflowConfDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowConfDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete DPAI Airflow Configuration",
        "tags": [
          "DpaiAirflowConfService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowlist": {
      "get": {
        "operationId": "DpaiAirflowService_DpaiAirflowListUpgrade",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowVersionListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List DPAI Airflow for upgrade",
        "tags": [
          "DpaiAirflowService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowsize": {
      "get": {
        "operationId": "DpaiAirflowSizeService_DpaiAirflowSizeList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowSizeListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List DPAI Airflow Sizes",
        "tags": [
          "DpaiAirflowSizeService"
        ]
      },
      "post": {
        "operationId": "DpaiAirflowSizeService_DpaiAirflowSizeCreate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "airflowSchedulerProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowSchedulerProperties"
                },
                "airflowSizeWebserverProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowSizeWebServerProperties"
                },
                "airflowTriggerProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowTriggerProperties"
                },
                "airflowWorkerProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowWorkerProperties"
                },
                "backendDatabaseSizeId": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "logDirectoryDiskSize": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "nodeSizeId": {
                  "type": "string"
                },
                "numberOfNodesDefault": {
                  "format": "int32",
                  "type": "integer"
                },
                "redisDiskSize": {
                  "type": "string"
                }
              },
              "title": "CreateRequest AirflowSize",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create new DPAI Airflow Size",
        "tags": [
          "DpaiAirflowSizeService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowsize/name/{name}": {
      "get": {
        "operationId": "DpaiAirflowSizeService_DpaiAirflowSizeGetByName",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get DPAI Airflow Size by Name",
        "tags": [
          "DpaiAirflowSizeService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowsize/{id}": {
      "delete": {
        "operationId": "DpaiAirflowSizeService_DpaiAirflowSizeDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowSizeDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete DPAI Airflow Size",
        "tags": [
          "DpaiAirflowSizeService"
        ]
      },
      "get": {
        "operationId": "DpaiAirflowSizeService_DpaiAirflowSizeGetById",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get DPAI Airflow Size by ID",
        "tags": [
          "DpaiAirflowSizeService"
        ]
      },
      "patch": {
        "operationId": "DpaiAirflowSizeService_DpaiAirflowSizeUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "airflowSchedulerProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowSchedulerProperties"
                },
                "airflowSizeWebserverProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowSizeWebServerProperties"
                },
                "airflowTriggerProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowTriggerProperties"
                },
                "airflowWorkerProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowWorkerProperties"
                },
                "backendDatabaseSizeId": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "logDirectoryDiskSize": {
                  "type": "string"
                },
                "nodeSizeId": {
                  "type": "string"
                },
                "numberOfNodesDefault": {
                  "format": "int32",
                  "type": "integer"
                },
                "redisDiskSize": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update DPAI Airflow Size metadata",
        "tags": [
          "DpaiAirflowSizeService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowversion": {
      "get": {
        "operationId": "DpaiAirflowVersionService_DpaiAirflowVersionList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowVersionListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List DPAI Airflow Version",
        "tags": [
          "DpaiAirflowVersionService"
        ]
      },
      "post": {
        "operationId": "DpaiAirflowVersionService_DpaiAirflowVersionCreate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "airflowVersionProperties": {
                  "$ref": "#/definitions/protoDpaiAirflowVersionProperties"
                },
                "backendDatabaseVersionId": {
                  "type": "string"
                },
                "backwardCompatibleFrom": {
                  "type": "string"
                },
                "chartReference": {
                  "$ref": "#/definitions/protoDpaiChartReference"
                },
                "description": {
                  "type": "string"
                },
                "executorType": {
                  "type": "string"
                },
                "imageReference": {
                  "$ref": "#/definitions/protoDpaiImageReference"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "title": "CreateRequest AirflowVersion",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create new DPAI Airflow Version",
        "tags": [
          "DpaiAirflowVersionService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowversion/name/{name}": {
      "get": {
        "operationId": "DpaiAirflowVersionService_DpaiAirflowVersionGetByName",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get DPAI Airflow Version by name",
        "tags": [
          "DpaiAirflowVersionService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/airflowversion/{id}": {
      "get": {
        "operationId": "DpaiAirflowVersionService_DpaiAirflowVersionGetById",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get DPAI Airflow Version by ID",
        "tags": [
          "DpaiAirflowVersionService"
        ]
      },
      "patch": {
        "operationId": "DpaiAirflowVersionService_DpaiAirflowVersionUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "backwardCompatibleFrom": {
                  "type": "string"
                },
                "chartReference": {
                  "$ref": "#/definitions/protoDpaiChartReference"
                },
                "description": {
                  "type": "string"
                },
                "imageReference": {
                  "$ref": "#/definitions/protoDpaiImageReference"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiAirflowVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update DPAI Airflow Version metadata",
        "tags": [
          "DpaiAirflowVersionService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/data/postgresSizes": {
      "get": {
        "operationId": "DpaiPostgresSizeService_DpaiPostgresSizeList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresSizeListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List all the DPAI Postgres Sizes",
        "tags": [
          "DpaiPostgresSizeService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/data/postgresSizes/name/{name}": {
      "get": {
        "operationId": "DpaiPostgresSizeService_DpaiPostgresSizeGetByName",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the DPAI Postgres Size by name",
        "tags": [
          "DpaiPostgresSizeService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/data/postgresSizes/{id}": {
      "get": {
        "operationId": "DpaiPostgresSizeService_DpaiPostgresSizeGetById",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresSize"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the DPAI Postgres Size by ID",
        "tags": [
          "DpaiPostgresSizeService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/data/postgresVersions": {
      "get": {
        "operationId": "DpaiPostgresVersionService_DpaiPostgresVersionList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersionListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "list all the DPAI Postgres Versions",
        "tags": [
          "DpaiPostgresVersionService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/data/postgresVersions/name/{name}": {
      "get": {
        "operationId": "DpaiPostgresVersionService_DpaiPostgresVersionGetByName",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a DPAI Postgres Version by Name",
        "tags": [
          "DpaiPostgresVersionService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/data/postgresVersions/{id}": {
      "get": {
        "operationId": "DpaiPostgresVersionService_DpaiPostgresVersionGetById",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the DPAI Postgres Version by ID",
        "tags": [
          "DpaiPostgresVersionService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/deployments": {
      "get": {
        "operationId": "DpaiDeploymentService_DpaiDeploymentList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "workspaceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "serviceId",
            "required": false,
            "type": "string"
          },
          {
            "default": "DPAI_SERVICE_TYPE_UNSPECIFIED",
            "enum": [
              "DPAI_SERVICE_TYPE_UNSPECIFIED",
              "DPAI_WORKSPACE",
              "DPAI_HMS",
              "DPAI_SPARK",
              "DPAI_AIRFLOW",
              "DPAI_POSTGRES"
            ],
            "in": "query",
            "name": "serviceType",
            "required": false,
            "type": "string"
          },
          {
            "default": "DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED",
            "enum": [
              "DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED",
              "DPAI_CREATE",
              "DPAI_UPDATE",
              "DPAI_DELETE",
              "DPAI_RESTART",
              "DPAI_RESIZE",
              "DPAI_UPGRADE"
            ],
            "in": "query",
            "name": "changeIndicator",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "parentDeploymentId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List all the DPAI deployments in the given cloud Account",
        "tags": [
          "DpaiDeploymentService"
        ]
      },
      "post": {
        "operationId": "DpaiDeploymentService_DpaiDeploymentCreate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "DeploymentId": {
                  "type": "string"
                },
                "changeIndicator": {
                  "$ref": "#/definitions/protoDpaiDeploymentChangeIndicator"
                },
                "createdBy": {
                  "type": "string"
                },
                "input": {
                  "format": "byte",
                  "type": "string"
                },
                "serviceId": {
                  "type": "string"
                },
                "serviceType": {
                  "$ref": "#/definitions/protoDpaiServiceType"
                },
                "workspaceId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create a new DPAI Deployment",
        "tags": [
          "DpaiDeploymentService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/deployments/{deploymentId}/tasks": {
      "get": {
        "operationId": "DpaiDeploymentTaskService_DpaiDeploymentTaskList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentTaskListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List all the Tasks in the DPAI Deployment.",
        "tags": [
          "DpaiDeploymentTaskService"
        ]
      },
      "post": {
        "operationId": "DpaiDeploymentTaskService_DpaiDeploymentTaskCreate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentTaskCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create a new Task in the DPAI Deployment",
        "tags": [
          "DpaiDeploymentTaskService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/deployments/{deploymentId}/tasks/{id}": {
      "delete": {
        "operationId": "DpaiDeploymentTaskService_DpaiDeploymentTaskDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentTaskDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete the DPAI Deployment Task.",
        "tags": [
          "DpaiDeploymentTaskService"
        ]
      },
      "get": {
        "operationId": "DpaiDeploymentTaskService_DpaiDeploymentTaskGet",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentTaskGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the DPAI Deployment Task by ID",
        "tags": [
          "DpaiDeploymentTaskService"
        ]
      },
      "patch": {
        "operationId": "DpaiDeploymentTaskService_DpaiDeploymentTaskUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "errorMessage": {
                  "type": "string"
                },
                "status": {
                  "$ref": "#/definitions/protoDpaiDeploymentStatus"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentTaskUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the DPAI Deployment Task.",
        "tags": [
          "DpaiDeploymentTaskService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/deployments/{id}": {
      "delete": {
        "operationId": "DpaiDeploymentService_DpaiDeploymentDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete the DPAI deployment",
        "tags": [
          "DpaiDeploymentService"
        ]
      },
      "get": {
        "operationId": "DpaiDeploymentService_DpaiDeploymentGet",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeployment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the DPAI Deployment details by ID",
        "tags": [
          "DpaiDeploymentService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/airflow/{airflowId}/resize": {
      "post": {
        "operationId": "DpaiAirflowService_DpaiAirflowResize",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "airflowId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "numberOfNodes": {
                  "format": "int32",
                  "type": "integer"
                },
                "numberOfSchedulers": {
                  "format": "int32",
                  "type": "integer"
                },
                "numberOfWorkers": {
                  "format": "int32",
                  "type": "integer"
                },
                "size": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Resize Airflow",
        "tags": [
          "DpaiAirflowService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/airflow/{airflowId}/restart": {
      "post": {
        "operationId": "DpaiAirflowService_DpaiAirflowRestart",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "airflowId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Restart Airflow",
        "tags": [
          "DpaiAirflowService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/airflow/{airflowId}/upgrade": {
      "post": {
        "operationId": "DpaiAirflowService_DpaiAirflowUpgrade",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "airflowId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Upgrade Airflow",
        "tags": [
          "DpaiAirflowService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/postgres": {
      "get": {
        "operationId": "DpaiPostgresService_DpaiPostgresList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List the DPAI Postgres Databases in the given workspace.",
        "tags": [
          "DpaiPostgresService"
        ]
      },
      "post": {
        "operationId": "DpaiPostgresService_DpaiPostgresCreate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adminProperties": {
                  "$ref": "#/definitions/protoDpaiPostgresAdminProperties"
                },
                "advanceConfiguration": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "createdBy": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "optionalProperties": {
                  "$ref": "#/definitions/protoDpaiPostgresOptionalProperties"
                },
                "sizeProperties": {
                  "$ref": "#/definitions/protoDpaiPostgresSizeProperties"
                },
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "versionId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create a new DPAI Postgres Database.",
        "tags": [
          "DpaiPostgresService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/postgres/name/{name}": {
      "get": {
        "operationId": "DpaiPostgresService_DpaiPostgresGetByName",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgres"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the DPAI Postgres Database by its name.",
        "tags": [
          "DpaiPostgresService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/postgres/{id}": {
      "delete": {
        "operationId": "DpaiPostgresService_DpaiPostgresDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete the DPAI Postgres Database.",
        "tags": [
          "DpaiPostgresService"
        ]
      },
      "get": {
        "operationId": "DpaiPostgresService_DpaiPostgresGetById",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgres"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the DPAI Postgres Database by its ID.",
        "tags": [
          "DpaiPostgresService"
        ]
      },
      "patch": {
        "operationId": "DpaiPostgresService_DpaiPostgresUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgres"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the DPAI Postgres Database metadata information.",
        "tags": [
          "DpaiPostgresService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/postgres/{id}/resize": {
      "post": {
        "operationId": "DpaiPostgresService_DpaiPostgresResize",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "sizeProperties": {
                  "$ref": "#/definitions/protoDpaiPostgresSizeProperties"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Resize the DPAI Postgres Database.",
        "tags": [
          "DpaiPostgresService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/postgres/{id}/restart": {
      "post": {
        "operationId": "DpaiPostgresService_DpaiPostgresRestart",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Restart the DPAI Postgres Database.",
        "tags": [
          "DpaiPostgresService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/postgres/{id}/upgrade": {
      "post": {
        "operationId": "DpaiPostgresService_DpaiPostgresUpgrade",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "versionId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Upgrade the DPAI Postgres Database.",
        "tags": [
          "DpaiPostgresService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspace/{workspaceId}/postgres/{id}/upgrades": {
      "get": {
        "operationId": "DpaiPostgresService_DpaiPostgresListUpgrade",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiPostgresVersionListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List all the possible upgradable versions for the given DPAI Postgres Database.",
        "tags": [
          "DpaiPostgresService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspaces": {
      "get": {
        "operationId": "DpaiWorkspaceService_DpaiWorkspaceList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiWorkspaceListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List all the DPAI workspaces in the given cloud account. Supports wildcard filter on name.",
        "tags": [
          "DpaiWorkspaceService"
        ]
      },
      "post": {
        "operationId": "DpaiWorkspaceService_DpaiWorkspaceCreate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "createdBy": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "region": {
                  "type": "string"
                },
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiWorkspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create new DPAI Workspace",
        "tags": [
          "DpaiWorkspaceService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspaces/{id}": {
      "delete": {
        "operationId": "DpaiWorkspaceService_DpaiWorkspaceDelete",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete the DPAI workspace.",
        "tags": [
          "DpaiWorkspaceService"
        ]
      },
      "get": {
        "operationId": "DpaiWorkspaceService_DpaiWorkspaceGet",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiWorkspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a DPAI Workspace by ID",
        "tags": [
          "DpaiWorkspaceService"
        ]
      },
      "patch": {
        "operationId": "DpaiWorkspaceService_DpaiWorkspaceUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiWorkspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the DPAI workspace metadata.",
        "tags": [
          "DpaiWorkspaceService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/dpai/workspaces/{workspaceId}/deployments": {
      "get": {
        "operationId": "DpaiDeploymentService_DpaiDeploymentList2",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workspaceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "serviceId",
            "required": false,
            "type": "string"
          },
          {
            "default": "DPAI_SERVICE_TYPE_UNSPECIFIED",
            "enum": [
              "DPAI_SERVICE_TYPE_UNSPECIFIED",
              "DPAI_WORKSPACE",
              "DPAI_HMS",
              "DPAI_SPARK",
              "DPAI_AIRFLOW",
              "DPAI_POSTGRES"
            ],
            "in": "query",
            "name": "serviceType",
            "required": false,
            "type": "string"
          },
          {
            "default": "DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED",
            "enum": [
              "DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED",
              "DPAI_CREATE",
              "DPAI_UPDATE",
              "DPAI_DELETE",
              "DPAI_RESTART",
              "DPAI_RESIZE",
              "DPAI_UPGRADE"
            ],
            "in": "query",
            "name": "changeIndicator",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "parentDeploymentId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "offset",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "limit",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDpaiDeploymentListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List all the DPAI deployments in the given cloud Account",
        "tags": [
          "DpaiDeploymentService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters": {
      "get": {
        "operationId": "Iks_GetClusters",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "post": {
        "operationId": "Iks_CreateNewCluster",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "annotations": {
                  "items": {
                    "$ref": "#/definitions/protoAnnotations"
                  },
                  "type": "array"
                },
                "clustertype": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "instanceType": {
                  "type": "string"
                },
                "k8sversionname": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "network": {
                  "$ref": "#/definitions/protoNetwork"
                },
                "runtimename": {
                  "type": "string"
                },
                "tags": {
                  "items": {
                    "$ref": "#/definitions/protoKeyValuePair"
                  },
                  "type": "array"
                }
              },
              "title": "Cluster Request",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClusterCreateResponseForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "CLUSTERS",
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}": {
      "delete": {
        "operationId": "Iks_DeleteCluster",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clustertype",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "get": {
        "operationId": "Iks_GetCluster",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clustertype",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClusterResponseForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "put": {
        "operationId": "Iks_PutCluster",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "annotations": {
                  "items": {
                    "$ref": "#/definitions/protoAnnotations"
                  },
                  "type": "array"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "tags": {
                  "items": {
                    "$ref": "#/definitions/protoKeyValuePair"
                  },
                  "type": "array"
                }
              },
              "title": "UpdateClusterRequest",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClusterCreateResponseForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/kubeconfig": {
      "get": {
        "operationId": "Iks_RetrieveKubeConfig",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "readonly",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetKubeconfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/nodegroups": {
      "get": {
        "operationId": "Iks_GetNodeGroups",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nodes",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoNodeGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "post": {
        "operationId": "Iks_CreateNodeGroup",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "annotations": {
                  "items": {
                    "$ref": "#/definitions/protoAnnotations"
                  },
                  "type": "array"
                },
                "count": {
                  "format": "int32",
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "instanceType": {
                  "type": "string"
                },
                "instancetypeid": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "nodegrouptype": {
                  "type": "string"
                },
                "sshkeyname": {
                  "items": {
                    "$ref": "#/definitions/protoSshKey"
                  },
                  "type": "array"
                },
                "tags": {
                  "items": {
                    "$ref": "#/definitions/protoKeyValuePair"
                  },
                  "type": "array"
                },
                "upgradestrategy": {
                  "$ref": "#/definitions/protoUpgradeStrategy"
                },
                "userdataurl": {
                  "type": "string"
                },
                "vnets": {
                  "items": {
                    "$ref": "#/definitions/protoVnet"
                  },
                  "type": "array"
                }
              },
              "title": "CreateNodeGroupRequest",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoNodeGroupResponseForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "NODEGROUPS",
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/nodegroups/{nodegroupuuid}": {
      "delete": {
        "operationId": "Iks_DeleteNodeGroup",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "nodegroupuuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nodegrouptype",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "get": {
        "operationId": "Iks_GetNodeGroup",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "nodegroupuuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nodes",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoNodeGroupResponseForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "put": {
        "operationId": "Iks_PutNodeGroup",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "nodegroupuuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "annotations": {
                  "items": {
                    "$ref": "#/definitions/protoAnnotations"
                  },
                  "type": "array"
                },
                "count": {
                  "format": "int32",
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "nodegrouptype": {
                  "type": "string"
                },
                "tags": {
                  "items": {
                    "$ref": "#/definitions/protoKeyValuePair"
                  },
                  "type": "array"
                },
                "upgradestrategy": {
                  "$ref": "#/definitions/protoUpgradeStrategy"
                }
              },
              "title": "UpdateNodeGroupRequest",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoNodegroupstatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/nodegroups/{nodegroupuuid}/instance/{instanceName}": {
      "delete": {
        "operationId": "Iks_DeleteNodeGroupInstance",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "nodegroupuuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "downsize",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoNodegroupstatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/nodegroups/{nodegroupuuid}/status": {
      "get": {
        "operationId": "Iks_GetNodeGroupStatus",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "nodegroupuuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nodegrouptype",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoNodegroupstatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/nodegroups/{nodegroupuuid}/upgrade": {
      "post": {
        "operationId": "Iks_UpgradeNodeGroup",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "nodegroupuuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "nodegrouptype": {
                  "type": "string"
                }
              },
              "title": "NodeGroupid",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoNodegroupstatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/security": {
      "get": {
        "operationId": "Iks_GetFirewallRule",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clustertype",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetFirewallRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "put": {
        "operationId": "Iks_UpdateFirewallRule",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "internalip": {
                  "type": "string"
                },
                "port": {
                  "format": "int32",
                  "type": "integer"
                },
                "protocol": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sourceip": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFirewallRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/security/{vipid}": {
      "delete": {
        "operationId": "Iks_DeleteFirewallRule",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "path",
            "name": "vipid",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/status": {
      "get": {
        "operationId": "Iks_GetClusterStatus",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clustertype",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClusterStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/storage": {
      "post": {
        "operationId": "Iks_EnableClusterStorage",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "enablestorage": {
                  "type": "boolean"
                },
                "storagesize": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClusterStorageStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "put": {
        "operationId": "Iks_UpdateClusterStorage",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "storagesize": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClusterStorageStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/upgrade": {
      "post": {
        "operationId": "Iks_UpgradeCluster",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "k8sversionname": {
                  "type": "string"
                }
              },
              "title": "Cluster ID",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClusterStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/vips": {
      "get": {
        "operationId": "Iks_GetVips",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clustertype",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetVipsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "post": {
        "operationId": "Iks_CreateNewVip",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "port": {
                  "format": "int32",
                  "type": "integer"
                },
                "viptype": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVipResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Load Balancer",
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/clusters/{clusteruuid}/vips/{vipid}": {
      "delete": {
        "operationId": "Iks_DeleteVip",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "path",
            "name": "vipid",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      },
      "get": {
        "operationId": "Iks_GetVip",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "path",
            "name": "vipid",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetVipResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/metadata/instancetypes": {
      "get": {
        "operationId": "Iks_GetPublicInstanceTypes",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetPublicAllInstancetypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/metadata/k8sversions": {
      "get": {
        "operationId": "Iks_GetPublicK8sVersions",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetPublicAllK8sversionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "METADATA",
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/metadata/runtimes": {
      "get": {
        "operationId": "Iks_GetPublicRuntimes",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetPublicAllRuntimeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Iks"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/iks/supercompute/clusters": {
      "post": {
        "operationId": "IksSuperCompute_SuperComputeCreateCluster",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "clusterspec": {
                  "$ref": "#/definitions/protoClusterSpec"
                },
                "clustertype": {
                  "type": "string"
                },
                "instanceType": {
                  "type": "string"
                },
                "nodegroupspec": {
                  "items": {
                    "$ref": "#/definitions/protoNodegroupSpec"
                  },
                  "type": "array"
                },
                "storagespec": {
                  "$ref": "#/definitions/protoStorageSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClusterCreateResponseForm"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "CLUSTERS",
        "tags": [
          "IksSuperCompute"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/kfaas/clusters/{k8sClusterID}/check/{check}": {
      "get": {
        "operationId": "KFService_ExecuteKFPreCheck",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "k8sClusterID",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "check",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoExecuteKFPreCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KFService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/kfaas/deployments": {
      "get": {
        "operationId": "KFService_ListKubeFlowDeployment",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListKubeFlowDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KFService"
        ]
      },
      "post": {
        "operationId": "KFService_CreateKubeFlowDeployment",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "deploymentName": {
                  "type": "string"
                },
                "k8sClusterID": {
                  "type": "string"
                },
                "k8sClusterName": {
                  "type": "string"
                },
                "kfVersion": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "storageClassName": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreateKubeFlowDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KFService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/kfaas/deployments/{deploymentID}": {
      "delete": {
        "operationId": "KFService_DeleteKubeFlowDeployment",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteKubeFlowDeploymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KFService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/kfaas/deployments/{deploymentID}/credentials": {
      "get": {
        "operationId": "KFService_GetUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetUserCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KFService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/kfaas/deployments/{deploymentID}/externalip": {
      "get": {
        "operationId": "KFService_GetExternalIP",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetExternalIPResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KFService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/kfaas/deployments/{deploymentID}/job/{job}": {
      "get": {
        "operationId": "KFService_GetJobStatus",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentID",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "job",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetJobStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KFService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/kfaas/deployments/{deploymentID}/status/namespace/{namespace}": {
      "get": {
        "operationId": "KFService_GetKFStatus",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "deploymentID",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetKFStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KFService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/objects/buckets/id/{bucketId}/lifecyclerule": {
      "get": {
        "operationId": "ObjectStorageService_SearchBucketLifecycleRule",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "bucketId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBucketLifecycleRuleSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List bucket lifecycle policy",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/objects/users": {
      "get": {
        "operationId": "ObjectStorageService_SearchObjectUser",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectUserSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List all object service user",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/trainings": {
      "post": {
        "operationId": "TrainingBatchUserService_Register",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "accessType": {
                  "$ref": "#/definitions/protoAccessType"
                },
                "sshKeyNames": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "trainingId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoTrainingRegistrationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TrainingBatchUserService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/trainings/expiry": {
      "get": {
        "operationId": "TrainingBatchUserService_GetExpiryTimeById",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TrainingBatchUserService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/filesystems": {
      "get": {
        "operationId": "FileStorageService_Search",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "default": "Unspecified",
            "description": "filter by filesystem type",
            "enum": [
              "Unspecified",
              "ComputeGeneral",
              "ComputeKubernetes"
            ],
            "in": "query",
            "name": "metadata.filterType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFilesystemSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List filesystems.",
        "tags": [
          "FileStorageService"
        ]
      },
      "post": {
        "operationId": "FileStorageService_Create",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize instances.",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name will be generated if empty.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoFilesystemSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFilesystem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Provision a new filesystem volume",
        "tags": [
          "FileStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/filesystems/id/{metadata.resourceId}": {
      "delete": {
        "operationId": "FileStorageService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion of an filesystem.",
        "tags": [
          "FileStorageService"
        ]
      },
      "get": {
        "operationId": "FileStorageService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFilesystem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the status of an filesystem.",
        "tags": [
          "FileStorageService"
        ]
      },
      "put": {
        "operationId": "FileStorageService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The entire set of labels will be replaced with these labels.\nNot implemented.",
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoFilesystemSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFilesystem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the specification of an filesystem.",
        "tags": [
          "FileStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/filesystems/id/{metadata.resourceId}/user": {
      "get": {
        "operationId": "FileStorageService_GetUser",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFilesystemGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request user cedentials for a filesystem.",
        "tags": [
          "FileStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/filesystems/name/{metadata.name}": {
      "delete": {
        "operationId": "FileStorageService_Delete2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion of an filesystem.",
        "tags": [
          "FileStorageService"
        ]
      },
      "get": {
        "operationId": "FileStorageService_Get2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFilesystem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the status of an filesystem.",
        "tags": [
          "FileStorageService"
        ]
      },
      "put": {
        "operationId": "FileStorageService_Update2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The entire set of labels will be replaced with these labels.\nNot implemented.",
                      "type": "object"
                    },
                    "resourceId": {
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoFilesystemSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFilesystem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the specification of an filesystem.",
        "tags": [
          "FileStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/filesystems/name/{metadata.name}/user": {
      "get": {
        "operationId": "FileStorageService_GetUser2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFilesystemGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request user cedentials for a filesystem.",
        "tags": [
          "FileStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/instancegroups": {
      "get": {
        "operationId": "InstanceGroupService_Search",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceGroupSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List instance groups.",
        "tags": [
          "InstanceGroupService"
        ]
      },
      "post": {
        "operationId": "InstanceGroupService_Create",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "productId": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    },
                    "reserved3": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoInstanceGroupSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Launch a new group of instances.",
        "tags": [
          "InstanceGroupService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/instancegroups/name/{metadata.name}": {
      "delete": {
        "operationId": "InstanceGroupService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion (termination) of an instance group.",
        "tags": [
          "InstanceGroupService"
        ]
      },
      "put": {
        "operationId": "InstanceGroupService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "reserved3": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoInstanceGroupSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the specification of an instanceGroup",
        "tags": [
          "InstanceGroupService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/instancegroups/name/{metadata.name}/instance/id/{instanceResourceId}": {
      "delete": {
        "operationId": "InstanceGroupService_DeleteMember",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceResourceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved2",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "instanceName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion (termination) of an instance in a group.\nIt always retains at least one instance in the group to use a template. To delete the entire group, use Delete API instead.",
        "tags": [
          "InstanceGroupService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/instancegroups/name/{metadata.name}/instance/name/{instanceName}": {
      "delete": {
        "operationId": "InstanceGroupService_DeleteMember2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved2",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "instanceResourceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion (termination) of an instance in a group.\nIt always retains at least one instance in the group to use a template. To delete the entire group, use Delete API instead.",
        "tags": [
          "InstanceGroupService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/instancegroups/name/{metadata.name}/scale-up": {
      "patch": {
        "operationId": "InstanceGroupService_ScaleUp",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "reserved2": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoInstanceGroupSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceGroupScaleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create new instances for the group to reach to the desired count.\nThis returns an error if the desired count is less than the current count.",
        "tags": [
          "InstanceGroupService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/instances": {
      "get": {
        "operationId": "InstanceService_Search",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          },
          {
            "description": "If instanceGroupFilter is ExactValue, return instances in this instance group.\nOtherwise, this field is ignored",
            "in": "query",
            "name": "metadata.instanceGroup",
            "required": false,
            "type": "string"
          },
          {
            "default": "Default",
            "description": "Filter instances by instance group.\nIf Default, this behaves like Empty and returns instances that are not in any instance group.\n\n - Default: Use the default behavior, which is described in the specific SearchFilterCriteria field.\n - Any: Return records with any value in this field (including empty).\n - Empty: Return records with an empty value in this field\n - NonEmpty: Return records with a non-empty value in this field\n - ExactValue: Return records with an exact value in this field",
            "enum": [
              "Default",
              "Any",
              "Empty",
              "NonEmpty",
              "ExactValue"
            ],
            "in": "query",
            "name": "metadata.instanceGroupFilter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List instances.",
        "tags": [
          "InstanceService"
        ]
      },
      "post": {
        "operationId": "InstanceService_Create",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize instances.\nThis is also used by TopologySpreadConstraints.",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name will be generated if empty.",
                      "type": "string"
                    },
                    "productId": {
                      "type": "string"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoInstanceSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Launch a new baremetal or virtual machine instance.",
        "tags": [
          "InstanceService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/instances/id/{metadata.resourceId}": {
      "delete": {
        "operationId": "InstanceService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion (termination) of an instance.",
        "tags": [
          "InstanceService"
        ]
      },
      "get": {
        "operationId": "InstanceService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the status of an instance.",
        "tags": [
          "InstanceService"
        ]
      },
      "put": {
        "operationId": "InstanceService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The entire set of labels will be replaced with these labels.\nNot implemented.",
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoInstanceSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the specification of an instance.",
        "tags": [
          "InstanceService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/instances/name/{metadata.name}": {
      "delete": {
        "operationId": "InstanceService_Delete2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion (termination) of an instance.",
        "tags": [
          "InstanceService"
        ]
      },
      "get": {
        "operationId": "InstanceService_Get2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the status of an instance.",
        "tags": [
          "InstanceService"
        ]
      },
      "put": {
        "operationId": "InstanceService_Update2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The entire set of labels will be replaced with these labels.\nNot implemented.",
                      "type": "object"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    },
                    "resourceId": {
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoInstanceSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the specification of an instance.",
        "tags": [
          "InstanceService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/instances/search": {
      "post": {
        "operationId": "InstanceService_Search2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "instanceGroup": {
                      "title": "If instanceGroupFilter is ExactValue, return instances in this instance group.\nOtherwise, this field is ignored",
                      "type": "string"
                    },
                    "instanceGroupFilter": {
                      "$ref": "#/definitions/protoSearchFilterCriteria"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "If not empty, only return instances that have these key/value pairs.",
                      "type": "object"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List instances.",
        "tags": [
          "InstanceService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/loadbalancers": {
      "get": {
        "operationId": "LoadBalancerService_Search",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoadBalancerSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List load balancers.",
        "tags": [
          "LoadBalancerService"
        ]
      },
      "post": {
        "operationId": "LoadBalancerService_Create",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize load balancers.",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name will be generated if empty.",
                      "type": "string"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoLoadBalancerSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoadBalancer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create a new load balancer.",
        "tags": [
          "LoadBalancerService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/loadbalancers/id/{metadata.resourceId}": {
      "delete": {
        "operationId": "LoadBalancerService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion of a load balancer.",
        "tags": [
          "LoadBalancerService"
        ]
      },
      "get": {
        "operationId": "LoadBalancerService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoadBalancer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the status of a load balancer.",
        "tags": [
          "LoadBalancerService"
        ]
      },
      "put": {
        "operationId": "LoadBalancerService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize load balancers.",
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoLoadBalancerSpecUpdate"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the specification of an load balancer.",
        "tags": [
          "LoadBalancerService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/loadbalancers/name/{metadata.name}": {
      "delete": {
        "operationId": "LoadBalancerService_Delete2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion of a load balancer.",
        "tags": [
          "LoadBalancerService"
        ]
      },
      "get": {
        "operationId": "LoadBalancerService_Get2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoadBalancer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the status of a load balancer.",
        "tags": [
          "LoadBalancerService"
        ]
      },
      "put": {
        "operationId": "LoadBalancerService_Update2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize load balancers.",
                      "type": "object"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    },
                    "resourceId": {
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoLoadBalancerSpecUpdate"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the specification of an load balancer.",
        "tags": [
          "LoadBalancerService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/loadbalancers/search": {
      "post": {
        "operationId": "LoadBalancerService_Search2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "If not empty, only return load balancers that have these key/value pairs.",
                      "type": "object"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoadBalancerSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List load balancers.",
        "tags": [
          "LoadBalancerService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/network/default": {
      "post": {
        "operationId": "GlobalOperationsService_CreateDefault",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize instances.\nThis is also used by TopologySpreadConstraints.",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name will be generated if empty.",
                      "type": "string"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVPC"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create a 'default' VPC.",
        "tags": [
          "GlobalOperationsService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/network/subnets/id/{metadata.resourceId}": {
      "put": {
        "operationId": "SubnetService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "creationTimestamp": {
                      "description": "Not implemented.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletionTimestamp": {
                      "description": "Timestamp when resource was requested to be deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize subnets.\nThis can also be used by to evaluate placements for instances.",
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "resourceVersion can be provided with Update and Delete for concurrency control.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update a Subnet.",
        "tags": [
          "SubnetService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/network/vpcs": {
      "get": {
        "operationId": "VPCService_Search",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVPCSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a list of stored VPCs.",
        "tags": [
          "VPCService"
        ]
      },
      "post": {
        "operationId": "VPCService_Create",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize instances.\nThis is also used by TopologySpreadConstraints.",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name will be generated if empty.",
                      "type": "string"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoVPCSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVPC"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create a VPC.",
        "tags": [
          "VPCService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/network/vpcs/id/{metadata.resourceId}": {
      "delete": {
        "operationId": "VPCService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete a VPC from the DB.\nReturns FailedPrecondition if VPC has any resources associated like routers, subnets, ports or security groups.",
        "tags": [
          "VPCService"
        ]
      },
      "get": {
        "operationId": "VPCService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVPC"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieve a VPC record from DB",
        "tags": [
          "VPCService"
        ]
      },
      "put": {
        "operationId": "VPCService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The entire set of labels will be replaced with these labels.\nNot implemented.",
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update name or labels for VPC",
        "tags": [
          "VPCService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/network/vpcs/id/{spec.vpcId}/subnets": {
      "get": {
        "operationId": "SubnetService_Search",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "spec.vpcId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "spec.cidrBlock",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "spec.availabilityZone",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSubnetSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a list of stored Subnets.",
        "tags": [
          "SubnetService"
        ]
      },
      "post": {
        "operationId": "SubnetService_Create",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "spec.vpcId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize instances.\nThis is also used by TopologySpreadConstraints.",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name will be generated if empty.",
                      "type": "string"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "properties": {
                    "availabilityZone": {
                      "type": "string"
                    },
                    "cidrBlock": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVPCSubnet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create a Subnet.",
        "tags": [
          "SubnetService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/network/vpcs/id/{spec.vpcId}/subnets/id/{metadata.resourceId}": {
      "delete": {
        "operationId": "SubnetService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "spec.vpcId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "spec.cidrBlock",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "spec.availabilityZone",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete a Subnet from the DB.\nReturns FailedPrecondition if Subnet has any resources associated like routers, subnets, ports or security groups.",
        "tags": [
          "SubnetService"
        ]
      },
      "get": {
        "operationId": "SubnetService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "spec.vpcId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "spec.cidrBlock",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "spec.availabilityZone",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVPCSubnet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieve a subnet record from DB",
        "tags": [
          "SubnetService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/network/vpcs/id/{spec.vpcId}/subnets/search": {
      "post": {
        "operationId": "SubnetService_Search2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "spec.vpcId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "If not empty, only return instances that have these key/value pairs.",
                      "type": "object"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "properties": {
                    "availabilityZone": {
                      "type": "string"
                    },
                    "cidrBlock": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSubnetSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a list of stored Subnets.",
        "tags": [
          "SubnetService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/network/vpcs/name/{metadata.name}": {
      "get": {
        "operationId": "VPCService_Get2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          },
          {
            "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
            "in": "query",
            "name": "metadata.resourceVersion",
            "required": false,
            "type": "string"
          },
          {
            "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
            "in": "query",
            "name": "metadata.reserved1",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVPC"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieve a VPC record from DB",
        "tags": [
          "VPCService"
        ]
      },
      "put": {
        "operationId": "VPCService_Update2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "The entire set of labels will be replaced with these labels.\nNot implemented.",
                      "type": "object"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    },
                    "resourceId": {
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "If provided, the existing record must have this resourceVersion for the request to succeed.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update name or labels for VPC",
        "tags": [
          "VPCService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/network/vpcs/search": {
      "post": {
        "operationId": "VPCService_Search2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "If not empty, only return instances that have these key/value pairs.",
                      "type": "object"
                    },
                    "reserved1": {
                      "description": "Reserved. Added this field to overcome openAPi-same-struct issue.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVPCSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a list of stored VPCs.",
        "tags": [
          "VPCService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/buckets": {
      "get": {
        "operationId": "ObjectStorageService_SearchBucket",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectBucketSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List buckets.",
        "tags": [
          "ObjectStorageService"
        ]
      },
      "post": {
        "operationId": "ObjectStorageService_CreateBucket",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Map of string keys and values that can be used to organize and categorize instances.",
                      "type": "object"
                    },
                    "name": {
                      "description": "Name will be generated if empty.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoObjectBucketSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Provision a new s3 bucket",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/buckets/id/{metadata.bucketId}": {
      "delete": {
        "operationId": "ObjectStorageService_DeleteBucket",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.bucketId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.bucketName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion of a bucket.",
        "tags": [
          "ObjectStorageService"
        ]
      },
      "get": {
        "operationId": "ObjectStorageService_GetBucket",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.bucketId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.bucketName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the status of an s3 bucket.",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/buckets/id/{metadata.bucketId}/lifecyclerule": {
      "post": {
        "operationId": "ObjectStorageService_CreateBucketLifecycleRule",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.bucketId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "creationTimestamp": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletionTimestamp": {
                      "description": "Timestamp when resource was requested to be deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "resourceId": {
                      "type": "string"
                    },
                    "ruleName": {
                      "type": "string"
                    },
                    "updateTimestamp": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoBucketLifecycleRuleSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBucketLifecycleRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request bucket lifecycle policy",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/buckets/id/{metadata.bucketId}/lifecyclerule/id/{metadata.ruleId}": {
      "delete": {
        "operationId": "ObjectStorageService_DeleteBucketLifecycleRule",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.bucketId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete bucket lifecycle policy",
        "tags": [
          "ObjectStorageService"
        ]
      },
      "get": {
        "operationId": "ObjectStorageService_GetBucketLifecycleRule",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.bucketId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBucketLifecycleRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get bucket lifecycle policy",
        "tags": [
          "ObjectStorageService"
        ]
      },
      "put": {
        "operationId": "ObjectStorageService_UpdateBucketLifecycleRule",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.bucketId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.ruleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoBucketLifecycleRuleSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBucketLifecycleRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update bucket lifecycle policy",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/buckets/name/{metadata.bucketName}": {
      "delete": {
        "operationId": "ObjectStorageService_DeleteBucket2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.bucketName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.bucketId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Request deletion of a bucket.",
        "tags": [
          "ObjectStorageService"
        ]
      },
      "get": {
        "operationId": "ObjectStorageService_GetBucket2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.bucketName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.bucketId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectBucket"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the status of an s3 bucket.",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/users": {
      "post": {
        "operationId": "ObjectStorageService_CreateObjectUser",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "items": {
                    "$ref": "#/definitions/protoObjectUserPermissionSpec"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create object service user",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/users/id/{metadata.userId}": {
      "delete": {
        "operationId": "ObjectStorageService_DeleteObjectUser",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.userName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete object service user",
        "tags": [
          "ObjectStorageService"
        ]
      },
      "get": {
        "operationId": "ObjectStorageService_GetObjectUser",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.userName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get object service user",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/users/id/{metadata.userId}/credentials": {
      "put": {
        "operationId": "ObjectStorageService_UpdateObjectUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.userName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update credentials for object service user",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/users/id/{metadata.userId}/policy": {
      "put": {
        "operationId": "ObjectStorageService_UpdateObjectUserPolicy",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "userName": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "items": {
                    "$ref": "#/definitions/protoObjectUserPermissionSpec"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update policies for object service user",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/users/name/{metadata.userName}": {
      "delete": {
        "operationId": "ObjectStorageService_DeleteObjectUser2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete object service user",
        "tags": [
          "ObjectStorageService"
        ]
      },
      "get": {
        "operationId": "ObjectStorageService_GetObjectUser2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get object service user",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/users/name/{metadata.userName}/credentials": {
      "put": {
        "operationId": "ObjectStorageService_UpdateObjectUserCredentials2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update credentials for object service user",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/objects/users/name/{metadata.userName}/policy": {
      "put": {
        "operationId": "ObjectStorageService_UpdateObjectUserPolicy2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "userId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "items": {
                    "$ref": "#/definitions/protoObjectUserPermissionSpec"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoObjectUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update policies for object service user",
        "tags": [
          "ObjectStorageService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/sshpublickeys": {
      "get": {
        "operationId": "SshPublicKeyService_Search",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSshPublicKeySearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a list of stored SSH public keys.",
        "tags": [
          "SshPublicKeyService"
        ]
      },
      "post": {
        "operationId": "SshPublicKeyService_Create",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "labels": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Not implemented.",
                      "type": "object"
                    },
                    "name": {
                      "description": "If Name is not empty, it must be unique within the cloudAccountId.\nIt will be generated if empty.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoSshPublicKeySpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSshPublicKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Store an SSH public key.",
        "tags": [
          "SshPublicKeyService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/sshpublickeys/id/{metadata.resourceId}": {
      "delete": {
        "operationId": "SshPublicKeyService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete an SSH public key.",
        "tags": [
          "SshPublicKeyService"
        ]
      },
      "get": {
        "operationId": "SshPublicKeyService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSshPublicKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieve a stored SSH public key.",
        "tags": [
          "SshPublicKeyService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/sshpublickeys/name/{metadata.name}": {
      "delete": {
        "operationId": "SshPublicKeyService_Delete2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete an SSH public key.",
        "tags": [
          "SshPublicKeyService"
        ]
      },
      "get": {
        "operationId": "SshPublicKeyService_Get2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSshPublicKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieve a stored SSH public key.",
        "tags": [
          "SshPublicKeyService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/vnets": {
      "get": {
        "operationId": "VNetService_Search",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVNetSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a list of stored VNets.",
        "tags": [
          "VNetService"
        ]
      },
      "post": {
        "operationId": "VNetService_Put",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "metadata": {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "spec": {
                  "$ref": "#/definitions/protoVNetSpec"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVNet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create or update a VNet.",
        "tags": [
          "VNetService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/vnets/id/{metadata.resourceId}": {
      "delete": {
        "operationId": "VNetService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete an VNet from the DB.\nReturns FailedPrecondition if VNet has running instances or other consumed IP addresses.",
        "tags": [
          "VNetService"
        ]
      },
      "get": {
        "operationId": "VNetService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVNet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieve a VNet record from DB",
        "tags": [
          "VNetService"
        ]
      }
    },
    "/v1/cloudaccounts/{metadata.cloudAccountId}/vnets/name/{metadata.name}": {
      "delete": {
        "operationId": "VNetService_Delete2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete an VNet from the DB.\nReturns FailedPrecondition if VNet has running instances or other consumed IP addresses.",
        "tags": [
          "VNetService"
        ]
      },
      "get": {
        "operationId": "VNetService_Get2",
        "parameters": [
          {
            "in": "path",
            "name": "metadata.cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "metadata.resourceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVNet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieve a VNet record from DB",
        "tags": [
          "VNetService"
        ]
      }
    },
    "/v1/cloudaccounts/{name}": {
      "get": {
        "operationId": "CloudAccountService_CheckCloudAccountExists",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudcredits/coupons": {
      "get": {
        "operationId": "CloudCreditsCouponService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "redeemed",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "creator",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCouponResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCouponService"
        ]
      },
      "post": {
        "operationId": "CloudCreditsCouponService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCouponCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCoupon"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCouponService"
        ]
      }
    },
    "/v1/cloudcredits/coupons/disable": {
      "post": {
        "operationId": "CloudCreditsCouponService_Disable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCouponDisable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCouponService"
        ]
      }
    },
    "/v1/cloudcredits/coupons/redeem": {
      "post": {
        "operationId": "CloudCreditsCouponService_Redeem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudCreditsCouponRedeem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCouponService"
        ]
      }
    },
    "/v1/cloudcredits/credit": {
      "get": {
        "operationId": "CloudCreditsCreditService_ReadCredits",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "history",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreditResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      },
      "post": {
        "operationId": "CloudCreditsCreditService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCredit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/credit/creditmigrate": {
      "post": {
        "operationId": "CloudCreditsCreditService_CreditMigrate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUnappliedCredits"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/credit/deletemigratedcredit": {
      "post": {
        "operationId": "CloudCreditsCreditService_DeleteMigratedCredit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMigratedCredits"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/credit/unapplied": {
      "get": {
        "operationId": "CloudCreditsCreditService_ReadUnappliedCreditBalance",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUnappliedCreditBalance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/ping": {
      "get": {
        "operationId": "CloudCreditsCreditService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/state": {
      "get": {
        "operationId": "CloudCreditsCreditService_ReadCreditStateLog",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreditsStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      },
      "post": {
        "operationId": "CloudCreditsCreditService_CreateCreditStateLog",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreditsState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudmonitor/admin/intervals/{category}": {
      "get": {
        "operationId": "CloudMonitorService_GetIntervals",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetIntervalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudmonitor/admin/metrics/{category}": {
      "get": {
        "operationId": "CloudMonitorService_GetMetricTypes",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetMetricTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudmonitor/admin/resourcetypes": {
      "get": {
        "operationId": "CloudMonitorService_GetResourceCategories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetResourceCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/console/{cloudAccountId}/invoices/unbilled": {
      "get": {
        "operationId": "ConsoleInvoiceService_ReadUnbilled",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Example: May 2023",
            "format": "date-time",
            "in": "query",
            "name": "billingPeriod",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoConsoleInvoiceUnbilledResponse"
                }
              },
              "title": "Stream result of protoConsoleInvoiceUnbilledResponse",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ConsoleInvoiceService"
        ]
      }
    },
    "/v1/deprecated/billing/coupons": {
      "get": {
        "operationId": "BillingCouponService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "redeemed",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "creator",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingCouponResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCouponService"
        ]
      },
      "post": {
        "operationId": "BillingCouponService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingCouponCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingCoupon"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCouponService"
        ]
      }
    },
    "/v1/deprecated/billing/coupons/disable": {
      "post": {
        "operationId": "BillingCouponService_Disable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingCouponDisable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCouponService"
        ]
      }
    },
    "/v1/deprecated/billing/coupons/redeem": {
      "post": {
        "operationId": "BillingCouponService_Redeem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingCouponRedeem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCouponService"
        ]
      }
    },
    "/v1/deprecated/billing/credit": {
      "get": {
        "operationId": "BillingCreditService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "history",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingCreditResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      },
      "post": {
        "operationId": "BillingCreditService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingCredit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/v1/deprecated/billing/credit/creditmigrate": {
      "post": {
        "operationId": "BillingCreditService_CreditMigrate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingUnappliedCredit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/v1/deprecated/billing/credit/deletemigratedcredit": {
      "post": {
        "operationId": "BillingCreditService_DeleteMigratedCredit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingMigratedCredit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/v1/deprecated/billing/credit/unapplied": {
      "get": {
        "operationId": "BillingCreditService_ReadUnappliedCreditBalance",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingUnappliedCreditBalance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/v1/email/send": {
      "post": {
        "operationId": "EmailNotificationService_SendUserEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EmailNotificationService"
        ]
      }
    },
    "/v1/fleetadmin/accountmanagercomputenodepools": {
      "get": {
        "operationId": "FleetAdminUIService_SearchComputeNodePoolsForPoolAccountManager",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchComputeNodePoolsForPoolAccountManagerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the list of compute node pools that are allowed to be managed by current user's AGS entitlement.",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/fleetadmin/computenodepools": {
      "get": {
        "operationId": "FleetAdminUIService_SearchComputeNodePoolsForNodeAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchComputeNodePoolsForNodeAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the list of compute node pools",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/fleetadmin/computenodepools/{poolId}": {
      "put": {
        "operationId": "FleetAdminUIService_PutComputeNodePool",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "poolAccountManagerAgsRole": {
                  "type": "string"
                },
                "poolName": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the pool",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/fleetadmin/computenodepools/{poolId}/cloudaccounts": {
      "get": {
        "operationId": "FleetAdminUIService_SearchCloudAccountsForComputeNodePool",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchCloudAccountsForComputeNodePoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the list of cloudaccounts",
        "tags": [
          "FleetAdminUIService"
        ]
      },
      "post": {
        "operationId": "FleetAdminUIService_AddCloudAccountToComputeNodePool",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "cloudAccountId": {
                  "type": "string"
                },
                "createAdmin": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Add a CloudAccount to a ComputeNode Pool that the CloudAccount is allowed to launch instances in.",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/fleetadmin/computenodepools/{poolId}/cloudaccounts/{cloudAccountId}": {
      "delete": {
        "operationId": "FleetAdminUIService_DeleteCloudAccountFromComputeNodePool",
        "parameters": [
          {
            "in": "path",
            "name": "poolId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete a CloudAccount from the compute node pool",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/fleetadmin/nodes": {
      "get": {
        "operationId": "FleetAdminUIService_SearchNodes",
        "parameters": [
          {
            "description": "If not empty, only nodes in this pool will be returned.",
            "in": "query",
            "name": "poolId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the list of compute nodes",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/fleetadmin/nodes/instancetypestats": {
      "get": {
        "operationId": "FleetAdminUIService_SearchInstanceTypeStatsForNode",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "nodeId",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchInstanceTypeStatsForNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the InstanceType Stats for Node(s)",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/fleetadmin/nodes/{nodeId}": {
      "put": {
        "operationId": "FleetAdminUIService_UpdateNode",
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "nodeId",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "availabilityZone": {
                  "type": "string"
                },
                "computeNodePoolsOverride": {
                  "$ref": "#/definitions/protoOverridePoliciesAndValues"
                },
                "instanceTypesOverride": {
                  "$ref": "#/definitions/protoOverridePoliciesAndValues"
                },
                "region": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update the compute node",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/fleetadmin/nodes/{nodeId}/instancetypestats": {
      "get": {
        "operationId": "FleetAdminUIService_SearchInstanceTypeStatsForNode2",
        "parameters": [
          {
            "format": "int32",
            "in": "path",
            "name": "nodeId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSearchInstanceTypeStatsForNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get the InstanceType Stats for Node(s)",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/fleetadmin/ping": {
      "get": {
        "operationId": "FleetAdminUIService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "FleetAdminUIService"
        ]
      }
    },
    "/v1/generate/{model}": {
      "post": {
        "operationId": "Dispatcher_Generate",
        "parameters": [
          {
            "in": "path",
            "name": "model",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "request": {
                  "$ref": "#/definitions/protoGenerateStreamRequest"
                },
                "requestID": {
                  "type": "string"
                },
                "timeout": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDispatcherResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Dispatcher"
        ]
      }
    },
    "/v1/generateStream/{model}": {
      "post": {
        "operationId": "Dispatcher_GenerateStream",
        "parameters": [
          {
            "in": "path",
            "name": "model",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "request": {
                  "$ref": "#/definitions/protoGenerateStreamRequest"
                },
                "requestID": {
                  "type": "string"
                },
                "timeout": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDispatcherResponse"
                }
              },
              "title": "Stream result of protoDispatcherResponse",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Dispatcher"
        ]
      }
    },
    "/v1/iks/admin/addons": {
      "get": {
        "operationId": "IksAdmin_GetAddOns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetAddOnResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "post": {
        "operationId": "IksAdmin_CreateNewAddOn",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateAddonAdminRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAddonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "addons",
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/addons/{name}": {
      "delete": {
        "operationId": "IksAdmin_DeleteAddOn",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "get": {
        "operationId": "IksAdmin_GetAddOn",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAddonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "put": {
        "operationId": "IksAdmin_PutAddOn",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adminonly": {
                  "type": "boolean"
                },
                "args": {
                  "items": {
                    "$ref": "#/definitions/protoKeyvaluepair"
                  },
                  "type": "array"
                },
                "artifact": {
                  "type": "string"
                },
                "k8sversion": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "tags": {
                  "items": {
                    "$ref": "#/definitions/protoKeyvaluepair"
                  },
                  "type": "array"
                },
                "type": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAddonResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/authenticate": {
      "post": {
        "operationId": "IksAdmin_AuthenticateIKSAdminUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Authenticate IKS Admin User",
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/cloudaccounts/approvelist": {
      "get": {
        "operationId": "IksAdmin_GetCloudAccountApproveList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountApproveListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/cloudaccounts/{cloudaccountId}/approvelist": {
      "post": {
        "operationId": "IksAdmin_PostCloudAccountApproveList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "enableStorage": {
                  "type": "boolean"
                },
                "iksadminkey": {
                  "type": "string"
                },
                "maxclusterilbOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "maxclusterngOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "maxclustersOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "maxclustervmOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "maxnodegroupvmOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "status": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountApproveList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "put": {
        "operationId": "IksAdmin_PutCloudAccountApproveList",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "enableStorage": {
                  "type": "boolean"
                },
                "iksadminkey": {
                  "type": "string"
                },
                "maxclusterilbOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "maxclusterngOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "maxclustersOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "maxclustervmOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "maxnodegroupvmOverride": {
                  "format": "int32",
                  "type": "integer"
                },
                "status": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountApproveList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters": {
      "get": {
        "operationId": "IksAdmin_GetClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetClustersAdmin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Cluster management",
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}": {
      "get": {
        "operationId": "IksAdmin_GetCluster",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetClusterAdmin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}/events": {
      "get": {
        "operationId": "IksAdmin_GetEvents",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}/ilbs": {
      "get": {
        "operationId": "IksAdmin_GetLoadBalancers",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoadBalancers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "post": {
        "operationId": "IksAdmin_PostLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "lb": {
                  "$ref": "#/definitions/protoLoadbalancer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoadbalancerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}/ilbs/{lbid}": {
      "delete": {
        "operationId": "IksAdmin_DeleteLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "path",
            "name": "lbid",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "get": {
        "operationId": "IksAdmin_GetLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "path",
            "name": "lbid",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoadbalancerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "put": {
        "operationId": "IksAdmin_PutLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "path",
            "name": "lbid",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "lb": {
                  "$ref": "#/definitions/protoLoadbalancer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoadbalancerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}/lbrecreate": {
      "put": {
        "operationId": "IksAdmin_ClusterRecreate",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}/nodegroups/{nodegroupuuid}": {
      "put": {
        "operationId": "IksAdmin_PutCPNodegroup",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "nodegroupuuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "format": "int32",
            "in": "query",
            "name": "count",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "releaseversion",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoNodegroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}/nodegroups/{nodegroupuuid}/upgrade": {
      "post": {
        "operationId": "IksAdmin_UpgradeClusterControlPlane",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "nodegroupuuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "k8sversionname": {
                  "type": "string"
                }
              },
              "title": "NodeGroupid",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}/security": {
      "get": {
        "operationId": "IksAdmin_GetFirewallRule",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetAdminFirewallRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}/snapshot": {
      "post": {
        "operationId": "IksAdmin_ClusterSnapshot",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoPostSnapshotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/clusters/{clusteruuid}/sshkeys": {
      "get": {
        "operationId": "IksAdmin_GetControlPlaneSSHKeys",
        "parameters": [
          {
            "in": "path",
            "name": "clusteruuid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClusterSSHKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/imis": {
      "get": {
        "operationId": "IksAdmin_GetIMIs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetIMIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "post": {
        "operationId": "IksAdmin_CreateIMI",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoIMIRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoIMIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create IMI",
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/imis/info": {
      "get": {
        "operationId": "IksAdmin_GetIMIsInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetIMIsInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/imis/{name}": {
      "delete": {
        "operationId": "IksAdmin_DeleteIMI",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "iksadminkey",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "get": {
        "operationId": "IksAdmin_GetIMI",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoIMIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "put": {
        "operationId": "IksAdmin_PutIMI",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "artifact": {
                  "type": "string"
                },
                "bootstraprepo": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "components": {
                  "items": {
                    "$ref": "#/definitions/protoComponent"
                  },
                  "type": "array"
                },
                "family": {
                  "type": "string"
                },
                "iksadminkey": {
                  "type": "string"
                },
                "os": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "runtime": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "upstreamreleasename": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoIMIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/imis/{name}/k8s": {
      "put": {
        "operationId": "IksAdmin_UpdateIMIInstanceTypeToK8sCompatibility",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "category": {
                  "type": "string"
                },
                "family": {
                  "type": "string"
                },
                "iksadminkey": {
                  "type": "string"
                },
                "instancetypes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "os": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "runtime": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "upstreamreleasename": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoIMIInstanceTypeK8sResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/instancetypes": {
      "get": {
        "operationId": "IksAdmin_GetInstanceTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetInstanceTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "post": {
        "operationId": "IksAdmin_CreateInstanceTypes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateInstanceTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/instancetypes/info": {
      "get": {
        "operationId": "IksAdmin_GetInstanceTypeInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetInstanceTypeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/instancetypes/{name}": {
      "delete": {
        "operationId": "IksAdmin_DeleteInstanceType",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "iksadminkey",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "get": {
        "operationId": "IksAdmin_GetInstanceType",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetInstanceTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "put": {
        "operationId": "IksAdmin_PutInstanceType",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "category": {
                  "type": "string"
                },
                "cpu": {
                  "format": "int32",
                  "type": "integer"
                },
                "description": {
                  "type": "string"
                },
                "displayname": {
                  "type": "string"
                },
                "family": {
                  "type": "string"
                },
                "iksadminkey": {
                  "type": "string"
                },
                "imioverride": {
                  "type": "boolean"
                },
                "memory": {
                  "format": "int32",
                  "type": "integer"
                },
                "nodeprovidername": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "storage": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/instancetypes/{name}/k8s": {
      "put": {
        "operationId": "IksAdmin_UpdateInstanceTypeIMIToK8sCompatibility",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "category": {
                  "type": "string"
                },
                "family": {
                  "type": "string"
                },
                "iksadminkey": {
                  "type": "string"
                },
                "instacetypeimik8scompatibilityresponse": {
                  "items": {
                    "$ref": "#/definitions/protoInstacetypeIMIK8sCompatibility"
                  },
                  "type": "array"
                },
                "nodeprovidername": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceTypeIMIK8sResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/k8sversions": {
      "get": {
        "operationId": "IksAdmin_GetK8SVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetK8sVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "post": {
        "operationId": "IksAdmin_CreateK8SVersion",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreatek8sversionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoK8sversionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "K8Sversions",
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/iks/admin/k8sversions/{name}": {
      "delete": {
        "operationId": "IksAdmin_DeleteK8SVersion",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "get": {
        "operationId": "IksAdmin_GetK8SVersion",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoK8sversionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      },
      "put": {
        "operationId": "IksAdmin_PutK8SVersion",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "cpimi": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "workimi": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoK8sversionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "IksAdmin"
        ]
      }
    },
    "/v1/instancetypes": {
      "get": {
        "operationId": "InstanceTypeService_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceTypeSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List instance types.",
        "tags": [
          "InstanceTypeService"
        ]
      }
    },
    "/v1/instancetypes/{metadata.name}": {
      "get": {
        "operationId": "InstanceTypeService_Get",
        "parameters": [
          {
            "description": "Unique name of the instance type.",
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInstanceType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get an instance type.",
        "tags": [
          "InstanceTypeService"
        ]
      }
    },
    "/v1/maas/generatestream": {
      "post": {
        "operationId": "MaasGateway_GenerateStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMaasRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoMaasResponse"
                }
              },
              "title": "Stream result of protoMaasResponse",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MaasGateway"
        ]
      }
    },
    "/v1/maas/models": {
      "get": {
        "operationId": "MaasGateway_GetSupportedModels",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListSupportedModels"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MaasGateway"
        ]
      }
    },
    "/v1/machineimages": {
      "get": {
        "operationId": "MachineImageService_Search",
        "parameters": [
          {
            "in": "query",
            "name": "metadata.instanceType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoMachineImageSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List machine images.",
        "tags": [
          "MachineImageService"
        ]
      }
    },
    "/v1/machineimages/{metadata.name}": {
      "get": {
        "operationId": "MachineImageService_Get",
        "parameters": [
          {
            "description": "Unique name of the machine image.",
            "in": "path",
            "name": "metadata.name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoMachineImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get a machine image.",
        "tags": [
          "MachineImageService"
        ]
      }
    },
    "/v1/meteringrecords": {
      "patch": {
        "operationId": "MeteringService_Update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUsageUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      },
      "post": {
        "operationId": "MeteringService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUsageCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/invalid": {
      "post": {
        "operationId": "MeteringService_CreateInvalidRecords",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateInvalidMeteringRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/invalid/search": {
      "post": {
        "operationId": "MeteringService_SearchInvalid",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInvalidMeteringRecordFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoInvalidMeteringRecord"
                }
              },
              "title": "Stream result of protoInvalidMeteringRecord",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/previous": {
      "get": {
        "operationId": "MeteringService_FindPrevious",
        "parameters": [
          {
            "format": "int64",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/resources/available": {
      "post": {
        "operationId": "MeteringService_IsMeteringRecordAvailable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMeteringAvailableFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoMeteringAvailableResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/resources/search": {
      "post": {
        "operationId": "MeteringService_SearchResourceMeteringRecordsAsStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMeteringFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoResourceMeteringRecordsList"
                }
              },
              "title": "Stream result of protoResourceMeteringRecordsList",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "this API is only for internal use, please DO NOT expose as a external API as it is not RESTful",
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/search": {
      "post": {
        "operationId": "MeteringService_Search",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUsageFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoUsage"
                }
              },
              "title": "Stream result of protoUsage",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/notification/email/send": {
      "post": {
        "operationId": "EmailNotificationService_SendEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSendEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EmailNotificationService"
        ]
      }
    },
    "/v1/notification/event/publish": {
      "post": {
        "operationId": "NotificationGatewayService_PublishEvent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoPublishEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoPublishEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/notification/event/subscribe": {
      "post": {
        "operationId": "NotificationGatewayService_SubscribeEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSubscribeEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSubscribeEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/notification/events/delete": {
      "post": {
        "operationId": "NotificationGatewayService_DeleteEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDeleteEventRequestList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/notification/events/receive": {
      "post": {
        "operationId": "NotificationGatewayService_ReceiveEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReceiveEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoReceiveEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/otp/create": {
      "post": {
        "operationId": "OtpService_CreateOtp",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoOtpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "OtpService"
        ]
      }
    },
    "/v1/otp/resend": {
      "post": {
        "operationId": "OtpService_ResendOtp",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoOtpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "OtpService"
        ]
      }
    },
    "/v1/otp/verify": {
      "post": {
        "operationId": "OtpService_VerifyOtp",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoVerifyOtpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVerifyOtpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "OtpService"
        ]
      }
    },
    "/v1/pc/families": {
      "get": {
        "operationId": "FamilyService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "adminName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "enabled",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFamilyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FamilyService"
        ]
      },
      "post": {
        "operationId": "FamilyService_Add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoFamilyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "only used by admin",
        "tags": [
          "FamilyService"
        ]
      }
    },
    "/v1/pc/families/id/{id}": {
      "get": {
        "operationId": "FamilyService_GetById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFamilyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FamilyService"
        ]
      },
      "put": {
        "operationId": "FamilyService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adminName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "vendorId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FamilyService"
        ]
      }
    },
    "/v1/pc/products": {
      "post": {
        "operationId": "ProductCatalogServiceV2_UserRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/v1/pc/products/acl": {
      "get": {
        "operationId": "AccessService_ReadAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetAccessResponseV2"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccessService"
        ]
      }
    },
    "/v1/pc/products/acl/add": {
      "post": {
        "operationId": "AccessService_AddAccess",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductAccessRequestV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccessService"
        ]
      }
    },
    "/v1/pc/products/acl/delete": {
      "delete": {
        "operationId": "AccessService_RemoveAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccessService"
        ]
      }
    },
    "/v1/pc/products/admin": {
      "post": {
        "operationId": "ProductCatalogServiceV2_AdminRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "to be used by billing",
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/v1/pc/products/cr": {
      "get": {
        "operationId": "ProductChangeRequestService_ReadProductChangeRequest",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "default": "pending",
            "enum": [
              "pending",
              "approved",
              "denied"
            ],
            "in": "query",
            "name": "requestStatus",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductChangeRequestResponseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      },
      "post": {
        "operationId": "ProductChangeRequestService_AddProductDataInChangeRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProposedData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      }
    },
    "/v1/pc/products/cr/enable/{productId}": {
      "post": {
        "operationId": "ProductChangeRequestService_EnableProductInChangeRequest",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "enable": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      }
    },
    "/v1/pc/products/cr/review": {
      "post": {
        "operationId": "ProductChangeRequestService_ReviewProductChangeRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReviewProductChangeRequestFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      }
    },
    "/v1/pc/products/cr/{product.id}": {
      "post": {
        "operationId": "ProductChangeRequestService_UpdateProductDataInChangeRequest",
        "parameters": [
          {
            "in": "path",
            "name": "product.id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "product": {
                  "properties": {
                    "accountTypesBlocked": {
                      "type": "string"
                    },
                    "accountWhitelist": {
                      "type": "boolean"
                    },
                    "billingEnable": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "displayCategory": {
                      "type": "string"
                    },
                    "displayDesc": {
                      "type": "string"
                    },
                    "displayHighlight": {
                      "type": "string"
                    },
                    "displayInfo": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "eccn": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "familyId": {
                      "type": "string"
                    },
                    "instanceCategory": {
                      "type": "string"
                    },
                    "instanceMode": {
                      "type": "string"
                    },
                    "instanceType": {
                      "type": "string"
                    },
                    "matchExpr": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "pcq": {
                      "type": "string"
                    },
                    "releaseStatus": {
                      "type": "string"
                    },
                    "serviceName": {
                      "type": "string"
                    },
                    "serviceType": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "usecase": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "rates": {
                  "items": {
                    "$ref": "#/definitions/protoRateData"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      }
    },
    "/v1/pc/products/interests": {
      "get": {
        "operationId": "ProductInterestService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userEmail",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductInterestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductInterestService"
        ]
      },
      "post": {
        "operationId": "ProductInterestService_Add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductInterestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "only used by admin",
        "tags": [
          "ProductInterestService"
        ]
      }
    },
    "/v1/pc/productsync/{id}": {
      "get": {
        "operationId": "ProductSyncService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDefaultProduct"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductSyncService"
        ]
      }
    },
    "/v1/pc/vendors": {
      "get": {
        "operationId": "VendorService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVendorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "to be used by billing",
        "tags": [
          "VendorService"
        ]
      }
    },
    "/v1/pc/vendors/add": {
      "post": {
        "operationId": "VendorService_Add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoVendorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorService"
        ]
      }
    },
    "/v1/pc/vendors/id/{id}": {
      "get": {
        "operationId": "VendorService_GetById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVendorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorService"
        ]
      },
      "put": {
        "operationId": "VendorService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adminName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorService"
        ]
      }
    },
    "/v1/pc/vendorsync/{id}": {
      "get": {
        "operationId": "VendorSyncService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDefaultVendor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorSyncService"
        ]
      }
    },
    "/v1/ping": {
      "get": {
        "operationId": "SshPublicKeyService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "SshPublicKeyService"
        ]
      }
    },
    "/v1/products": {
      "post": {
        "operationId": "ProductCatalogService_UserRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "user read call",
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/v1/products/acl": {
      "get": {
        "operationId": "ProductAccessService_ReadAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetAccessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductAccessService"
        ]
      }
    },
    "/v1/products/acl/access": {
      "get": {
        "operationId": "ProductAccessService_CheckProductAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductAccessService"
        ]
      }
    },
    "/v1/products/acl/add": {
      "post": {
        "operationId": "ProductAccessService_AddAccess",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductAccessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductAccessService"
        ]
      }
    },
    "/v1/products/acl/delete": {
      "delete": {
        "operationId": "ProductAccessService_RemoveAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductAccessService"
        ]
      }
    },
    "/v1/products/admin": {
      "post": {
        "operationId": "ProductCatalogService_AdminRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "admin read call",
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/v1/quota": {
      "get": {
        "operationId": "QuotaManagementService_ListAllServiceQuotas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListAllServiceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/registrations": {
      "get": {
        "operationId": "QuotaManagementService_ListRegisteredServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoServicesListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/register": {
      "post": {
        "operationId": "QuotaManagementService_Register",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoServiceQuotaRegistrationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoServiceQuotaRegistrationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/{serviceId}": {
      "get": {
        "operationId": "QuotaManagementService_ListServiceQuota",
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListServiceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/{serviceId}/create": {
      "post": {
        "operationId": "QuotaManagementService_CreateServiceQuota",
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "serviceQuotaResource": {
                  "$ref": "#/definitions/protoServiceQuotaResource"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreateServiceQuotaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/{serviceId}/delete": {
      "delete": {
        "operationId": "QuotaManagementService_DeleteService",
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/{serviceId}/resource/{resourceType}": {
      "get": {
        "operationId": "QuotaManagementService_GetServiceQuotaResource",
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoServiceQuotaResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/{serviceId}/resource/{resourceType}/ruleId/{ruleId}": {
      "delete": {
        "operationId": "QuotaManagementService_DeleteServiceQuotaResource",
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/{serviceId}/resource/{resourceType}/update": {
      "put": {
        "operationId": "QuotaManagementService_UpdateServiceQuotaResource",
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "quotaConfig": {
                  "$ref": "#/definitions/protoQuotaConfig"
                },
                "reason": {
                  "type": "string"
                },
                "ruleId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUpdateQuotaServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/{serviceId}/serviceResource/{resourceName}": {
      "get": {
        "operationId": "QuotaManagementService_GetServiceResource",
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoServiceResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/{serviceId}/serviceResources": {
      "get": {
        "operationId": "QuotaManagementService_ListServiceResources",
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoServiceResourcesListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/quota/service/{serviceId}/update": {
      "put": {
        "operationId": "QuotaManagementService_UpdateServiceRegistration",
        "parameters": [
          {
            "in": "path",
            "name": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "serviceResources": {
                  "items": {
                    "$ref": "#/definitions/protoServiceResource"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoServiceQuotaRegistrationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "QuotaManagementService"
        ]
      }
    },
    "/v1/regions": {
      "post": {
        "operationId": "RegionService_UserRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegionUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegionUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      }
    },
    "/v1/regions/acl": {
      "get": {
        "operationId": "RegionAccessService_ReadAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionAccessType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetRegionAccessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionAccessService"
        ]
      }
    },
    "/v1/regions/acl/access": {
      "get": {
        "operationId": "RegionAccessService_CheckRegionAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionAccessService"
        ]
      }
    },
    "/v1/regions/acl/add": {
      "post": {
        "operationId": "RegionAccessService_AddAccess",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegionAccessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionAccessService"
        ]
      }
    },
    "/v1/regions/acl/delete": {
      "delete": {
        "operationId": "RegionAccessService_RemoveAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionAccessService"
        ]
      }
    },
    "/v1/regions/add": {
      "post": {
        "operationId": "RegionService_Add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoAddRegionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      }
    },
    "/v1/regions/admin": {
      "post": {
        "operationId": "RegionService_AdminRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegionFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      }
    },
    "/v1/regions/{name}": {
      "delete": {
        "operationId": "RegionService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      },
      "put": {
        "operationId": "RegionService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "apiDns": {
                  "type": "string"
                },
                "availabilityZone": {
                  "type": "string"
                },
                "friendlyName": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "prefix": {
                  "format": "int32",
                  "type": "integer"
                },
                "subnet": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "vnet": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      }
    },
    "/v1/securityinsights/component/{component}/releases/{releaseId}": {
      "get": {
        "operationId": "SecurityInsights_GetRelease",
        "parameters": [
          {
            "enum": [
              "UNSPECIFIED_COMPONENT",
              "KUBERNETES",
              "CALICO",
              "CONTAINERD",
              "RUNC"
            ],
            "in": "path",
            "name": "component",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoK8sReleaseMD"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/component/{component}/releases/{releaseId}/sbom": {
      "get": {
        "operationId": "SecurityInsights_GetReleaseSBOM",
        "parameters": [
          {
            "enum": [
              "UNSPECIFIED_COMPONENT",
              "KUBERNETES",
              "CALICO",
              "CONTAINERD",
              "RUNC"
            ],
            "in": "path",
            "name": "component",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSBOM"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/component/{component}/releases/{releaseId}/summary": {
      "get": {
        "operationId": "SecurityInsights_GetSummary",
        "parameters": [
          {
            "enum": [
              "UNSPECIFIED_COMPONENT",
              "KUBERNETES",
              "CALICO",
              "CONTAINERD",
              "RUNC"
            ],
            "in": "path",
            "name": "component",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSecuritySummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/component/{component}/releases/{releaseId}/vulnerabilities": {
      "get": {
        "operationId": "SecurityInsights_GetReleaseVulnerabilities",
        "parameters": [
          {
            "enum": [
              "UNSPECIFIED_COMPONENT",
              "KUBERNETES",
              "CALICO",
              "CONTAINERD",
              "RUNC"
            ],
            "in": "path",
            "name": "component",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVulnerabilitiesResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/components": {
      "post": {
        "operationId": "SecurityInsights_GetAllComponents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReleaseFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoComponentList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/components/compare": {
      "post": {
        "operationId": "SecurityInsights_CompareReleaseVulnerabilities",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReleaseComparisonFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVulnerabilityComparisonReport"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/policy": {
      "get": {
        "operationId": "SecurityInsights_GetRecommendationPolicies",
        "parameters": [
          {
            "in": "query",
            "name": "active",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAllPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      },
      "post": {
        "operationId": "SecurityInsights_UpdateRecommendationPolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRecommendationPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/policy/{policyId}": {
      "get": {
        "operationId": "SecurityInsights_GetRecommendationPolicy",
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoPolicyDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/recommendations": {
      "get": {
        "operationId": "SecurityInsights_GetUpdateRecommendation",
        "parameters": [
          {
            "in": "query",
            "name": "policyId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "currentVersion",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "vendor",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "topk",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUpdateRecommendations"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/releases": {
      "post": {
        "operationId": "SecurityInsights_CreateRelease",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoK8sReleaseMD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/releases/search": {
      "post": {
        "operationId": "SecurityInsights_GetAllReleases",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReleaseFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoK8sReleaseMDList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/releases/{releaseId}/cis": {
      "get": {
        "operationId": "SecurityInsights_GetCISReport",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCISReport"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      },
      "post": {
        "operationId": "SecurityInsights_StoreCISReport",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "scanTimestamp": {
                  "format": "date-time",
                  "type": "string"
                },
                "scanTool": {
                  "type": "string"
                },
                "vulnerabilities": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/releases/{releaseId}/component": {
      "get": {
        "operationId": "SecurityInsights_GetReleaseComponent",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          },
          {
            "default": "UNSPECIFIED_COMPONENT",
            "enum": [
              "UNSPECIFIED_COMPONENT",
              "KUBERNETES",
              "CALICO",
              "CONTAINERD",
              "RUNC"
            ],
            "in": "query",
            "name": "component",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoReleaseComponents"
                }
              },
              "title": "Stream result of protoReleaseComponents",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      },
      "post": {
        "operationId": "SecurityInsights_StoreReleaseComponent",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "License": {
                  "type": "string"
                },
                "ReleaseTime": {
                  "format": "date-time",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "purl": {
                  "type": "string"
                },
                "sha256": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/protoComponentType"
                },
                "vendor": {
                  "$ref": "#/definitions/protoValidVendors"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/releases/{releaseId}/sbom": {
      "post": {
        "operationId": "SecurityInsights_StoreReleaseSBOM",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "sbom": {
                  "$ref": "#/definitions/protoSBOM"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/securityinsights/releases/{releaseId}/vulnerabilities": {
      "post": {
        "operationId": "SecurityInsights_StoreReleaseVulnerabilityReport",
        "parameters": [
          {
            "in": "path",
            "name": "releaseId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "componentName": {
                  "type": "string"
                },
                "componentSHA256": {
                  "type": "string"
                },
                "componentVersion": {
                  "type": "string"
                },
                "scanTimestamp": {
                  "format": "date-time",
                  "type": "string"
                },
                "scanTool": {
                  "type": "string"
                },
                "vulnerabilities": {
                  "items": {
                    "$ref": "#/definitions/protoVulnerability"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "SecurityInsights"
        ]
      }
    },
    "/v1/storage/admin/stats": {
      "get": {
        "operationId": "StorageAdminService_GetResourceUsage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoStorageGetResourceUsageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "GetResourceUsage returns the usage for a cloudaccount",
        "tags": [
          "StorageAdminService"
        ]
      }
    },
    "/v1/storage/admin/storageQuota": {
      "get": {
        "operationId": "StorageAdminService_GetAllStorageQuota",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoStorageQuotas"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StorageAdminService"
        ]
      },
      "post": {
        "operationId": "StorageAdminService_InsertStorageQuotaByAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInsertStorageQuotaByAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoStorageQuotaByAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StorageAdminService"
        ]
      },
      "put": {
        "operationId": "StorageAdminService_UpdateStorageQuotaByAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUpdateStorageQuotaByAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoStorageQuotaByAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StorageAdminService"
        ]
      }
    },
    "/v1/storage/admin/storageQuota/{cloudAccountId}": {
      "delete": {
        "operationId": "StorageAdminService_DeleteStorageQuotaByAccount",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StorageAdminService"
        ]
      },
      "get": {
        "operationId": "StorageAdminService_GetStorageQuotaByAccount",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoStorageQuotasByAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StorageAdminService"
        ]
      }
    },
    "/v1/usages/bulk": {
      "post": {
        "operationId": "UsageService_PostBulkUploadResourceUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBulkUploadResourceUsages"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBulkUploadResourceUsagesFailed"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/products/id/{id}": {
      "get": {
        "operationId": "UsageService_GetProductUsageById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/products/search": {
      "post": {
        "operationId": "UsageService_SearchProductUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductUsages"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/products/search/stream": {
      "post": {
        "operationId": "UsageService_StreamSearchProductUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoProductUsage"
                }
              },
              "title": "Stream result of protoProductUsage",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "UsageService server-side streaming return a stream of ProductUsages messages",
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/records/products": {
      "post": {
        "operationId": "UsageRecordService_CreateProductUsageRecord",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsageRecordCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageRecordService"
        ]
      }
    },
    "/v1/usages/records/products/invalid/search": {
      "post": {
        "operationId": "UsageRecordService_SearchInvalidProductUsageRecords",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInvalidProductUsageRecordsFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoInvalidProductUsageRecord"
                }
              },
              "title": "Stream result of protoInvalidProductUsageRecord",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageRecordService"
        ]
      }
    },
    "/v1/usages/records/products/search": {
      "post": {
        "operationId": "UsageRecordService_SearchProductUsageRecords",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsageRecordsFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoProductUsageRecord"
                }
              },
              "title": "Stream result of protoProductUsageRecord",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageRecordService"
        ]
      }
    },
    "/v1/usages/reported/products": {
      "post": {
        "operationId": "UsageService_SearchProductUsagesReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsagesReportFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoReportProductUsage"
                }
              },
              "title": "Stream result of protoReportProductUsage",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/resources": {
      "post": {
        "operationId": "UsageService_CreateResourceUsage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsageCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      },
      "put": {
        "operationId": "UsageService_UpdateResourceUsage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsageUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/resources/id/{id}": {
      "get": {
        "operationId": "UsageService_GetResourceUsageById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/resources/search": {
      "post": {
        "operationId": "UsageService_SearchResourceUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceUsages"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/resources/search/stream": {
      "post": {
        "operationId": "UsageService_StreamSearchResourceUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoResourceUsage"
                }
              },
              "title": "Stream result of protoResourceUsage",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "UsageService server-side streaming return a stream of ResourceUsages messages",
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/search": {
      "post": {
        "operationId": "UsageService_SearchUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUsages"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "defaults to returning usages for products.",
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/create": {
      "post": {
        "operationId": "UserCredentialsService_CreateUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "appClientName": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClientCredentials"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/delete": {
      "delete": {
        "operationId": "UserCredentialsService_RemoveUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clientId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/list": {
      "get": {
        "operationId": "UserCredentialsService_GetUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetUserCredentialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/member/revoke": {
      "post": {
        "operationId": "UserCredentialsService_RemoveMemberUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "revoked",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "memberEmail",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/revoke": {
      "post": {
        "operationId": "UserCredentialsService_RevokeUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "revoked",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/vendors": {
      "get": {
        "operationId": "ProductVendorService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVendorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductVendorService"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "name": "AuthzService"
    },
    {
      "name": "BillingAccountService"
    },
    {
      "name": "BillingOptionService"
    },
    {
      "name": "BillingRateService"
    },
    {
      "name": "BillingCreditService"
    },
    {
      "name": "BillingCouponService"
    },
    {
      "name": "BillingInvoiceService"
    },
    {
      "name": "BillingProductCatalogSyncService"
    },
    {
      "name": "PaymentService"
    },
    {
      "name": "BillingInstancesService"
    },
    {
      "name": "BillingUsageService"
    },
    {
      "name": "BillingOpsActionService"
    },
    {
      "name": "BillingDeactivateInstancesService"
    },
    {
      "name": "CloudAccountEnrollService"
    },
    {
      "name": "CloudAccountService"
    },
    {
      "name": "CloudAccountMemberService"
    },
    {
      "name": "CloudAccountAppClientService"
    },
    {
      "name": "OtpService"
    },
    {
      "name": "CloudAccountInvitationService"
    },
    {
      "name": "CloudAccountInvitationMemberService"
    },
    {
      "name": "CloudCreditsCreditService"
    },
    {
      "name": "CloudCreditsCouponService"
    },
    {
      "name": "CloudMonitorService"
    },
    {
      "name": "CloudMonitorLogsService"
    },
    {
      "name": "SshPublicKeyService"
    },
    {
      "name": "InstanceService"
    },
    {
      "name": "InstanceGroupService"
    },
    {
      "name": "InstanceTypeService"
    },
    {
      "name": "MachineImageService"
    },
    {
      "name": "VNetService"
    },
    {
      "name": "LoadBalancerService"
    },
    {
      "name": "ConsoleInvoiceService"
    },
    {
      "name": "DpaiAirflowSizeService"
    },
    {
      "name": "DpaiAirflowVersionService"
    },
    {
      "name": "DpaiAirflowConfService"
    },
    {
      "name": "DpaiAirflowService"
    },
    {
      "name": "DpaiDeploymentService"
    },
    {
      "name": "DpaiDeploymentTaskService"
    },
    {
      "name": "DpaiPostgresSizeService"
    },
    {
      "name": "DpaiPostgresVersionService"
    },
    {
      "name": "DpaiPostgresService"
    },
    {
      "name": "DpaiWorkspaceService"
    },
    {
      "name": "FleetAdminService"
    },
    {
      "name": "FleetAdminUIService"
    },
    {
      "name": "Iks"
    },
    {
      "name": "IksSuperCompute"
    },
    {
      "name": "IksAdmin"
    },
    {
      "name": "Dispatcher"
    },
    {
      "name": "KFService"
    },
    {
      "name": "MaasGateway"
    },
    {
      "name": "MeteringService"
    },
    {
      "name": "GlobalOperationsService"
    },
    {
      "name": "SubnetService"
    },
    {
      "name": "VPCService"
    },
    {
      "name": "NotificationGatewayService"
    },
    {
      "name": "EmailNotificationService"
    },
    {
      "name": "ProductVendorService"
    },
    {
      "name": "ProductCatalogService"
    },
    {
      "name": "ProductAccessService"
    },
    {
      "name": "RegionService"
    },
    {
      "name": "RegionAccessService"
    },
    {
      "name": "ProductSyncService"
    },
    {
      "name": "VendorSyncService"
    },
    {
      "name": "FamilyService"
    },
    {
      "name": "VendorService"
    },
    {
      "name": "ProductCatalogServiceV2"
    },
    {
      "name": "AccessService"
    },
    {
      "name": "ProductChangeRequestService"
    },
    {
      "name": "ProductInterestService"
    },
    {
      "name": "QuotaManagementService"
    },
    {
      "name": "SecurityInsights"
    },
    {
      "name": "FileStorageService"
    },
    {
      "name": "ObjectStorageService"
    },
    {
      "name": "StorageAdminService"
    },
    {
      "name": "TrainingClusterService"
    },
    {
      "name": "TrainingBatchUserService"
    },
    {
      "name": "UsageService"
    },
    {
      "name": "UsageRecordService"
    },
    {
      "name": "UserCredentialsService"
    }
  ]
}