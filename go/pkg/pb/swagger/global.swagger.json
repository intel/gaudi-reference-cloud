{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "ResourceDefinitionAction": {
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserDetailedCloudAccountRoleDetailed": {
      "properties": {
        "alias": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountRoleId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "effect": {
          "type": "string"
        },
        "permissions": {
          "items": {
            "$ref": "#/definitions/protoCloudAccountRolePermission"
          },
          "type": "array"
        },
        "updatedAt": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAccount": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAccountPerson": {
      "properties": {
        "personId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAccountType": {
      "default": "ACCOUNT_TYPE_UNSPECIFIED",
      "enum": [
        "ACCOUNT_TYPE_UNSPECIFIED",
        "ACCOUNT_TYPE_STANDARD",
        "ACCOUNT_TYPE_PREMIUM",
        "ACCOUNT_TYPE_ENTERPRISE_PENDING",
        "ACCOUNT_TYPE_ENTERPRISE",
        "ACCOUNT_TYPE_INTEL",
        "ACCOUNT_TYPE_MEMBER"
      ],
      "type": "string"
    },
    "protoActionsRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoActionsResponse": {
      "properties": {
        "actions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoAddRegionRequest": {
      "properties": {
        "apiDns": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAlert": {
      "properties": {
        "alertType": {
          "type": "string"
        },
        "clientRecordId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "creation": {
          "format": "date-time",
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "serviceName": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "receive a alert upon subscription",
      "type": "object"
    },
    "protoAuthorizationRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "verb": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAuthorizationRequestInternal": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "payload": {
          "type": "object"
        },
        "user": {
          "$ref": "#/definitions/protoUserIdentification"
        },
        "verb": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoAuthorizationResponse": {
      "properties": {
        "allowed": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoBillingAccount": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingAccountDowngrade": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "downgradeOption": {
          "$ref": "#/definitions/protoDowngradeOption"
        },
        "force": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoBillingCoupon": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "code": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "disabled": {
          "format": "date-time",
          "type": "string"
        },
        "expires": {
          "format": "date-time",
          "type": "string"
        },
        "isStandard": {
          "type": "boolean"
        },
        "numRedeemed": {
          "format": "int64",
          "type": "integer"
        },
        "numUses": {
          "format": "int64",
          "type": "integer"
        },
        "redemptions": {
          "items": {
            "$ref": "#/definitions/protoBillingCouponRedemption"
          },
          "type": "array"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponCreate": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "creator": {
          "type": "string"
        },
        "expires": {
          "format": "date-time",
          "type": "string"
        },
        "isStandard": {
          "type": "boolean"
        },
        "numUses": {
          "format": "int64",
          "type": "integer"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponDisable": {
      "properties": {
        "code": {
          "type": "string"
        },
        "disabled": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponRedeem": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponRedemption": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "installed": {
          "type": "boolean"
        },
        "redeemed": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingCouponResponse": {
      "properties": {
        "coupons": {
          "items": {
            "$ref": "#/definitions/protoBillingCoupon"
          },
          "type": "array"
        },
        "redemptions": {
          "items": {
            "$ref": "#/definitions/protoBillingCouponRedemption"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBillingCredit": {
      "properties": {
        "amountUsed": {
          "format": "double",
          "type": "number"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "couponCode": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "originalAmount": {
          "format": "double",
          "type": "number"
        },
        "reason": {
          "$ref": "#/definitions/protoBillingCreditReason"
        },
        "remainingAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoBillingCreditReason": {
      "default": "CREDIT_UNSPECIFIED",
      "enum": [
        "CREDIT_UNSPECIFIED",
        "CREDIT_INITIAL",
        "CREDIT_PURCHASED",
        "CREDIT_COUPON"
      ],
      "type": "string"
    },
    "protoBillingCreditResponse": {
      "properties": {
        "credits": {
          "items": {
            "$ref": "#/definitions/protoBillingCredit"
          },
          "type": "array"
        },
        "expirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "totalRemainingAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUnAppliedAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUsedAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoBillingInvoiceResponse": {
      "properties": {
        "invoices": {
          "items": {
            "$ref": "#/definitions/protoInvoice"
          },
          "type": "array"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingMigratedCredit": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingOption": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "creditCard": {
          "$ref": "#/definitions/protoCreditCard"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "format": "uint64",
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleInitial": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "other": {
          "$ref": "#/definitions/protoPaymentMethodOther"
        },
        "paymentType": {
          "$ref": "#/definitions/protoPaymentType"
        }
      },
      "type": "object"
    },
    "protoBillingPaidInstanceResponse": {
      "properties": {
        "instanceTypes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBillingRate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "rate": {
          "$ref": "#/definitions/protoRate"
        }
      },
      "type": "object"
    },
    "protoBillingUnappliedCredit": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "remainingAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoBillingUnappliedCreditBalance": {
      "properties": {
        "unappliedAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoBillingUsage": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "billingUsageMetrics": {
          "$ref": "#/definitions/protoBillingUsageMetrics"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "minsUsed": {
          "format": "double",
          "type": "number"
        },
        "productFamily": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        },
        "rate": {
          "type": "string"
        },
        "regionName": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingUsageMetrics": {
      "properties": {
        "usageQuantity": {
          "format": "double",
          "type": "number"
        },
        "usageQuantityUnitName": {
          "type": "string"
        },
        "usageUnitName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoBillingUsageResponse": {
      "properties": {
        "downloadUrl": {
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUsage": {
          "format": "double",
          "type": "number"
        },
        "usages": {
          "items": {
            "$ref": "#/definitions/protoBillingUsage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBulkUploadResourceUsages": {
      "properties": {
        "resourceUsages": {
          "items": {
            "$ref": "#/definitions/protoResourceUsageCreate"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoBulkUploadResourceUsagesFailed": {
      "properties": {
        "resourceUsages": {
          "items": {
            "$ref": "#/definitions/protoResourceUsageCreateFailed"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoChangeRequestStatus": {
      "default": "pending",
      "enum": [
        "pending",
        "approved",
        "denied"
      ],
      "type": "string"
    },
    "protoChangeRequestType": {
      "default": "create",
      "enum": [
        "create",
        "update",
        "enable"
      ],
      "type": "string"
    },
    "protoClientCredentials": {
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccount": {
      "properties": {
        "accessLimitedTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "adminName": {
          "type": "string"
        },
        "billingAccountCreated": {
          "type": "boolean"
        },
        "countryCode": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "creditsDepleted": {
          "format": "date-time",
          "type": "string"
        },
        "delinquent": {
          "type": "boolean"
        },
        "enrolled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "lowCredits": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "oid": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "paidServicesAllowed": {
          "type": "boolean"
        },
        "parentId": {
          "type": "string"
        },
        "personId": {
          "type": "string"
        },
        "restricted": {
          "type": "boolean"
        },
        "terminateMessageQueued": {
          "type": "boolean"
        },
        "terminatePaidServices": {
          "type": "boolean"
        },
        "tid": {
          "type": "string"
        },
        "tradeRestricted": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/protoAccountType"
        },
        "upgradedToEnterprise": {
          "$ref": "#/definitions/protoUpgradeStatus"
        },
        "upgradedToPremium": {
          "$ref": "#/definitions/protoUpgradeStatus"
        }
      },
      "type": "object"
    },
    "protoCloudAccountCreate": {
      "properties": {
        "accessLimitedTimestamp": {
          "format": "date-time",
          "type": "string"
        },
        "adminName": {
          "type": "string"
        },
        "billingAccountCreated": {
          "type": "boolean"
        },
        "countryCode": {
          "type": "string"
        },
        "creditsDepleted": {
          "format": "date-time",
          "type": "string"
        },
        "delinquent": {
          "type": "boolean"
        },
        "enrolled": {
          "type": "boolean"
        },
        "lowCredits": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "oid": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "paidServicesAllowed": {
          "type": "boolean"
        },
        "parentId": {
          "type": "string"
        },
        "personId": {
          "type": "string"
        },
        "restricted": {
          "type": "boolean"
        },
        "terminateMessageQueued": {
          "type": "boolean"
        },
        "terminatePaidServices": {
          "type": "boolean"
        },
        "tid": {
          "type": "string"
        },
        "tradeRestricted": {
          "type": "boolean"
        },
        "type": {
          "$ref": "#/definitions/protoAccountType"
        },
        "upgradedToEnterprise": {
          "$ref": "#/definitions/protoUpgradeStatus"
        },
        "upgradedToPremium": {
          "$ref": "#/definitions/protoUpgradeStatus"
        }
      },
      "type": "object"
    },
    "protoCloudAccountEnrollAction": {
      "default": "ENROLL_ACTION_NONE",
      "enum": [
        "ENROLL_ACTION_NONE",
        "ENROLL_ACTION_REGISTER",
        "ENROLL_ACTION_COUPON_OR_CREDIT_CARD",
        "ENROLL_ACTION_RETRY",
        "ENROLL_ACTION_TC"
      ],
      "title": "- ENROLL_ACTION_NONE: No action needed. Enrollment is done.\n - ENROLL_ACTION_REGISTER: Role is missing. Redirect user's browser to registration flow.\n - ENROLL_ACTION_COUPON_OR_CREDIT_CARD: Premium account with no payment method. Prompt for payment or\ncoupon.\n - ENROLL_ACTION_RETRY: An error occurred. Call Enroll again.\n - ENROLL_ACTION_TC: Terms \u0026 Condition accept status",
      "type": "string"
    },
    "protoCloudAccountEnrollRequest": {
      "properties": {
        "premium": {
          "title": "premium query parameter from post-registration redirect",
          "type": "boolean"
        },
        "termsStatus": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoCloudAccountEnrollResponse": {
      "properties": {
        "action": {
          "$ref": "#/definitions/protoCloudAccountEnrollAction"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountType": {
          "$ref": "#/definitions/protoAccountType"
        },
        "enrolled": {
          "type": "boolean"
        },
        "haveBillingAccount": {
          "type": "boolean"
        },
        "haveCloudAccount": {
          "type": "boolean"
        },
        "isMember": {
          "type": "boolean"
        },
        "registered": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoCloudAccountId": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccountMembers": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCloudAccountRole": {
      "properties": {
        "alias": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/protoCloudAccountRoleEffect"
        },
        "id": {
          "type": "string"
        },
        "permissions": {
          "items": {
            "$ref": "#/definitions/protoCloudAccountRolePermission"
          },
          "type": "array"
        },
        "updatedAt": {
          "type": "string"
        },
        "users": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCloudAccountRoleEffect": {
      "default": "allow",
      "enum": [
        "allow",
        "deny"
      ],
      "type": "string"
    },
    "protoCloudAccountRolePermission": {
      "properties": {
        "actions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createdAt": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccountRoleUpdateEffect": {
      "default": "allow",
      "enum": [
        "allow",
        "deny"
      ],
      "type": "string"
    },
    "protoCloudAccountRoleUpdatePermission": {
      "properties": {
        "actions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccountRoles": {
      "properties": {
        "cloudAccountRoles": {
          "items": {
            "$ref": "#/definitions/protoCloudAccountRole"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCloudAccountUpgradeAction": {
      "default": "UPGRADE_ACTION_RETRY",
      "description": " - UPGRADE_ACTION_RETRY: An error occurred. Call Upgrade again.\n - UPGRADE_ACTION_UNSUPPORTED: An error occurred. Upgrade not supported.\n - UPGRADE_ACTION_NONE: No action needed. Upgrade is done.",
      "enum": [
        "UPGRADE_ACTION_RETRY",
        "UPGRADE_ACTION_UNSUPPORTED",
        "UPGRADE_ACTION_NONE"
      ],
      "type": "string"
    },
    "protoCloudAccountUpgradeRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountUpgradeToType": {
          "$ref": "#/definitions/protoAccountType"
        },
        "code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudAccountUpgradeResponse": {
      "properties": {
        "action": {
          "$ref": "#/definitions/protoCloudAccountUpgradeAction"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountType": {
          "$ref": "#/definitions/protoAccountType"
        }
      },
      "type": "object"
    },
    "protoCloudAccountUpgradeWithCreditCardRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountUpgradeToType": {
          "$ref": "#/definitions/protoAccountType"
        }
      },
      "type": "object"
    },
    "protoCloudCreditReason": {
      "default": "CREDITS_UNSPECIFIED",
      "enum": [
        "CREDITS_UNSPECIFIED",
        "CREDITS_INITIAL",
        "CREDITS_PURCHASED",
        "CREDITS_COUPON"
      ],
      "type": "string"
    },
    "protoCloudCreditsCouponRedeem": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCloudCreditsState": {
      "default": "CLOUD_CREDITS_STATE_UNSPECIFIED",
      "enum": [
        "CLOUD_CREDITS_STATE_UNSPECIFIED",
        "CLOUD_CREDITS_STATE_AVAILABLE",
        "CLOUD_CREDITS_STATE_THRESHOLD_REACHED",
        "CLOUD_CREDITS_STATE_USED",
        "CLOUD_CREDITS_STATE_EXPIRED",
        "CLOUD_CREDITS_STATE_OUTDATED"
      ],
      "type": "string"
    },
    "protoConsoleInvoiceUnbilledByProductType": {
      "properties": {
        "amount": {
          "format": "int64",
          "type": "integer"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "minsUsed": {
          "format": "int64",
          "type": "integer"
        },
        "productType": {
          "title": "Example: m7.metal",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoConsoleInvoiceUnbilledByService": {
      "properties": {
        "invoiceByProductType": {
          "items": {
            "$ref": "#/definitions/protoConsoleInvoiceUnbilledByProductType"
          },
          "type": "array"
        },
        "serviceName": {
          "title": "Example: BMaaS",
          "type": "string"
        },
        "unbilledActiveInstances": {
          "type": "string"
        },
        "unbilledActiveMins": {
          "type": "string"
        },
        "unbilledBalance": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoConsoleInvoiceUnbilledResponse": {
      "properties": {
        "billingPeriod": {
          "format": "date-time",
          "title": "Example: May 2023",
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "estimatedTotal": {
          "type": "string"
        },
        "invoiceByService": {
          "items": {
            "$ref": "#/definitions/protoConsoleInvoiceUnbilledByService"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCoupon": {
      "properties": {
        "amount": {
          "format": "int64",
          "type": "integer"
        },
        "code": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "disabled": {
          "format": "date-time",
          "type": "string"
        },
        "expires": {
          "format": "date-time",
          "type": "string"
        },
        "isStandard": {
          "type": "boolean"
        },
        "numRedeemed": {
          "format": "int64",
          "type": "integer"
        },
        "numUses": {
          "format": "int64",
          "type": "integer"
        },
        "redemptions": {
          "items": {
            "$ref": "#/definitions/protoCouponRedemption"
          },
          "type": "array"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCouponCreate": {
      "properties": {
        "amount": {
          "format": "int64",
          "type": "integer"
        },
        "creator": {
          "type": "string"
        },
        "expires": {
          "format": "date-time",
          "type": "string"
        },
        "isStandard": {
          "type": "boolean"
        },
        "numUses": {
          "format": "int64",
          "type": "integer"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCouponDisable": {
      "properties": {
        "code": {
          "type": "string"
        },
        "disabled": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCouponRedemption": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "creator": {
          "type": "string"
        },
        "installed": {
          "type": "boolean"
        },
        "redeemed": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCouponResponse": {
      "properties": {
        "coupons": {
          "items": {
            "$ref": "#/definitions/protoCoupon"
          },
          "type": "array"
        },
        "redemptions": {
          "items": {
            "$ref": "#/definitions/protoCouponRedemption"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCreateEvent": {
      "properties": {
        "clientRecordId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "eventState": {
          "type": "string"
        },
        "eventSubType": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "region": {
          "type": "string"
        },
        "serviceName": {
          "$ref": "#/definitions/protoServiceName"
        },
        "severity": {
          "$ref": "#/definitions/protoEventSeverity"
        },
        "status": {
          "$ref": "#/definitions/protoEventStatus"
        },
        "type": {
          "$ref": "#/definitions/protoEventType"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "create a event to be sent out",
      "type": "object"
    },
    "protoCreateInvalidMeteringRecords": {
      "properties": {
        "createInvalidMeteringRecords": {
          "items": {
            "$ref": "#/definitions/protoInvalidMeteringRecordCreate"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoCredit": {
      "properties": {
        "amountUsed": {
          "format": "double",
          "type": "number"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "couponCode": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "originalAmount": {
          "format": "double",
          "type": "number"
        },
        "reason": {
          "$ref": "#/definitions/protoCloudCreditReason"
        },
        "remainingAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoCreditCard": {
      "properties": {
        "expiration": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoCreditResponse": {
      "properties": {
        "credits": {
          "items": {
            "$ref": "#/definitions/protoCredit"
          },
          "type": "array"
        },
        "expirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "totalRemainingAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUnAppliedAmount": {
          "format": "double",
          "type": "number"
        },
        "totalUsedAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoCreditsState": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "eventAt": {
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/protoCloudCreditsState"
        }
      },
      "type": "object"
    },
    "protoCreditsStateResponse": {
      "properties": {
        "eventAt": {
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/protoCloudCreditsState"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDeactivateAccounts": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "creditsDepleted": {
          "format": "date-time",
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDeactivateInstances": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "quotas": {
          "items": {
            "$ref": "#/definitions/protoInstanceQuotas"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoDeactivateInstancesResponse": {
      "properties": {
        "deactivationList": {
          "items": {
            "$ref": "#/definitions/protoDeactivateInstances"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoDefaultCloudAccountRoleAssignedResponse": {
      "properties": {
        "assigned": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDefaultFamily": {
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultProduct": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDefaultProductMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoProductSpec"
        }
      },
      "type": "object"
    },
    "protoDefaultProductDeleteRequest": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultProductMetadata": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultProductSearchRequest": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultRate": {
      "properties": {
        "accountType": {
          "type": "string"
        },
        "rate": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "usageExpr": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultVendor": {
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/protoDefaultVendorMetadata"
        },
        "spec": {
          "$ref": "#/definitions/protoVendorSpec"
        }
      },
      "type": "object"
    },
    "protoDefaultVendorMetadata": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultVendorSearchRequest": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDefaultVendortDeleteRequest": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "TODO fix typo",
      "type": "object"
    },
    "protoDeleteEventRequest": {
      "properties": {
        "messageId": {
          "type": "string"
        },
        "receiptHandle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDeleteEventRequestList": {
      "properties": {
        "deleteEventRequests": {
          "items": {
            "$ref": "#/definitions/protoDeleteEventRequest"
          },
          "type": "array"
        },
        "queueName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoDisableMonitorResponse": {
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoDowngradeOption": {
      "default": "DOWNGRADE_OPTION_UNSPECIFIED",
      "enum": [
        "DOWNGRADE_OPTION_UNSPECIFIED",
        "DOWNGRADE_PREMIUM_TO_STANDARD_WITH_PAYMENT_OPTION"
      ],
      "type": "string"
    },
    "protoEmailRequest": {
      "properties": {
        "messageType": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "templateData": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "templateName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoEmailResponse": {
      "properties": {
        "messageId": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoEnableMonitorResponse": {
      "properties": {
        "config": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoEventSeverity": {
      "default": "EVENT_SEVERITY_UNSPECIFIED",
      "enum": [
        "EVENT_SEVERITY_UNSPECIFIED",
        "LOW",
        "MEDIUM",
        "HIGH"
      ],
      "title": "serverity decides on whether it is a notification or a alert or email\nlow will always be notifications\nmedium and high will be alerts",
      "type": "string"
    },
    "protoEventStatus": {
      "default": "EVENT_STATUS_UNSPECIFIED",
      "enum": [
        "EVENT_STATUS_UNSPECIFIED",
        "ACTIVE",
        "INACTIVE"
      ],
      "title": "status field will be expanded as functionality increases",
      "type": "string"
    },
    "protoEventType": {
      "default": "EVENT_TYPE_UNSPECIFIED",
      "enum": [
        "EVENT_TYPE_UNSPECIFIED",
        "NOTIFICATION",
        "ALERT",
        "EMAIL",
        "RESOURCE",
        "OPERATION",
        "AUDIT",
        "ERROR"
      ],
      "type": "string"
    },
    "protoEvents": {
      "properties": {
        "alerts": {
          "items": {
            "$ref": "#/definitions/protoAlert"
          },
          "type": "array"
        },
        "notifications": {
          "items": {
            "$ref": "#/definitions/protoNotification"
          },
          "type": "array"
        },
        "numberOfAlerts": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfNotifications": {
          "format": "int32",
          "type": "integer"
        }
      },
      "title": "to receive events subscribed to",
      "type": "object"
    },
    "protoEventsFilter": {
      "properties": {
        "clientRecordId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFamily": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFamilyRequest": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoFamilyResponse": {
      "properties": {
        "families": {
          "items": {
            "$ref": "#/definitions/protoFamily"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetAccessResponse": {
      "properties": {
        "acl": {
          "items": {
            "$ref": "#/definitions/protoProductAccessResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetAccessResponseV2": {
      "properties": {
        "acl": {
          "items": {
            "$ref": "#/definitions/protoProductAccessResponseV2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetIntervalsResponse": {
      "properties": {
        "interval": {
          "items": {
            "$ref": "#/definitions/protoIntervals"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetMetricTypesResponse": {
      "properties": {
        "metric": {
          "items": {
            "$ref": "#/definitions/protoMetrics"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetRegionAccessResponse": {
      "properties": {
        "acl": {
          "items": {
            "$ref": "#/definitions/protoRegionAccessResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetResourceCategoriesResponse": {
      "properties": {
        "resourcetypes": {
          "items": {
            "$ref": "#/definitions/protoResourcetypes"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoGetUserCredential": {
      "properties": {
        "appClientName": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "revoked": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoGetUserCredentialResponse": {
      "properties": {
        "appClients": {
          "items": {
            "$ref": "#/definitions/protoGetUserCredential"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoInstanceQuotas": {
      "properties": {
        "instanceType": {
          "type": "string"
        },
        "limit": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoIntervals": {
      "properties": {
        "interval": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidMeteringRecord": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "meteringRecordInvalidityReason": {
          "$ref": "#/definitions/protoMeteringRecordInvalidityReason"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidMeteringRecordCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "meteringRecordInvalidityReason": {
          "$ref": "#/definitions/protoMeteringRecordInvalidityReason"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidMeteringRecordFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidProductUsageRecord": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productUsageRecordInvalidityReason": {
          "$ref": "#/definitions/protoProductUsageRecordInvalidityReason"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvalidProductUsageRecordsFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "recordId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvitationState": {
      "default": "INVITE_STATE_UNSPECIFIED",
      "enum": [
        "INVITE_STATE_UNSPECIFIED",
        "INVITE_STATE_PENDING_ACCEPT",
        "INVITE_STATE_ACCEPTED",
        "INVITE_STATE_REVOKED",
        "INVITE_STATE_EXPIRED",
        "INVITE_STATE_REJECTED",
        "INVITE_STATE_REMOVED"
      ],
      "type": "string"
    },
    "protoInvite": {
      "properties": {
        "expiry": {
          "format": "date-time",
          "type": "string"
        },
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "memberEmail": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInviteList": {
      "properties": {
        "canAddMoreMembers": {
          "type": "boolean"
        },
        "invites": {
          "items": {
            "$ref": "#/definitions/protoInvite"
          },
          "type": "array"
        },
        "memberCount": {
          "format": "int32",
          "type": "integer"
        },
        "membersLimit": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoInviteRequest": {
      "properties": {
        "cloudAccountRoleIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "expiry": {
          "format": "date-time",
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        },
        "note": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInviteRequestList": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "invites": {
          "items": {
            "$ref": "#/definitions/protoInviteRequest"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoInviteResendRequest": {
      "properties": {
        "adminAccountId": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInviteResendResponse": {
      "properties": {
        "blocked": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "retryLeft": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoInviteRevokeRequest": {
      "properties": {
        "adminAccountId": {
          "type": "string"
        },
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInviteUpdateRequest": {
      "properties": {
        "adminAccountId": {
          "type": "string"
        },
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoInvoice": {
      "properties": {
        "billingPeriod": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "downloadLink": {
          "type": "string"
        },
        "due": {
          "format": "double",
          "type": "number"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "uint64",
          "type": "string"
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "notifyDate": {
          "format": "date-time",
          "type": "string"
        },
        "paid": {
          "format": "double",
          "type": "number"
        },
        "paidDate": {
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "statementLink": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "total": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoInvoiceDetail": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "rate": {
          "$ref": "#/definitions/protoRate"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "usage": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoKeyValue": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoListUsersByCloudAccountResponse": {
      "properties": {
        "users": {
          "items": {
            "$ref": "#/definitions/protoUser"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoLookupRequest": {
      "properties": {
        "action": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "resourceIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoLookupRequestInternal": {
      "properties": {
        "action": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "resourceIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceType": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/protoUserIdentification"
        }
      },
      "type": "object"
    },
    "protoLookupResponse": {
      "properties": {
        "resourceIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMemberAccount": {
      "properties": {
        "memberAccount": {
          "items": {
            "$ref": "#/definitions/protoMemberCloudAccount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoMemberCloudAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/protoAccountType"
        }
      },
      "type": "object"
    },
    "protoMemberPersonId": {
      "properties": {
        "memberEmail": {
          "type": "string"
        },
        "personId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMessageResponse": {
      "properties": {
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "body": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "receiptHandle": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMeteringAvailableFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "meteringDuration": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMeteringAvailableResponse": {
      "properties": {
        "meteringDataAvailable": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoMeteringFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMeteringRecord": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMeteringRecordInvalidityReason": {
      "default": "DEFAULT_INVALIDITY_REASON",
      "enum": [
        "DEFAULT_INVALIDITY_REASON",
        "MISSING_CLOUD_ACCOUNT_ID",
        "MISSING_TRANSACTION_ID",
        "MISSING_RESOURCE_NAME",
        "NO_MATCHING_PRODUCT",
        "DUPLICATE_TRANSACTION_ID",
        "INVALID_METERING_QTY",
        "INVALID_METERING_ENTRY",
        "FAILED_TO_CALCULATE_QTY",
        "FAILED_TO_GET_PRODUCT_RATE"
      ],
      "type": "string"
    },
    "protoMetrics": {
      "properties": {
        "metric": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoMigratedCredits": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoNotification": {
      "properties": {
        "clientRecordId": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "creation": {
          "format": "date-time",
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "notificationType": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "serviceName": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "receive a notification upon subscription",
      "type": "object"
    },
    "protoOtpRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoOtpState": {
      "default": "OTP_STATE_PENDING",
      "enum": [
        "OTP_STATE_PENDING",
        "OTP_STATE_ACCEPTED",
        "OTP_STATE_EXPIRED",
        "OTP_STATE_INVALID"
      ],
      "type": "string"
    },
    "protoPaymentMethodOther": {
      "type": "object"
    },
    "protoPaymentType": {
      "default": "PAYMENT_UNSPECIFIED",
      "enum": [
        "PAYMENT_UNSPECIFIED",
        "PAYMENT_CREDIT_CARD",
        "PAYMENT_OTHER"
      ],
      "type": "string"
    },
    "protoPolicyRequest": {
      "properties": {
        "action": {
          "type": "string"
        },
        "expression": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoPrePaymentResponse": {
      "properties": {
        "directPostUrl": {
          "type": "string"
        },
        "functionMode": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProduct": {
      "properties": {
        "access": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "eccn": {
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "matchExpr": {
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "pcq": {
          "type": "string"
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/protoRate"
          },
          "type": "array"
        },
        "status": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductAccessRequest": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductAccessRequestV2": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductAccessResponse": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductAccessResponseV2": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductChangeRequestResponse": {
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "proposedData": {
          "$ref": "#/definitions/protoProposedData"
        },
        "requestStatus": {
          "$ref": "#/definitions/protoChangeRequestStatus"
        },
        "requestType": {
          "$ref": "#/definitions/protoChangeRequestType"
        },
        "requester": {
          "type": "string"
        },
        "reviewer": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductChangeRequestResponseList": {
      "properties": {
        "productChangeRequests": {
          "items": {
            "$ref": "#/definitions/protoProductChangeRequestResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoProductData": {
      "properties": {
        "accountTypesBlocked": {
          "type": "string"
        },
        "accountWhitelist": {
          "type": "boolean"
        },
        "billingEnable": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "displayCategory": {
          "type": "string"
        },
        "displayDesc": {
          "type": "string"
        },
        "displayHighlight": {
          "type": "string"
        },
        "displayInfo": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "eccn": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "familyId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "instanceCategory": {
          "type": "string"
        },
        "instanceMode": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "matchExpr": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pcq": {
          "type": "string"
        },
        "releaseStatus": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "usecase": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductFamily": {
      "properties": {
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductFilter": {
      "properties": {
        "accountType": {
          "$ref": "#/definitions/protoAccountType"
        },
        "eccn": {
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "matchExpr": {
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "pcq": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductInterest": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "productId": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductInterestRequest": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "productId": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductInterestResponse": {
      "properties": {
        "productInterests": {
          "items": {
            "$ref": "#/definitions/protoProductInterest"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoProductResponse": {
      "properties": {
        "products": {
          "items": {
            "$ref": "#/definitions/protoProduct"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoProductSpec": {
      "properties": {
        "access": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "eccn": {
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "matchExpr": {
          "type": "string"
        },
        "metadata": {
          "items": {
            "$ref": "#/definitions/protoKeyValue"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "pcq": {
          "type": "string"
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/protoDefaultRate"
          },
          "type": "array"
        },
        "status": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductStatus": {
      "default": "PRODUCT_STATUS_UNSPECIFIED",
      "enum": [
        "PRODUCT_STATUS_UNSPECIFIED",
        "PRODUCT_STATUS_READY",
        "PRODUCT_STATUS_PROVISIONING",
        "PRODUCT_STATUS_ERROR"
      ],
      "type": "string"
    },
    "protoProductUsage": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsageRecord": {
      "properties": {
        "cloudAccountId": {
          "description": "cloud account id the usage is associated with.",
          "type": "string"
        },
        "endTime": {
          "description": "start time and end time if applicable.",
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "additional properties.",
          "type": "object"
        },
        "quantity": {
          "description": "usage quantity.",
          "format": "double",
          "type": "number"
        },
        "region": {
          "description": "region for which usage is being posted.",
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "description": "start time and end time if applicable.",
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "title": "time when the usage was measured,",
          "type": "string"
        },
        "transactionId": {
          "description": "client defined identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsageRecordCreate": {
      "properties": {
        "cloudAccountId": {
          "description": "cloud account id the usage is associated with.",
          "type": "string"
        },
        "endTime": {
          "description": "start time and end time if applicable.",
          "format": "date-time",
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "additional properties.",
          "type": "object"
        },
        "quantity": {
          "description": "usage quantity.",
          "format": "double",
          "type": "number"
        },
        "region": {
          "description": "region for which usage is being posted.",
          "type": "string"
        },
        "startTime": {
          "description": "start time and end time if applicable.",
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "title": "time when the usage was measured,",
          "type": "string"
        },
        "transactionId": {
          "description": "client defined identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsageRecordInvalidityReason": {
      "default": "DEFAULT_PRODUCT_USAGE_RECORD_INVALIDITY_REASON",
      "enum": [
        "DEFAULT_PRODUCT_USAGE_RECORD_INVALIDITY_REASON",
        "PRODUCT_USAGE_RECORD_MISSING_CLOUD_ACCOUNT_ID",
        "PRODUCT_USAGE_RECORD_MISSING_TRANSACTION_ID",
        "PRODUCT_USAGE_RECORD_NO_MATCHING_PRODUCT",
        "PRODUCT_USAGE_RECORD_DUPLICATE_TRANSACTION_ID",
        "PRODUCT_USAGE_RECORD_FAILED_TO_GET_PRODUCT_RATE"
      ],
      "type": "string"
    },
    "protoProductUsageRecordsFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsages": {
      "properties": {
        "productUsages": {
          "items": {
            "$ref": "#/definitions/protoProductUsage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoProductUsagesFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUsagesReportFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoProductUserFilter": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "productFilter": {
          "$ref": "#/definitions/protoProductFilter"
        }
      },
      "type": "object"
    },
    "protoProposedData": {
      "properties": {
        "product": {
          "$ref": "#/definitions/protoProductData"
        },
        "rates": {
          "items": {
            "$ref": "#/definitions/protoRateData"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoPublishEventRequest": {
      "properties": {
        "createEvent": {
          "$ref": "#/definitions/protoCreateEvent"
        },
        "subject": {
          "type": "string"
        },
        "topicName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoPublishEventResponse": {
      "properties": {
        "messageId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoQueryResourcesMetricsResponse": {
      "properties": {
        "response": {
          "items": {
            "$ref": "#/definitions/protoQueryResourcesMetricsResponseItem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoQueryResourcesMetricsResponseItem": {
      "properties": {
        "item": {
          "type": "string"
        },
        "queryvalue": {
          "items": {
            "$ref": "#/definitions/protoQueryvalue"
          },
          "type": "array"
        },
        "unit": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoQueryvalue": {
      "properties": {
        "epochtime": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRate": {
      "properties": {
        "accountType": {
          "$ref": "#/definitions/protoAccountType"
        },
        "rate": {
          "type": "string"
        },
        "unit": {
          "$ref": "#/definitions/protoRateUnit"
        },
        "usageExpr": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRateData": {
      "properties": {
        "accountType": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "rate": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "usageExpr": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRateUnit": {
      "default": "RATE_UNIT_UNSPECIFIED",
      "description": "Expand as more product types such as storage and networking are added.",
      "enum": [
        "RATE_UNIT_UNSPECIFIED",
        "RATE_UNIT_DOLLARS_PER_MINUTE",
        "RATE_UNIT_DOLLARS_PER_TB_PER_HOUR",
        "RATE_UNIT_DOLLARS_PER_INFERENCE",
        "RATE_UNIT_DOLLARS_PER_MILLION_TOKENS"
      ],
      "type": "string"
    },
    "protoReceiveEventRequest": {
      "properties": {
        "eventName": {
          "type": "string"
        },
        "maxNumberOfMessages": {
          "format": "int64",
          "type": "string"
        },
        "queueName": {
          "type": "string"
        },
        "timeStamp": {
          "type": "string"
        },
        "waitTimeSeconds": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoReceiveEventResponse": {
      "properties": {
        "messageResponse": {
          "items": {
            "$ref": "#/definitions/protoMessageResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoRegion": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "apiDns": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "vnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionAccessRequest": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "regionName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionAccessResponse": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "cloudaccountId": {
          "type": "string"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "regionName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionFilter": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "apiDns": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionResponse": {
      "properties": {
        "regions": {
          "items": {
            "$ref": "#/definitions/protoRegion"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoRegionUser": {
      "properties": {
        "apiDns": {
          "type": "string"
        },
        "availabilityZone": {
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "format": "int32",
          "type": "integer"
        },
        "subnet": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vnet": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRegionUserFilter": {
      "properties": {
        "cloudaccountId": {
          "type": "string"
        },
        "regionFilter": {
          "$ref": "#/definitions/protoRegionFilter"
        }
      },
      "type": "object"
    },
    "protoRegionUserResponse": {
      "properties": {
        "regions": {
          "items": {
            "$ref": "#/definitions/protoRegionUser"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoRelatedAccount": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoRelatedAccounts": {
      "properties": {
        "relatedAccounts": {
          "items": {
            "$ref": "#/definitions/protoRelatedAccount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoReportProductUsage": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productUsageId": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "reported": {
          "type": "boolean"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "unReportedQuantity": {
          "format": "double",
          "type": "number"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoReportProductUsageId": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoReportProductUsageUpdate": {
      "properties": {
        "productUsageReportId": {
          "type": "string"
        },
        "unReportedQuantity": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoResourceDefinition": {
      "properties": {
        "actions": {
          "items": {
            "$ref": "#/definitions/ResourceDefinitionAction"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceDefinitions": {
      "properties": {
        "resources": {
          "items": {
            "$ref": "#/definitions/protoResourceDefinition"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoResourceMeteringRecords": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "meteringRecords": {
          "items": {
            "$ref": "#/definitions/protoMeteringRecord"
          },
          "type": "array"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceMeteringRecordsList": {
      "properties": {
        "resourceMeteringRecordsList": {
          "items": {
            "$ref": "#/definitions/protoResourceMeteringRecords"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoResourceUsage": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "unReportedQuantity": {
          "format": "double",
          "type": "number"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceUsageCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceUsageCreateFailed": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceUsageId": {
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourceUsageUpdate": {
      "properties": {
        "resourceUsageId": {
          "type": "string"
        },
        "unReportedQuantity": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoResourceUsages": {
      "properties": {
        "resourceUsages": {
          "items": {
            "$ref": "#/definitions/protoResourceUsage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoResourceUsagesFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoResourcetypes": {
      "properties": {
        "resourceId": {
          "format": "int32",
          "type": "integer"
        },
        "resourcetypes": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoReviewProductChangeRequestFilter": {
      "properties": {
        "approve": {
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "protoRoleRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "systemRole": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSchedulerAction": {
      "properties": {
        "action": {
          "$ref": "#/definitions/protoSchedulerActionType"
        }
      },
      "type": "object"
    },
    "protoSchedulerActionType": {
      "default": "START_CREDIT_INSTALL_SCHEDULER",
      "enum": [
        "START_CREDIT_INSTALL_SCHEDULER",
        "START_POST_USAGE_SCHEDULER",
        "START_ENT_LINK_SCHEDULER",
        "START_CREDIT_USAGE_SCHEDULER",
        "START_CREDIT_EXPIRY_SCHEDULER",
        "START_SERVICE_TERMINATION_SCHEDULER"
      ],
      "type": "string"
    },
    "protoSendEmailRequest": {
      "properties": {
        "bccRecipients": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ccRecipients": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "messageType": {
          "type": "string"
        },
        "recipient": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sender": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "templateData": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "templateName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSendInviteCodeRequest": {
      "properties": {
        "adminAccountId": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoServiceName": {
      "default": "SERVICE_NAME_UNSPECIFIED",
      "enum": [
        "SERVICE_NAME_UNSPECIFIED",
        "BILLING",
        "CREDIT",
        "BILLING_DRIVER_ARIA",
        "BILLING_DRIVER_INTEL",
        "BILLING_DRIVER_STANDARD"
      ],
      "title": "this enum will go away when we have service registration",
      "type": "string"
    },
    "protoSetProductStatus": {
      "properties": {
        "error": {
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/protoProductStatus"
        },
        "vendorId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSetProductStatusRequest": {
      "properties": {
        "status": {
          "items": {
            "$ref": "#/definitions/protoSetProductStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoStatement": {
      "properties": {
        "mimeType": {
          "type": "string"
        },
        "statement": {
          "format": "byte",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSubscribeEventRequest": {
      "properties": {
        "protocol": {
          "type": "string"
        },
        "queueName": {
          "type": "string"
        },
        "topicName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSubscribeEventResponse": {
      "properties": {
        "subscriptionArn": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoSystemRoleExistResponse": {
      "properties": {
        "exist": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoUnappliedCreditBalance": {
      "properties": {
        "unappliedAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoUnappliedCredits": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "expiration": {
          "format": "date-time",
          "type": "string"
        },
        "remainingAmount": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "protoUpgradeStatus": {
      "default": "UPGRADE_COMPLETE",
      "enum": [
        "UPGRADE_COMPLETE",
        "UPGRADE_NOT_INITIATED",
        "UPGRADE_PENDING",
        "UPGRADE_PENDING_CC",
        "UPGRADE_PENDING_CC_VERIFIED"
      ],
      "type": "string"
    },
    "protoUsage": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUsageCreate": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "resourceId": {
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUsageFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "string"
        },
        "reported": {
          "type": "boolean"
        },
        "resourceId": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUsageUpdate": {
      "properties": {
        "id": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "reported": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoUsageV2": {
      "description": "Usage is taken by metering which is wrong.",
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        },
        "end": {
          "format": "date-time",
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "type": "number"
        },
        "region": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "start": {
          "format": "date-time",
          "type": "string"
        },
        "usageUnitType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUsages": {
      "properties": {
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "period": {
          "type": "string"
        },
        "totalAmount": {
          "format": "double",
          "type": "number"
        },
        "totalQuantity": {
          "format": "double",
          "type": "number"
        },
        "usages": {
          "items": {
            "$ref": "#/definitions/protoUsageV2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoUsagesFilter": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUser": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountRoles": {
          "items": {
            "$ref": "#/definitions/protoUserCloudAccountRole"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "systemRoles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoUserCloudAccountRole": {
      "properties": {
        "alias": {
          "type": "string"
        },
        "cloudAccountRoleId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoUserDetailed": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountRoles": {
          "items": {
            "$ref": "#/definitions/UserDetailedCloudAccountRoleDetailed"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "systemRoles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoUserIdentification": {
      "properties": {
        "email": {
          "type": "string"
        },
        "enterpriseId": {
          "type": "string"
        },
        "groups": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoValidateInviteCodeRequest": {
      "properties": {
        "adminCloudAccountId": {
          "type": "string"
        },
        "inviteCode": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoValidateInviteCodeResponse": {
      "properties": {
        "invitationState": {
          "$ref": "#/definitions/protoInvitationState"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protoVendor": {
      "properties": {
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "families": {
          "items": {
            "$ref": "#/definitions/protoProductFamily"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVendorRequest": {
      "properties": {
        "adminName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVendorResponse": {
      "properties": {
        "vendors": {
          "items": {
            "$ref": "#/definitions/protoVendor"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "protoVendorSpec": {
      "properties": {
        "description": {
          "type": "string"
        },
        "families": {
          "items": {
            "$ref": "#/definitions/protoDefaultFamily"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVerifyOtpRequest": {
      "properties": {
        "cloudAccountId": {
          "type": "string"
        },
        "memberEmail": {
          "type": "string"
        },
        "otpCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protoVerifyOtpResponse": {
      "properties": {
        "blocked": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "otpState": {
          "$ref": "#/definitions/protoOtpState"
        },
        "retryLeft": {
          "format": "int32",
          "type": "integer"
        },
        "validated": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "protobufAny": {
      "additionalProperties": {},
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "protobufNullValue": {
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value.",
      "enum": [
        "NULL_VALUE"
      ],
      "type": "string"
    },
    "rpcStatus": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "type": "array"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "info": {
    "title": "Intel Developer Cloud: Global API",
    "version": "version not set"
  },
  "paths": {
    "/proto.AuthzService/Check": {
      "post": {
        "operationId": "AuthzService_Check",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoAuthorizationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAuthorizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Verifies if the user, based on the provided token, and http request information, has the necessary authorization to perform the specified action.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.AuthzService/CheckInternal": {
      "post": {
        "operationId": "AuthzService_CheckInternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoAuthorizationRequestInternal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAuthorizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Internal verification call to determine if a specific user has the required authorization to execute the given action. This is intended for use by internal clients.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.AuthzService/Lookup": {
      "post": {
        "operationId": "AuthzService_Lookup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLookupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLookupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Check if the user has the necessary authorization to perform the specified action given multiple resource IDs.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.AuthzService/LookupInternal": {
      "post": {
        "operationId": "AuthzService_LookupInternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLookupRequestInternal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLookupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Internal verification call if a specific user has the necessary authorization to perform the specified action given multiple resource IDs. This is intended for use by internal clients.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.AuthzService/SystemRoleExists": {
      "post": {
        "operationId": "AuthzService_SystemRoleExists",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSystemRoleExistResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/proto.BillingCreditService/ReadInternal": {
      "post": {
        "operationId": "BillingCreditService_ReadInternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoBillingCredit"
                }
              },
              "title": "Stream result of protoBillingCredit",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/proto.BillingDeactivateInstancesService/Ping": {
      "post": {
        "operationId": "BillingDeactivateInstancesService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "BillingDeactivateInstancesService"
        ]
      }
    },
    "/proto.CloudCreditsCreditService/ReadInternal": {
      "post": {
        "operationId": "CloudCreditsCreditService_ReadInternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoCredit"
                }
              },
              "title": "Stream result of protoCredit",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/proto.MeteringService/Ping": {
      "post": {
        "operationId": "MeteringService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/proto.MeteringService/SearchResourceMeteringRecords": {
      "post": {
        "operationId": "MeteringService_SearchResourceMeteringRecords",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMeteringFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceMeteringRecordsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "this API is only for internal use, please DO NOT expose as a external API as it is not RESTful",
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/proto.NotificationGatewayService/Create": {
      "post": {
        "operationId": "NotificationGatewayService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "register as a event provider",
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/proto.NotificationGatewayService/sendEmailNotification": {
      "post": {
        "operationId": "NotificationGatewayService_sendEmailNotification",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Send email notifications",
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/proto.ProductCatalogService/Ping": {
      "post": {
        "operationId": "ProductCatalogService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/proto.ProductCatalogService/SetStatus": {
      "post": {
        "operationId": "ProductCatalogService_SetStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSetProductStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/proto.ProductCatalogServiceV2/Ping": {
      "post": {
        "operationId": "ProductCatalogServiceV2_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/proto.ProductCatalogServiceV2/SetStatus": {
      "post": {
        "operationId": "ProductCatalogServiceV2_SetStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSetProductStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/proto.ProductSyncService/Delete": {
      "post": {
        "operationId": "ProductSyncService_Delete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultProductDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductSyncService"
        ]
      }
    },
    "/proto.ProductSyncService/Put": {
      "post": {
        "operationId": "ProductSyncService_Put",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductSyncService"
        ]
      }
    },
    "/proto.ProductSyncService/SearchStream": {
      "post": {
        "operationId": "ProductSyncService_SearchStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultProductSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDefaultProduct"
                }
              },
              "title": "Stream result of protoDefaultProduct",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductSyncService"
        ]
      }
    },
    "/proto.UsageRecordService/Ping": {
      "post": {
        "operationId": "UsageRecordService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "UsageRecordService"
        ]
      }
    },
    "/proto.UsageService/MarkProductUsageAsReported": {
      "post": {
        "operationId": "UsageService_MarkProductUsageAsReported",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReportProductUsageId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/proto.UsageService/MarkResourceUsageAsReported": {
      "post": {
        "operationId": "UsageService_MarkResourceUsageAsReported",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsageId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/proto.UsageService/Ping": {
      "post": {
        "operationId": "UsageService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "UsageService"
        ]
      }
    },
    "/proto.UsageService/UpdateProductUsageReport": {
      "post": {
        "operationId": "UsageService_UpdateProductUsageReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReportProductUsageUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/proto.UserCredentialsService/Ping": {
      "post": {
        "operationId": "UserCredentialsService_Ping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/proto.VendorSyncService/Delete": {
      "post": {
        "operationId": "VendorSyncService_Delete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultVendortDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorSyncService"
        ]
      }
    },
    "/proto.VendorSyncService/Put": {
      "post": {
        "operationId": "VendorSyncService_Put",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultVendor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorSyncService"
        ]
      }
    },
    "/proto.VendorSyncService/SearchStream": {
      "post": {
        "operationId": "VendorSyncService_SearchStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDefaultVendorSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDefaultVendor"
                }
              },
              "title": "Stream result of protoDefaultVendor",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorSyncService"
        ]
      }
    },
    "/v1/api/pc/products": {
      "post": {
        "operationId": "ProductCatalogServiceV2_UserReadExternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "external user read call",
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/v1/api/products": {
      "post": {
        "operationId": "ProductCatalogService_UserReadExternal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "external user read call",
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/v1/authorization/actions": {
      "post": {
        "operationId": "AuthzService_Actions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoActionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoActionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieves the actions that a user can perform on a resource. Requires a user token for authorization.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles": {
      "get": {
        "operationId": "AuthzService_QueryCloudAccountRoles",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceType",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "size",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountRoles"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "post": {
        "operationId": "AuthzService_CreateCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "alias": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string"
                },
                "deletedAt": {
                  "type": "string"
                },
                "effect": {
                  "$ref": "#/definitions/protoCloudAccountRoleEffect"
                },
                "id": {
                  "type": "string"
                },
                "permissions": {
                  "items": {
                    "$ref": "#/definitions/protoCloudAccountRolePermission"
                  },
                  "type": "array"
                },
                "updatedAt": {
                  "type": "string"
                },
                "users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/default": {
      "get": {
        "operationId": "AuthzService_DefaultCloudAccountRoleAssigned",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDefaultCloudAccountRoleAssignedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Internal method called only by cloudaccount-enroll",
        "tags": [
          "AuthzService"
        ]
      },
      "post": {
        "operationId": "AuthzService_AssignDefaultCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "admins": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "members": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Internal method called only by cloudaccount-enroll",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{cloudAccountRoleId}/permissions": {
      "post": {
        "operationId": "AuthzService_AddPermissionToCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "cloudAccountRoleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "permission": {
                  "$ref": "#/definitions/protoCloudAccountRolePermission"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{cloudAccountRoleId}/permissions/{id}": {
      "delete": {
        "operationId": "AuthzService_RemovePermissionFromCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "cloudAccountRoleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{cloudAccountRoleId}/permissions/{permission.id}": {
      "put": {
        "operationId": "AuthzService_UpdatePermissionCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "cloudAccountRoleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "permission.id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "permission": {
                  "properties": {
                    "actions": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "resourceId": {
                      "type": "string"
                    },
                    "resourceType": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{id}": {
      "delete": {
        "operationId": "AuthzService_RemoveCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "get": {
        "operationId": "AuthzService_GetCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountRole"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "put": {
        "operationId": "AuthzService_UpdateCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "alias": {
                  "type": "string"
                },
                "effect": {
                  "$ref": "#/definitions/protoCloudAccountRoleUpdateEffect"
                },
                "permissions": {
                  "items": {
                    "$ref": "#/definitions/protoCloudAccountRoleUpdatePermission"
                  },
                  "type": "array"
                },
                "users": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{id}/resources": {
      "delete": {
        "operationId": "AuthzService_RemoveResourceFromCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/roles/{id}/users": {
      "delete": {
        "operationId": "AuthzService_RemoveUserFromCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "post": {
        "operationId": "AuthzService_AddUserToCloudAccountRole",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "userId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/users": {
      "get": {
        "operationId": "AuthzService_ListUsersByCloudAccount",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListUsersByCloudAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/users/{userId}": {
      "get": {
        "operationId": "AuthzService_GetUser",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUserDetailed"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/cloudaccounts/{cloudAccountId}/users/{userId}/roles": {
      "post": {
        "operationId": "AuthzService_AddCloudAccountRolesToUser",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "cloudAccountRoleIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      },
      "put": {
        "operationId": "AuthzService_RemoveCloudAccountRolesFromUser",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "cloudAccountRoleIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/ping": {
      "get": {
        "operationId": "AuthzService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/policies/create": {
      "post": {
        "operationId": "AuthzService_CreatePolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/policies/remove": {
      "post": {
        "operationId": "AuthzService_RemovePolicy",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/resources": {
      "get": {
        "operationId": "AuthzService_ListResourceDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceDefinitions"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/system_role/assign": {
      "post": {
        "operationId": "AuthzService_AssignSystemRole",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/authorization/system_role/unassign": {
      "post": {
        "operationId": "AuthzService_UnassignSystemRole",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AuthzService"
        ]
      }
    },
    "/v1/billing/accounts": {
      "post": {
        "operationId": "BillingAccountService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/v1/billing/accounts/downgrade": {
      "post": {
        "operationId": "BillingAccountService_DowngradePremiumtoStandard",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingAccountDowngrade"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingAccountService"
        ]
      }
    },
    "/v1/billing/event/dismiss": {
      "post": {
        "operationId": "NotificationGatewayService_DismissEvent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoEventsFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/billing/events/all": {
      "get": {
        "operationId": "NotificationGatewayService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clientRecordId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoEvents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "this will be short lived - short polling",
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/billing/events/subscribe": {
      "post": {
        "operationId": "NotificationGatewayService_Subscribe",
        "parameters": [
          {
            "in": "query",
            "name": "clientId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoEvents"
                }
              },
              "title": "Stream result of protoEvents",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "to subscribe to long polling",
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/billing/instances/deactivate": {
      "get": {
        "operationId": "BillingDeactivateInstancesService_GetDeactivateInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeactivateInstancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingDeactivateInstancesService"
        ]
      }
    },
    "/v1/billing/instances/deactivate/stream": {
      "get": {
        "operationId": "BillingDeactivateInstancesService_GetDeactivateInstancesStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDeactivateInstancesResponse"
                }
              },
              "title": "Stream result of protoDeactivateInstancesResponse",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingDeactivateInstancesService"
        ]
      }
    },
    "/v1/billing/invoices": {
      "get": {
        "operationId": "BillingInvoiceService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "uint64",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "searchStart",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "searchEnd",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingInvoiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInvoiceService"
        ]
      }
    },
    "/v1/billing/invoices/detail": {
      "get": {
        "operationId": "BillingInvoiceService_ReadDetail",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "invoiceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoInvoiceDetail"
                }
              },
              "title": "Stream result of protoInvoiceDetail",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInvoiceService"
        ]
      }
    },
    "/v1/billing/invoices/statement": {
      "get": {
        "operationId": "BillingInvoiceService_ReadStatement",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "invoiceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoStatement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInvoiceService"
        ]
      }
    },
    "/v1/billing/invoices/unbilled": {
      "get": {
        "operationId": "BillingInvoiceService_ReadUnbilled",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoInvoiceDetail"
                }
              },
              "title": "Stream result of protoInvoiceDetail",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInvoiceService"
        ]
      }
    },
    "/v1/billing/ops/actions/scheduler": {
      "post": {
        "operationId": "BillingOpsActionService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSchedulerAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingOpsActionService"
        ]
      }
    },
    "/v1/billing/options": {
      "get": {
        "operationId": "BillingOptionService_Read",
        "parameters": [
          {
            "format": "uint64",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "startTime",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "endTime",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingOption"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingOptionService"
        ]
      }
    },
    "/v1/billing/paid/instancetypes": {
      "get": {
        "operationId": "BillingInstancesService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingPaidInstanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingInstancesService"
        ]
      }
    },
    "/v1/billing/payments/postpayment": {
      "get": {
        "operationId": "PaymentService_AddPaymentPostProcessing",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "int64",
            "in": "query",
            "name": "primaryPaymentMethodNo",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Implements update_acct_billing_group_m",
        "tags": [
          "PaymentService"
        ]
      }
    },
    "/v1/billing/payments/prepayment": {
      "get": {
        "operationId": "PaymentService_AddPaymentPreProcessing",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoPrePaymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Implements assign_collections_acct_group_m, set_session_m",
        "tags": [
          "PaymentService"
        ]
      }
    },
    "/v1/billing/rates": {
      "get": {
        "operationId": "BillingRateService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoBillingRate"
                }
              },
              "title": "Stream result of protoBillingRate",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingRateService"
        ]
      }
    },
    "/v1/billing/service/deactivate": {
      "get": {
        "operationId": "BillingDeactivateInstancesService_GetDeactivatedServiceAccounts",
        "parameters": [
          {
            "in": "query",
            "name": "productFamily",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cleanupThreshold",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tradeRestricted",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoDeactivateAccounts"
                }
              },
              "title": "Stream result of protoDeactivateAccounts",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingDeactivateInstancesService"
        ]
      }
    },
    "/v1/billing/sync": {
      "post": {
        "operationId": "BillingProductCatalogSyncService_Sync",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingProductCatalogSyncService"
        ]
      }
    },
    "/v1/billing/usages": {
      "get": {
        "operationId": "BillingUsageService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "searchStart",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "searchEnd",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingUsageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingUsageService"
        ]
      }
    },
    "/v1/cloudaccount/ping": {
      "get": {
        "operationId": "CloudAccountService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts": {
      "get": {
        "operationId": "CloudAccountService_Search",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "parentId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tid",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "oid",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "created",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "owner",
            "required": false,
            "type": "string"
          },
          {
            "default": "ACCOUNT_TYPE_UNSPECIFIED",
            "enum": [
              "ACCOUNT_TYPE_UNSPECIFIED",
              "ACCOUNT_TYPE_STANDARD",
              "ACCOUNT_TYPE_PREMIUM",
              "ACCOUNT_TYPE_ENTERPRISE_PENDING",
              "ACCOUNT_TYPE_ENTERPRISE",
              "ACCOUNT_TYPE_INTEL",
              "ACCOUNT_TYPE_MEMBER"
            ],
            "in": "query",
            "name": "type",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "billingAccountCreated",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "enrolled",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "lowCredits",
            "required": false,
            "type": "boolean"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "creditsDepleted",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "terminatePaidServices",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "terminateMessageQueued",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "personId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "countryCode",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "paidServicesAllowed",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "restricted",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "adminName",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "accessLimitedTimestamp",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tradeRestricted",
            "required": false,
            "type": "boolean"
          },
          {
            "default": "UPGRADE_COMPLETE",
            "enum": [
              "UPGRADE_COMPLETE",
              "UPGRADE_NOT_INITIATED",
              "UPGRADE_PENDING",
              "UPGRADE_PENDING_CC",
              "UPGRADE_PENDING_CC_VERIFIED"
            ],
            "in": "query",
            "name": "upgradedToPremium",
            "required": false,
            "type": "string"
          },
          {
            "default": "UPGRADE_COMPLETE",
            "enum": [
              "UPGRADE_COMPLETE",
              "UPGRADE_NOT_INITIATED",
              "UPGRADE_PENDING",
              "UPGRADE_PENDING_CC",
              "UPGRADE_PENDING_CC_VERIFIED"
            ],
            "in": "query",
            "name": "upgradedToEnterprise",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoCloudAccount"
                }
              },
              "title": "Stream result of protoCloudAccount",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      },
      "post": {
        "operationId": "CloudAccountService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountId"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/client/{clientId}/accounts": {
      "get": {
        "operationId": "CloudAccountAppClientService_GetAppClientCloudAccount",
        "parameters": [
          {
            "in": "path",
            "name": "clientId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Called internally by OPA only - name and countryCode overwritten for member",
        "tags": [
          "CloudAccountAppClientService"
        ]
      }
    },
    "/v1/cloudaccounts/enroll": {
      "post": {
        "operationId": "CloudAccountEnrollService_Enroll",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountEnrollRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountEnrollResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Enroll creates a cloud account and a billing account for a new user.\nFor premium users, Enroll checks for billing options or cloud credits.\nCloudAccountEnrollResponse.Action tells the caller what to do next to\nmove the enrollment process further.",
        "tags": [
          "CloudAccountEnrollService"
        ]
      }
    },
    "/v1/cloudaccounts/ensure": {
      "post": {
        "operationId": "CloudAccountService_Ensure",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{cloudAccountId}/members/add": {
      "post": {
        "operationId": "CloudAccountMemberService_AddMembers",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "members": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{cloudAccountId}/members/delete": {
      "post": {
        "operationId": "CloudAccountMemberService_RemoveMembers",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "members": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{id}": {
      "delete": {
        "operationId": "CloudAccountService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      },
      "get": {
        "operationId": "CloudAccountService_GetById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      },
      "patch": {
        "operationId": "CloudAccountService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "accessLimitedTimestamp": {
                  "format": "date-time",
                  "type": "string"
                },
                "adminName": {
                  "type": "string"
                },
                "billingAccountCreated": {
                  "type": "boolean"
                },
                "countryCode": {
                  "type": "string"
                },
                "creditsDepleted": {
                  "format": "date-time",
                  "type": "string"
                },
                "delinquent": {
                  "type": "boolean"
                },
                "enrolled": {
                  "type": "boolean"
                },
                "lowCredits": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "owner": {
                  "type": "string"
                },
                "paidServicesAllowed": {
                  "type": "boolean"
                },
                "parentId": {
                  "type": "string"
                },
                "personId": {
                  "type": "string"
                },
                "restricted": {
                  "type": "boolean"
                },
                "terminateMessageQueued": {
                  "type": "boolean"
                },
                "terminatePaidServices": {
                  "type": "boolean"
                },
                "tid": {
                  "type": "string"
                },
                "tradeRestricted": {
                  "type": "boolean"
                },
                "type": {
                  "$ref": "#/definitions/protoAccountType"
                },
                "upgradedToEnterprise": {
                  "$ref": "#/definitions/protoUpgradeStatus"
                },
                "upgradedToPremium": {
                  "$ref": "#/definitions/protoUpgradeStatus"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{id}/members": {
      "get": {
        "operationId": "CloudAccountMemberService_ReadMembers",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountMembers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/id/{id}/members/active": {
      "get": {
        "operationId": "CloudAccountMemberService_ReadActiveMembers",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountMembers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Retrieve all active members who have accepted invites of a cloud account, excluding the cloud account owner",
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/create": {
      "post": {
        "operationId": "CloudAccountInvitationService_CreateInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteRequestList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/member/reject": {
      "post": {
        "operationId": "CloudAccountInvitationMemberService_RejectInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/read": {
      "get": {
        "operationId": "CloudAccountInvitationService_ReadInvite",
        "parameters": [
          {
            "in": "query",
            "name": "adminAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInviteList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/remove": {
      "post": {
        "operationId": "CloudAccountInvitationService_RemoveInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/resend": {
      "post": {
        "operationId": "CloudAccountInvitationService_ResendInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteResendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoInviteResendResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/invitations/revoke": {
      "post": {
        "operationId": "CloudAccountInvitationService_RevokeInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInviteRevokeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/name/{name}": {
      "get": {
        "operationId": "CloudAccountService_GetByName",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/name/{userName}/members": {
      "get": {
        "operationId": "CloudAccountMemberService_ReadUserCloudAccounts",
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "onlyActive",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoMemberAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/personid/{personid}": {
      "get": {
        "operationId": "CloudAccountService_GetByPersonId",
        "parameters": [
          {
            "in": "path",
            "name": "personid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/sendinvitecode": {
      "post": {
        "operationId": "CloudAccountInvitationService_SendInviteCode",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSendInviteCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/tid/{tid}/oid/{oid}": {
      "get": {
        "operationId": "CloudAccountService_GetByOid",
        "parameters": [
          {
            "in": "path",
            "name": "tid",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "oid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudaccounts/update/personid": {
      "post": {
        "operationId": "CloudAccountMemberService_UpdatePersonId",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMemberPersonId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Called internally by cloudaccount-enroll only",
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/upgrade": {
      "post": {
        "operationId": "CloudAccountEnrollService_Upgrade",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountUpgradeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountUpgradeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountEnrollService"
        ]
      }
    },
    "/v1/cloudaccounts/upgradecc": {
      "post": {
        "operationId": "CloudAccountEnrollService_UpgradeWithCreditCard",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudAccountUpgradeWithCreditCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCloudAccountUpgradeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountEnrollService"
        ]
      }
    },
    "/v1/cloudaccounts/user/{userName}/accounts": {
      "get": {
        "operationId": "CloudAccountMemberService_GetCloudAccountsForOpa",
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRelatedAccounts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Called internally by OPA only",
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/user/{userName}/personId": {
      "get": {
        "operationId": "CloudAccountMemberService_GetMemberPersonId",
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoAccountPerson"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Called internally by OPA only",
        "tags": [
          "CloudAccountMemberService"
        ]
      }
    },
    "/v1/cloudaccounts/validateinvitecode": {
      "post": {
        "operationId": "CloudAccountInvitationService_ValidateInviteCode",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoValidateInviteCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoValidateInviteCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountInvitationService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitor/enable": {
      "post": {
        "operationId": "CloudMonitorService_EnableMonitor",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoEnableMonitorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitor/resources/{resourceId}/disable": {
      "post": {
        "operationId": "CloudMonitorService_DisableMonitor",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDisableMonitorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudaccounts/{cloudAccountId}/cloudmonitor/resources/{resourceId}/query": {
      "post": {
        "operationId": "CloudMonitorService_QueryResourcesMetrics",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "category": {
                  "type": "string"
                },
                "end": {
                  "type": "string"
                },
                "metric": {
                  "type": "string"
                },
                "resourceType": {
                  "type": "string"
                },
                "start": {
                  "type": "string"
                },
                "step": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoQueryResourcesMetricsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudaccounts/{name}": {
      "get": {
        "operationId": "CloudAccountService_CheckCloudAccountExists",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudAccountService"
        ]
      }
    },
    "/v1/cloudcredits/coupons": {
      "get": {
        "operationId": "CloudCreditsCouponService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "redeemed",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "creator",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCouponResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCouponService"
        ]
      },
      "post": {
        "operationId": "CloudCreditsCouponService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCouponCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCoupon"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCouponService"
        ]
      }
    },
    "/v1/cloudcredits/coupons/disable": {
      "post": {
        "operationId": "CloudCreditsCouponService_Disable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCouponDisable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCouponService"
        ]
      }
    },
    "/v1/cloudcredits/coupons/redeem": {
      "post": {
        "operationId": "CloudCreditsCouponService_Redeem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCloudCreditsCouponRedeem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCouponService"
        ]
      }
    },
    "/v1/cloudcredits/credit": {
      "get": {
        "operationId": "CloudCreditsCreditService_ReadCredits",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "history",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreditResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      },
      "post": {
        "operationId": "CloudCreditsCreditService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCredit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/credit/creditmigrate": {
      "post": {
        "operationId": "CloudCreditsCreditService_CreditMigrate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUnappliedCredits"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/credit/deletemigratedcredit": {
      "post": {
        "operationId": "CloudCreditsCreditService_DeleteMigratedCredit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMigratedCredits"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/credit/unapplied": {
      "get": {
        "operationId": "CloudCreditsCreditService_ReadUnappliedCreditBalance",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUnappliedCreditBalance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/ping": {
      "get": {
        "operationId": "CloudCreditsCreditService_Ping",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Ping always returns a successful response by the service implementation.\nIt can be used for testing connectivity to the service.",
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudcredits/state": {
      "get": {
        "operationId": "CloudCreditsCreditService_ReadCreditStateLog",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreditsStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      },
      "post": {
        "operationId": "CloudCreditsCreditService_CreateCreditStateLog",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreditsState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudCreditsCreditService"
        ]
      }
    },
    "/v1/cloudmonitor/admin/intervals/{category}": {
      "get": {
        "operationId": "CloudMonitorService_GetIntervals",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetIntervalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudmonitor/admin/metrics/{category}": {
      "get": {
        "operationId": "CloudMonitorService_GetMetricTypes",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetMetricTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/cloudmonitor/admin/resourcetypes": {
      "get": {
        "operationId": "CloudMonitorService_GetResourceCategories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetResourceCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CloudMonitorService"
        ]
      }
    },
    "/v1/console/{cloudAccountId}/invoices/unbilled": {
      "get": {
        "operationId": "ConsoleInvoiceService_ReadUnbilled",
        "parameters": [
          {
            "in": "path",
            "name": "cloudAccountId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Example: May 2023",
            "format": "date-time",
            "in": "query",
            "name": "billingPeriod",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoConsoleInvoiceUnbilledResponse"
                }
              },
              "title": "Stream result of protoConsoleInvoiceUnbilledResponse",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ConsoleInvoiceService"
        ]
      }
    },
    "/v1/deprecated/billing/coupons": {
      "get": {
        "operationId": "BillingCouponService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": false,
            "type": "string"
          },
          {
            "format": "date-time",
            "in": "query",
            "name": "redeemed",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "creator",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingCouponResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCouponService"
        ]
      },
      "post": {
        "operationId": "BillingCouponService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingCouponCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingCoupon"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCouponService"
        ]
      }
    },
    "/v1/deprecated/billing/coupons/disable": {
      "post": {
        "operationId": "BillingCouponService_Disable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingCouponDisable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCouponService"
        ]
      }
    },
    "/v1/deprecated/billing/coupons/redeem": {
      "post": {
        "operationId": "BillingCouponService_Redeem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingCouponRedeem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCouponService"
        ]
      }
    },
    "/v1/deprecated/billing/credit": {
      "get": {
        "operationId": "BillingCreditService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "history",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingCreditResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      },
      "post": {
        "operationId": "BillingCreditService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingCredit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/v1/deprecated/billing/credit/creditmigrate": {
      "post": {
        "operationId": "BillingCreditService_CreditMigrate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingUnappliedCredit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/v1/deprecated/billing/credit/deletemigratedcredit": {
      "post": {
        "operationId": "BillingCreditService_DeleteMigratedCredit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBillingMigratedCredit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/v1/deprecated/billing/credit/unapplied": {
      "get": {
        "operationId": "BillingCreditService_ReadUnappliedCreditBalance",
        "parameters": [
          {
            "in": "query",
            "name": "cloudAccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBillingUnappliedCreditBalance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BillingCreditService"
        ]
      }
    },
    "/v1/email/send": {
      "post": {
        "operationId": "EmailNotificationService_SendUserEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EmailNotificationService"
        ]
      }
    },
    "/v1/meteringrecords": {
      "patch": {
        "operationId": "MeteringService_Update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUsageUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      },
      "post": {
        "operationId": "MeteringService_Create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUsageCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/invalid": {
      "post": {
        "operationId": "MeteringService_CreateInvalidRecords",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateInvalidMeteringRecords"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/invalid/search": {
      "post": {
        "operationId": "MeteringService_SearchInvalid",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInvalidMeteringRecordFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoInvalidMeteringRecord"
                }
              },
              "title": "Stream result of protoInvalidMeteringRecord",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/previous": {
      "get": {
        "operationId": "MeteringService_FindPrevious",
        "parameters": [
          {
            "format": "int64",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "resourceId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/resources/available": {
      "post": {
        "operationId": "MeteringService_IsMeteringRecordAvailable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMeteringAvailableFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoMeteringAvailableResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/resources/search": {
      "post": {
        "operationId": "MeteringService_SearchResourceMeteringRecordsAsStream",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoMeteringFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoResourceMeteringRecordsList"
                }
              },
              "title": "Stream result of protoResourceMeteringRecordsList",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "this API is only for internal use, please DO NOT expose as a external API as it is not RESTful",
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/meteringrecords/search": {
      "post": {
        "operationId": "MeteringService_Search",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUsageFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoUsage"
                }
              },
              "title": "Stream result of protoUsage",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MeteringService"
        ]
      }
    },
    "/v1/notification/email/send": {
      "post": {
        "operationId": "EmailNotificationService_SendEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSendEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EmailNotificationService"
        ]
      }
    },
    "/v1/notification/event/publish": {
      "post": {
        "operationId": "NotificationGatewayService_PublishEvent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoPublishEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoPublishEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/notification/event/subscribe": {
      "post": {
        "operationId": "NotificationGatewayService_SubscribeEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoSubscribeEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoSubscribeEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/notification/events/delete": {
      "post": {
        "operationId": "NotificationGatewayService_DeleteEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDeleteEventRequestList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/notification/events/receive": {
      "post": {
        "operationId": "NotificationGatewayService_ReceiveEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReceiveEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoReceiveEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "NotificationGatewayService"
        ]
      }
    },
    "/v1/otp/create": {
      "post": {
        "operationId": "OtpService_CreateOtp",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoOtpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "OtpService"
        ]
      }
    },
    "/v1/otp/resend": {
      "post": {
        "operationId": "OtpService_ResendOtp",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoOtpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "OtpService"
        ]
      }
    },
    "/v1/otp/verify": {
      "post": {
        "operationId": "OtpService_VerifyOtp",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoVerifyOtpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVerifyOtpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "OtpService"
        ]
      }
    },
    "/v1/pc/families": {
      "get": {
        "operationId": "FamilyService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "description",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "adminName",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "enabled",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFamilyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FamilyService"
        ]
      },
      "post": {
        "operationId": "FamilyService_Add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoFamilyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "only used by admin",
        "tags": [
          "FamilyService"
        ]
      }
    },
    "/v1/pc/families/id/{id}": {
      "get": {
        "operationId": "FamilyService_GetById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoFamilyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FamilyService"
        ]
      },
      "put": {
        "operationId": "FamilyService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adminName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "vendorId": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FamilyService"
        ]
      }
    },
    "/v1/pc/products": {
      "post": {
        "operationId": "ProductCatalogServiceV2_UserRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/v1/pc/products/acl": {
      "get": {
        "operationId": "AccessService_ReadAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetAccessResponseV2"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccessService"
        ]
      }
    },
    "/v1/pc/products/acl/add": {
      "post": {
        "operationId": "AccessService_AddAccess",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductAccessRequestV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccessService"
        ]
      }
    },
    "/v1/pc/products/acl/delete": {
      "delete": {
        "operationId": "AccessService_RemoveAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "AccessService"
        ]
      }
    },
    "/v1/pc/products/admin": {
      "post": {
        "operationId": "ProductCatalogServiceV2_AdminRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "to be used by billing",
        "tags": [
          "ProductCatalogServiceV2"
        ]
      }
    },
    "/v1/pc/products/cr": {
      "get": {
        "operationId": "ProductChangeRequestService_ReadProductChangeRequest",
        "parameters": [
          {
            "format": "int32",
            "in": "query",
            "name": "id",
            "required": false,
            "type": "integer"
          },
          {
            "default": "pending",
            "enum": [
              "pending",
              "approved",
              "denied"
            ],
            "in": "query",
            "name": "requestStatus",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductChangeRequestResponseList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      },
      "post": {
        "operationId": "ProductChangeRequestService_AddProductDataInChangeRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProposedData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      }
    },
    "/v1/pc/products/cr/enable/{productId}": {
      "post": {
        "operationId": "ProductChangeRequestService_EnableProductInChangeRequest",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "enable": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      }
    },
    "/v1/pc/products/cr/review": {
      "post": {
        "operationId": "ProductChangeRequestService_ReviewProductChangeRequest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoReviewProductChangeRequestFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      }
    },
    "/v1/pc/products/cr/{product.id}": {
      "post": {
        "operationId": "ProductChangeRequestService_UpdateProductDataInChangeRequest",
        "parameters": [
          {
            "in": "path",
            "name": "product.id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "product": {
                  "properties": {
                    "accountTypesBlocked": {
                      "type": "string"
                    },
                    "accountWhitelist": {
                      "type": "boolean"
                    },
                    "billingEnable": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "displayCategory": {
                      "type": "string"
                    },
                    "displayDesc": {
                      "type": "string"
                    },
                    "displayHighlight": {
                      "type": "string"
                    },
                    "displayInfo": {
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "eccn": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "familyId": {
                      "type": "string"
                    },
                    "instanceCategory": {
                      "type": "string"
                    },
                    "instanceMode": {
                      "type": "string"
                    },
                    "instanceType": {
                      "type": "string"
                    },
                    "matchExpr": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "pcq": {
                      "type": "string"
                    },
                    "releaseStatus": {
                      "type": "string"
                    },
                    "serviceName": {
                      "type": "string"
                    },
                    "serviceType": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "usecase": {
                      "type": "string"
                    },
                    "vendorId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "rates": {
                  "items": {
                    "$ref": "#/definitions/protoRateData"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductChangeRequestService"
        ]
      }
    },
    "/v1/pc/products/interests": {
      "get": {
        "operationId": "ProductInterestService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "userEmail",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductInterestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductInterestService"
        ]
      },
      "post": {
        "operationId": "ProductInterestService_Add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductInterestRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "only used by admin",
        "tags": [
          "ProductInterestService"
        ]
      }
    },
    "/v1/pc/productsync/{id}": {
      "get": {
        "operationId": "ProductSyncService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDefaultProduct"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductSyncService"
        ]
      }
    },
    "/v1/pc/vendors": {
      "get": {
        "operationId": "VendorService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVendorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "to be used by billing",
        "tags": [
          "VendorService"
        ]
      }
    },
    "/v1/pc/vendors/add": {
      "post": {
        "operationId": "VendorService_Add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoVendorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorService"
        ]
      }
    },
    "/v1/pc/vendors/id/{id}": {
      "get": {
        "operationId": "VendorService_GetById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVendorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorService"
        ]
      },
      "put": {
        "operationId": "VendorService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "adminName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorService"
        ]
      }
    },
    "/v1/pc/vendorsync/{id}": {
      "get": {
        "operationId": "VendorSyncService_Get",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDefaultVendor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "VendorSyncService"
        ]
      }
    },
    "/v1/products": {
      "post": {
        "operationId": "ProductCatalogService_UserRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "user read call",
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/v1/products/acl": {
      "get": {
        "operationId": "ProductAccessService_ReadAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetAccessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductAccessService"
        ]
      }
    },
    "/v1/products/acl/access": {
      "get": {
        "operationId": "ProductAccessService_CheckProductAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductAccessService"
        ]
      }
    },
    "/v1/products/acl/add": {
      "post": {
        "operationId": "ProductAccessService_AddAccess",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductAccessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductAccessService"
        ]
      }
    },
    "/v1/products/acl/delete": {
      "delete": {
        "operationId": "ProductAccessService_RemoveAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "vendorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "productId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductAccessService"
        ]
      }
    },
    "/v1/products/admin": {
      "post": {
        "operationId": "ProductCatalogService_AdminRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "admin read call",
        "tags": [
          "ProductCatalogService"
        ]
      }
    },
    "/v1/regions": {
      "post": {
        "operationId": "RegionService_UserRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegionUserFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegionUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      }
    },
    "/v1/regions/acl": {
      "get": {
        "operationId": "RegionAccessService_ReadAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionAccessType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetRegionAccessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionAccessService"
        ]
      }
    },
    "/v1/regions/acl/access": {
      "get": {
        "operationId": "RegionAccessService_CheckRegionAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "boolean"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionAccessService"
        ]
      }
    },
    "/v1/regions/acl/add": {
      "post": {
        "operationId": "RegionAccessService_AddAccess",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegionAccessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionAccessService"
        ]
      }
    },
    "/v1/regions/acl/delete": {
      "delete": {
        "operationId": "RegionAccessService_RemoveAccess",
        "parameters": [
          {
            "in": "query",
            "name": "cloudaccountId",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "regionName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionAccessService"
        ]
      }
    },
    "/v1/regions/add": {
      "post": {
        "operationId": "RegionService_Add",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoAddRegionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      }
    },
    "/v1/regions/admin": {
      "post": {
        "operationId": "RegionService_AdminRead",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegionFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      }
    },
    "/v1/regions/{name}": {
      "delete": {
        "operationId": "RegionService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      },
      "put": {
        "operationId": "RegionService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "apiDns": {
                  "type": "string"
                },
                "availabilityZone": {
                  "type": "string"
                },
                "friendlyName": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "prefix": {
                  "format": "int32",
                  "type": "integer"
                },
                "subnet": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "vnet": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RegionService"
        ]
      }
    },
    "/v1/usages/bulk": {
      "post": {
        "operationId": "UsageService_PostBulkUploadResourceUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoBulkUploadResourceUsages"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoBulkUploadResourceUsagesFailed"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/products/id/{id}": {
      "get": {
        "operationId": "UsageService_GetProductUsageById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/products/search": {
      "post": {
        "operationId": "UsageService_SearchProductUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoProductUsages"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/products/search/stream": {
      "post": {
        "operationId": "UsageService_StreamSearchProductUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoProductUsage"
                }
              },
              "title": "Stream result of protoProductUsage",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "UsageService server-side streaming return a stream of ProductUsages messages",
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/records/products": {
      "post": {
        "operationId": "UsageRecordService_CreateProductUsageRecord",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsageRecordCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageRecordService"
        ]
      }
    },
    "/v1/usages/records/products/invalid/search": {
      "post": {
        "operationId": "UsageRecordService_SearchInvalidProductUsageRecords",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoInvalidProductUsageRecordsFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoInvalidProductUsageRecord"
                }
              },
              "title": "Stream result of protoInvalidProductUsageRecord",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageRecordService"
        ]
      }
    },
    "/v1/usages/records/products/search": {
      "post": {
        "operationId": "UsageRecordService_SearchProductUsageRecords",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsageRecordsFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoProductUsageRecord"
                }
              },
              "title": "Stream result of protoProductUsageRecord",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageRecordService"
        ]
      }
    },
    "/v1/usages/reported/products": {
      "post": {
        "operationId": "UsageService_SearchProductUsagesReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoProductUsagesReportFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoReportProductUsage"
                }
              },
              "title": "Stream result of protoReportProductUsage",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/resources": {
      "post": {
        "operationId": "UsageService_CreateResourceUsage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsageCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      },
      "put": {
        "operationId": "UsageService_UpdateResourceUsage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsageUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/resources/id/{id}": {
      "get": {
        "operationId": "UsageService_GetResourceUsageById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceUsage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/resources/search": {
      "post": {
        "operationId": "UsageService_SearchResourceUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoResourceUsages"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/resources/search/stream": {
      "post": {
        "operationId": "UsageService_StreamSearchResourceUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoResourceUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/protoResourceUsage"
                }
              },
              "title": "Stream result of protoResourceUsage",
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "UsageService server-side streaming return a stream of ResourceUsages messages",
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/usages/search": {
      "post": {
        "operationId": "UsageService_SearchUsages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUsagesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUsages"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "defaults to returning usages for products.",
        "tags": [
          "UsageService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/create": {
      "post": {
        "operationId": "UserCredentialsService_CreateUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "appClientName": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoClientCredentials"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/delete": {
      "delete": {
        "operationId": "UserCredentialsService_RemoveUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clientId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/list": {
      "get": {
        "operationId": "UserCredentialsService_GetUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetUserCredentialResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/member/revoke": {
      "post": {
        "operationId": "UserCredentialsService_RemoveMemberUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "revoked",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "memberEmail",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/user/credentials/{cloudaccountId}/revoke": {
      "post": {
        "operationId": "UserCredentialsService_RevokeUserCredentials",
        "parameters": [
          {
            "in": "path",
            "name": "cloudaccountId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "revoked",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {},
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UserCredentialsService"
        ]
      }
    },
    "/v1/vendors": {
      "get": {
        "operationId": "ProductVendorService_Read",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoVendorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ProductVendorService"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "name": "AuthzService"
    },
    {
      "name": "BillingAccountService"
    },
    {
      "name": "BillingOptionService"
    },
    {
      "name": "BillingRateService"
    },
    {
      "name": "BillingCreditService"
    },
    {
      "name": "BillingCouponService"
    },
    {
      "name": "BillingInvoiceService"
    },
    {
      "name": "BillingProductCatalogSyncService"
    },
    {
      "name": "PaymentService"
    },
    {
      "name": "BillingInstancesService"
    },
    {
      "name": "BillingUsageService"
    },
    {
      "name": "BillingOpsActionService"
    },
    {
      "name": "BillingDeactivateInstancesService"
    },
    {
      "name": "CloudAccountEnrollService"
    },
    {
      "name": "CloudAccountService"
    },
    {
      "name": "CloudAccountMemberService"
    },
    {
      "name": "CloudAccountAppClientService"
    },
    {
      "name": "OtpService"
    },
    {
      "name": "CloudAccountInvitationService"
    },
    {
      "name": "CloudAccountInvitationMemberService"
    },
    {
      "name": "CloudCreditsCreditService"
    },
    {
      "name": "CloudCreditsCouponService"
    },
    {
      "name": "CloudMonitorService"
    },
    {
      "name": "ConsoleInvoiceService"
    },
    {
      "name": "MeteringService"
    },
    {
      "name": "NotificationGatewayService"
    },
    {
      "name": "EmailNotificationService"
    },
    {
      "name": "ProductVendorService"
    },
    {
      "name": "ProductCatalogService"
    },
    {
      "name": "ProductAccessService"
    },
    {
      "name": "RegionService"
    },
    {
      "name": "RegionAccessService"
    },
    {
      "name": "ProductSyncService"
    },
    {
      "name": "VendorSyncService"
    },
    {
      "name": "FamilyService"
    },
    {
      "name": "VendorService"
    },
    {
      "name": "ProductCatalogServiceV2"
    },
    {
      "name": "AccessService"
    },
    {
      "name": "ProductChangeRequestService"
    },
    {
      "name": "ProductInterestService"
    },
    {
      "name": "UsageService"
    },
    {
      "name": "UsageRecordService"
    },
    {
      "name": "UserCredentialsService"
    }
  ]
}