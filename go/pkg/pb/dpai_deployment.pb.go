// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: dpai_deployment.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DpaiDeploymentChangeIndicator int32

const (
	DpaiDeploymentChangeIndicator_DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED DpaiDeploymentChangeIndicator = 0
	DpaiDeploymentChangeIndicator_DPAI_CREATE                                  DpaiDeploymentChangeIndicator = 1
	DpaiDeploymentChangeIndicator_DPAI_UPDATE                                  DpaiDeploymentChangeIndicator = 2
	DpaiDeploymentChangeIndicator_DPAI_DELETE                                  DpaiDeploymentChangeIndicator = 3
	DpaiDeploymentChangeIndicator_DPAI_RESTART                                 DpaiDeploymentChangeIndicator = 4
	DpaiDeploymentChangeIndicator_DPAI_RESIZE                                  DpaiDeploymentChangeIndicator = 5
	DpaiDeploymentChangeIndicator_DPAI_UPGRADE                                 DpaiDeploymentChangeIndicator = 6
)

// Enum value maps for DpaiDeploymentChangeIndicator.
var (
	DpaiDeploymentChangeIndicator_name = map[int32]string{
		0: "DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED",
		1: "DPAI_CREATE",
		2: "DPAI_UPDATE",
		3: "DPAI_DELETE",
		4: "DPAI_RESTART",
		5: "DPAI_RESIZE",
		6: "DPAI_UPGRADE",
	}
	DpaiDeploymentChangeIndicator_value = map[string]int32{
		"DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED": 0,
		"DPAI_CREATE":  1,
		"DPAI_UPDATE":  2,
		"DPAI_DELETE":  3,
		"DPAI_RESTART": 4,
		"DPAI_RESIZE":  5,
		"DPAI_UPGRADE": 6,
	}
)

func (x DpaiDeploymentChangeIndicator) Enum() *DpaiDeploymentChangeIndicator {
	p := new(DpaiDeploymentChangeIndicator)
	*p = x
	return p
}

func (x DpaiDeploymentChangeIndicator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DpaiDeploymentChangeIndicator) Descriptor() protoreflect.EnumDescriptor {
	return file_dpai_deployment_proto_enumTypes[0].Descriptor()
}

func (DpaiDeploymentChangeIndicator) Type() protoreflect.EnumType {
	return &file_dpai_deployment_proto_enumTypes[0]
}

func (x DpaiDeploymentChangeIndicator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DpaiDeploymentChangeIndicator.Descriptor instead.
func (DpaiDeploymentChangeIndicator) EnumDescriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{0}
}

type DpaiDeploymentState int32

const (
	DpaiDeploymentState_DPAI_DEPLOYMENT_STATE_UNSPECIFIED DpaiDeploymentState = 0
	DpaiDeploymentState_DPAI_ACCEPTED                     DpaiDeploymentState = 1
	DpaiDeploymentState_DPAI_QUEUED                       DpaiDeploymentState = 2
	DpaiDeploymentState_DPAI_PENDING                      DpaiDeploymentState = 3
	DpaiDeploymentState_DPAI_RUNNING                      DpaiDeploymentState = 4
	DpaiDeploymentState_DPAI_SUCCESS                      DpaiDeploymentState = 5
	DpaiDeploymentState_DPAI_FAILED                       DpaiDeploymentState = 6
	DpaiDeploymentState_DPAI_CANCELLED                    DpaiDeploymentState = 7
	DpaiDeploymentState_DPAI_WAITING_FOR_UPSTREAM         DpaiDeploymentState = 8
	DpaiDeploymentState_DPAI_UPSTREAM_FAILED              DpaiDeploymentState = 9
	DpaiDeploymentState_DPAI_UPSTREAM_CANCELLED           DpaiDeploymentState = 10
)

// Enum value maps for DpaiDeploymentState.
var (
	DpaiDeploymentState_name = map[int32]string{
		0:  "DPAI_DEPLOYMENT_STATE_UNSPECIFIED",
		1:  "DPAI_ACCEPTED",
		2:  "DPAI_QUEUED",
		3:  "DPAI_PENDING",
		4:  "DPAI_RUNNING",
		5:  "DPAI_SUCCESS",
		6:  "DPAI_FAILED",
		7:  "DPAI_CANCELLED",
		8:  "DPAI_WAITING_FOR_UPSTREAM",
		9:  "DPAI_UPSTREAM_FAILED",
		10: "DPAI_UPSTREAM_CANCELLED",
	}
	DpaiDeploymentState_value = map[string]int32{
		"DPAI_DEPLOYMENT_STATE_UNSPECIFIED": 0,
		"DPAI_ACCEPTED":                     1,
		"DPAI_QUEUED":                       2,
		"DPAI_PENDING":                      3,
		"DPAI_RUNNING":                      4,
		"DPAI_SUCCESS":                      5,
		"DPAI_FAILED":                       6,
		"DPAI_CANCELLED":                    7,
		"DPAI_WAITING_FOR_UPSTREAM":         8,
		"DPAI_UPSTREAM_FAILED":              9,
		"DPAI_UPSTREAM_CANCELLED":           10,
	}
)

func (x DpaiDeploymentState) Enum() *DpaiDeploymentState {
	p := new(DpaiDeploymentState)
	*p = x
	return p
}

func (x DpaiDeploymentState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DpaiDeploymentState) Descriptor() protoreflect.EnumDescriptor {
	return file_dpai_deployment_proto_enumTypes[1].Descriptor()
}

func (DpaiDeploymentState) Type() protoreflect.EnumType {
	return &file_dpai_deployment_proto_enumTypes[1]
}

func (x DpaiDeploymentState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DpaiDeploymentState.Descriptor instead.
func (DpaiDeploymentState) EnumDescriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{1}
}

type DpaiServiceType int32

const (
	DpaiServiceType_DPAI_SERVICE_TYPE_UNSPECIFIED DpaiServiceType = 0
	DpaiServiceType_DPAI_WORKSPACE                DpaiServiceType = 1
	DpaiServiceType_DPAI_HMS                      DpaiServiceType = 2
	DpaiServiceType_DPAI_SPARK                    DpaiServiceType = 3
	DpaiServiceType_DPAI_AIRFLOW                  DpaiServiceType = 4
	DpaiServiceType_DPAI_POSTGRES                 DpaiServiceType = 5
)

// Enum value maps for DpaiServiceType.
var (
	DpaiServiceType_name = map[int32]string{
		0: "DPAI_SERVICE_TYPE_UNSPECIFIED",
		1: "DPAI_WORKSPACE",
		2: "DPAI_HMS",
		3: "DPAI_SPARK",
		4: "DPAI_AIRFLOW",
		5: "DPAI_POSTGRES",
	}
	DpaiServiceType_value = map[string]int32{
		"DPAI_SERVICE_TYPE_UNSPECIFIED": 0,
		"DPAI_WORKSPACE":                1,
		"DPAI_HMS":                      2,
		"DPAI_SPARK":                    3,
		"DPAI_AIRFLOW":                  4,
		"DPAI_POSTGRES":                 5,
	}
)

func (x DpaiServiceType) Enum() *DpaiServiceType {
	p := new(DpaiServiceType)
	*p = x
	return p
}

func (x DpaiServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DpaiServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_dpai_deployment_proto_enumTypes[2].Descriptor()
}

func (DpaiServiceType) Type() protoreflect.EnumType {
	return &file_dpai_deployment_proto_enumTypes[2]
}

func (x DpaiServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DpaiServiceType.Descriptor instead.
func (DpaiServiceType) EnumDescriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{2}
}

// Global
type DpaiMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy string                 `protobuf:"bytes,2,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	UpdatedBy string                 `protobuf:"bytes,4,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
}

func (x *DpaiMeta) Reset() {
	*x = DpaiMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiMeta) ProtoMessage() {}

func (x *DpaiMeta) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiMeta.ProtoReflect.Descriptor instead.
func (*DpaiMeta) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{0}
}

func (x *DpaiMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DpaiMeta) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *DpaiMeta) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DpaiMeta) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

// Common
type DpaiDeploymentMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CreatedBy string                 `protobuf:"bytes,2,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DpaiDeploymentMeta) Reset() {
	*x = DpaiDeploymentMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentMeta) ProtoMessage() {}

func (x *DpaiDeploymentMeta) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentMeta.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentMeta) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{1}
}

func (x *DpaiDeploymentMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DpaiDeploymentMeta) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *DpaiDeploymentMeta) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DpaiDeploymentTaskMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *DpaiDeploymentTaskMeta) Reset() {
	*x = DpaiDeploymentTaskMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskMeta) ProtoMessage() {}

func (x *DpaiDeploymentTaskMeta) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskMeta.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskMeta) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{2}
}

func (x *DpaiDeploymentTaskMeta) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DpaiDeploymentTaskMeta) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DpaiSecretReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretName    string `protobuf:"bytes,1,opt,name=secretName,proto3" json:"secretName,omitempty"`
	SecretKeyName string `protobuf:"bytes,2,opt,name=secretKeyName,proto3" json:"secretKeyName,omitempty"`
}

func (x *DpaiSecretReference) Reset() {
	*x = DpaiSecretReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiSecretReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiSecretReference) ProtoMessage() {}

func (x *DpaiSecretReference) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiSecretReference.ProtoReflect.Descriptor instead.
func (*DpaiSecretReference) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{3}
}

func (x *DpaiSecretReference) GetSecretName() string {
	if x != nil {
		return x.SecretName
	}
	return ""
}

func (x *DpaiSecretReference) GetSecretKeyName() string {
	if x != nil {
		return x.SecretKeyName
	}
	return ""
}

type DpaiImageReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repository string `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	Tag        string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *DpaiImageReference) Reset() {
	*x = DpaiImageReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiImageReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiImageReference) ProtoMessage() {}

func (x *DpaiImageReference) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiImageReference.ProtoReflect.Descriptor instead.
func (*DpaiImageReference) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{4}
}

func (x *DpaiImageReference) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *DpaiImageReference) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type DpaiChartReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoUrl   string `protobuf:"bytes,1,opt,name=repoUrl,proto3" json:"repoUrl,omitempty"`
	ChartName string `protobuf:"bytes,2,opt,name=chartName,proto3" json:"chartName,omitempty"`
	Version   string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	RepoName  string `protobuf:"bytes,4,opt,name=repoName,proto3" json:"repoName,omitempty"`
	Username  string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	SecretKey string `protobuf:"bytes,6,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
}

func (x *DpaiChartReference) Reset() {
	*x = DpaiChartReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiChartReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiChartReference) ProtoMessage() {}

func (x *DpaiChartReference) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiChartReference.ProtoReflect.Descriptor instead.
func (*DpaiChartReference) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{5}
}

func (x *DpaiChartReference) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *DpaiChartReference) GetChartName() string {
	if x != nil {
		return x.ChartName
	}
	return ""
}

func (x *DpaiChartReference) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DpaiChartReference) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *DpaiChartReference) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DpaiChartReference) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type DpaiDeploymentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State       DpaiDeploymentState `protobuf:"varint,1,opt,name=state,proto3,enum=proto.DpaiDeploymentState" json:"state,omitempty"`
	DisplayName string              `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	Message     string              `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DpaiDeploymentStatus) Reset() {
	*x = DpaiDeploymentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentStatus) ProtoMessage() {}

func (x *DpaiDeploymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentStatus.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentStatus) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{6}
}

func (x *DpaiDeploymentStatus) GetState() DpaiDeploymentState {
	if x != nil {
		return x.State
	}
	return DpaiDeploymentState_DPAI_DEPLOYMENT_STATE_UNSPECIFIED
}

func (x *DpaiDeploymentStatus) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *DpaiDeploymentStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// deployments
type DpaiDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId     string                        `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	ServiceId       string                        `protobuf:"bytes,3,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ServiceType     DpaiServiceType               `protobuf:"varint,4,opt,name=serviceType,proto3,enum=proto.DpaiServiceType" json:"serviceType,omitempty"`
	ChangeIndicator DpaiDeploymentChangeIndicator `protobuf:"varint,5,opt,name=changeIndicator,proto3,enum=proto.DpaiDeploymentChangeIndicator" json:"changeIndicator,omitempty"`
	Input           []byte                        `protobuf:"bytes,6,opt,name=input,proto3" json:"input,omitempty"`
	Output          []byte                        `protobuf:"bytes,7,opt,name=output,proto3" json:"output,omitempty"`
	Status          *DpaiDeploymentStatus         `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMessage    string                        `protobuf:"bytes,9,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	Metadata        *DpaiDeploymentMeta           `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CloudAccountId  string                        `protobuf:"bytes,11,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiDeployment) Reset() {
	*x = DpaiDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeployment) ProtoMessage() {}

func (x *DpaiDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeployment.ProtoReflect.Descriptor instead.
func (*DpaiDeployment) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{7}
}

func (x *DpaiDeployment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiDeployment) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiDeployment) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *DpaiDeployment) GetServiceType() DpaiServiceType {
	if x != nil {
		return x.ServiceType
	}
	return DpaiServiceType_DPAI_SERVICE_TYPE_UNSPECIFIED
}

func (x *DpaiDeployment) GetChangeIndicator() DpaiDeploymentChangeIndicator {
	if x != nil {
		return x.ChangeIndicator
	}
	return DpaiDeploymentChangeIndicator_DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED
}

func (x *DpaiDeployment) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *DpaiDeployment) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *DpaiDeployment) GetStatus() *DpaiDeploymentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DpaiDeployment) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DpaiDeployment) GetMetadata() *DpaiDeploymentMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DpaiDeployment) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiDeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string                `protobuf:"bytes,1,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
	Status       *DpaiDeploymentStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DpaiDeploymentResponse) Reset() {
	*x = DpaiDeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentResponse) ProtoMessage() {}

func (x *DpaiDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentResponse.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{8}
}

func (x *DpaiDeploymentResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DpaiDeploymentResponse) GetStatus() *DpaiDeploymentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type DpaiDeploymentCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId  string                        `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	WorkspaceId     string                        `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	ServiceId       string                        `protobuf:"bytes,3,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ServiceType     DpaiServiceType               `protobuf:"varint,4,opt,name=serviceType,proto3,enum=proto.DpaiServiceType" json:"serviceType,omitempty"`
	ChangeIndicator DpaiDeploymentChangeIndicator `protobuf:"varint,5,opt,name=changeIndicator,proto3,enum=proto.DpaiDeploymentChangeIndicator" json:"changeIndicator,omitempty"`
	CreatedBy       string                        `protobuf:"bytes,6,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	Input           []byte                        `protobuf:"bytes,7,opt,name=input,proto3" json:"input,omitempty"`
	DeploymentId    string                        `protobuf:"bytes,8,opt,name=DeploymentId,proto3" json:"DeploymentId,omitempty"`
}

func (x *DpaiDeploymentCreateRequest) Reset() {
	*x = DpaiDeploymentCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentCreateRequest) ProtoMessage() {}

func (x *DpaiDeploymentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentCreateRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentCreateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{9}
}

func (x *DpaiDeploymentCreateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *DpaiDeploymentCreateRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiDeploymentCreateRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *DpaiDeploymentCreateRequest) GetServiceType() DpaiServiceType {
	if x != nil {
		return x.ServiceType
	}
	return DpaiServiceType_DPAI_SERVICE_TYPE_UNSPECIFIED
}

func (x *DpaiDeploymentCreateRequest) GetChangeIndicator() DpaiDeploymentChangeIndicator {
	if x != nil {
		return x.ChangeIndicator
	}
	return DpaiDeploymentChangeIndicator_DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED
}

func (x *DpaiDeploymentCreateRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *DpaiDeploymentCreateRequest) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *DpaiDeploymentCreateRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type DpaiDeploymentCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
}

func (x *DpaiDeploymentCreateResponse) Reset() {
	*x = DpaiDeploymentCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentCreateResponse) ProtoMessage() {}

func (x *DpaiDeploymentCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentCreateResponse.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentCreateResponse) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{10}
}

func (x *DpaiDeploymentCreateResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type DpaiDeploymentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId     string                        `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	WorkspaceId        string                        `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	ServiceId          string                        `protobuf:"bytes,3,opt,name=serviceId,proto3" json:"serviceId,omitempty"`
	ServiceType        DpaiServiceType               `protobuf:"varint,4,opt,name=serviceType,proto3,enum=proto.DpaiServiceType" json:"serviceType,omitempty"`
	ChangeIndicator    DpaiDeploymentChangeIndicator `protobuf:"varint,5,opt,name=changeIndicator,proto3,enum=proto.DpaiDeploymentChangeIndicator" json:"changeIndicator,omitempty"`
	ParentDeploymentId string                        `protobuf:"bytes,6,opt,name=parentDeploymentId,proto3" json:"parentDeploymentId,omitempty"`
	Offset             int64                         `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit              int64                         `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *DpaiDeploymentListRequest) Reset() {
	*x = DpaiDeploymentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentListRequest) ProtoMessage() {}

func (x *DpaiDeploymentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentListRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentListRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{11}
}

func (x *DpaiDeploymentListRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *DpaiDeploymentListRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiDeploymentListRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *DpaiDeploymentListRequest) GetServiceType() DpaiServiceType {
	if x != nil {
		return x.ServiceType
	}
	return DpaiServiceType_DPAI_SERVICE_TYPE_UNSPECIFIED
}

func (x *DpaiDeploymentListRequest) GetChangeIndicator() DpaiDeploymentChangeIndicator {
	if x != nil {
		return x.ChangeIndicator
	}
	return DpaiDeploymentChangeIndicator_DPAI_DEPLOYMENT_CHANGE_INDICATOR_UNSPECIFIED
}

func (x *DpaiDeploymentListRequest) GetParentDeploymentId() string {
	if x != nil {
		return x.ParentDeploymentId
	}
	return ""
}

func (x *DpaiDeploymentListRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DpaiDeploymentListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DpaiDeploymentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data         []*DpaiDeployment `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	PrevOffset   int64             `protobuf:"varint,2,opt,name=prevOffset,proto3" json:"prevOffset,omitempty"`
	CurrOffset   int64             `protobuf:"varint,3,opt,name=currOffset,proto3" json:"currOffset,omitempty"`
	NextOffset   int64             `protobuf:"varint,4,opt,name=nextOffset,proto3" json:"nextOffset,omitempty"`
	LastOffset   int64             `protobuf:"varint,5,opt,name=lastOffset,proto3" json:"lastOffset,omitempty"`
	Limit        int64             `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalRecords int64             `protobuf:"varint,7,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
}

func (x *DpaiDeploymentListResponse) Reset() {
	*x = DpaiDeploymentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentListResponse) ProtoMessage() {}

func (x *DpaiDeploymentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentListResponse.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentListResponse) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{12}
}

func (x *DpaiDeploymentListResponse) GetData() []*DpaiDeployment {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DpaiDeploymentListResponse) GetPrevOffset() int64 {
	if x != nil {
		return x.PrevOffset
	}
	return 0
}

func (x *DpaiDeploymentListResponse) GetCurrOffset() int64 {
	if x != nil {
		return x.CurrOffset
	}
	return 0
}

func (x *DpaiDeploymentListResponse) GetNextOffset() int64 {
	if x != nil {
		return x.NextOffset
	}
	return 0
}

func (x *DpaiDeploymentListResponse) GetLastOffset() int64 {
	if x != nil {
		return x.LastOffset
	}
	return 0
}

func (x *DpaiDeploymentListResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DpaiDeploymentListResponse) GetTotalRecords() int64 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type DpaiDeploymentGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiDeploymentGetRequest) Reset() {
	*x = DpaiDeploymentGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentGetRequest) ProtoMessage() {}

func (x *DpaiDeploymentGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentGetRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentGetRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{13}
}

func (x *DpaiDeploymentGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiDeploymentGetRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiDeploymentUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status         *DpaiDeploymentStatus  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CloudAccountId string                 `protobuf:"bytes,5,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiDeploymentUpdateRequest) Reset() {
	*x = DpaiDeploymentUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentUpdateRequest) ProtoMessage() {}

func (x *DpaiDeploymentUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentUpdateRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentUpdateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{14}
}

func (x *DpaiDeploymentUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiDeploymentUpdateRequest) GetStatus() *DpaiDeploymentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DpaiDeploymentUpdateRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DpaiDeploymentUpdateRequest) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DpaiDeploymentUpdateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiDeploymentDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiDeploymentDeleteRequest) Reset() {
	*x = DpaiDeploymentDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentDeleteRequest) ProtoMessage() {}

func (x *DpaiDeploymentDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentDeleteRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentDeleteRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{15}
}

func (x *DpaiDeploymentDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiDeploymentDeleteRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiDeploymentDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *DpaiDeploymentDeleteResponse) Reset() {
	*x = DpaiDeploymentDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentDeleteResponse) ProtoMessage() {}

func (x *DpaiDeploymentDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentDeleteResponse.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentDeleteResponse) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{16}
}

func (x *DpaiDeploymentDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DpaiDeploymentDeleteResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Micro deployments
type DpaiDeploymentTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeploymentId string                  `protobuf:"bytes,2,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
	Name         string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description  string                  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status       *DpaiDeploymentStatus   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMessage string                  `protobuf:"bytes,6,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	Input        []byte                  `protobuf:"bytes,7,opt,name=input,proto3" json:"input,omitempty"`
	Output       []byte                  `protobuf:"bytes,8,opt,name=output,proto3" json:"output,omitempty"`
	Metadata     *DpaiDeploymentTaskMeta `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *DpaiDeploymentTask) Reset() {
	*x = DpaiDeploymentTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTask) ProtoMessage() {}

func (x *DpaiDeploymentTask) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTask.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTask) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{17}
}

func (x *DpaiDeploymentTask) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiDeploymentTask) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DpaiDeploymentTask) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiDeploymentTask) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiDeploymentTask) GetStatus() *DpaiDeploymentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DpaiDeploymentTask) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DpaiDeploymentTask) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *DpaiDeploymentTask) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *DpaiDeploymentTask) GetMetadata() *DpaiDeploymentTaskMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DpaiDeploymentTaskCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId   string `protobuf:"bytes,1,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CloudAccountId string `protobuf:"bytes,4,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiDeploymentTaskCreateRequest) Reset() {
	*x = DpaiDeploymentTaskCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskCreateRequest) ProtoMessage() {}

func (x *DpaiDeploymentTaskCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskCreateRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskCreateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{18}
}

func (x *DpaiDeploymentTaskCreateRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DpaiDeploymentTaskCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiDeploymentTaskCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiDeploymentTaskCreateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiDeploymentTaskCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpaiDeploymentTaskId string `protobuf:"bytes,1,opt,name=dpaiDeploymentTaskId,proto3" json:"dpaiDeploymentTaskId,omitempty"`
}

func (x *DpaiDeploymentTaskCreateResponse) Reset() {
	*x = DpaiDeploymentTaskCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskCreateResponse) ProtoMessage() {}

func (x *DpaiDeploymentTaskCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskCreateResponse.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskCreateResponse) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{19}
}

func (x *DpaiDeploymentTaskCreateResponse) GetDpaiDeploymentTaskId() string {
	if x != nil {
		return x.DpaiDeploymentTaskId
	}
	return ""
}

type DpaiDeploymentTaskListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId   string `protobuf:"bytes,1,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiDeploymentTaskListRequest) Reset() {
	*x = DpaiDeploymentTaskListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskListRequest) ProtoMessage() {}

func (x *DpaiDeploymentTaskListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskListRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskListRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{20}
}

func (x *DpaiDeploymentTaskListRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DpaiDeploymentTaskListRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiDeploymentTaskListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*DpaiDeploymentTask `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	HasMore   bool                  `protobuf:"varint,2,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	NextToken string                `protobuf:"bytes,3,opt,name=nextToken,proto3" json:"nextToken,omitempty"`
	PrevToken string                `protobuf:"bytes,4,opt,name=prevToken,proto3" json:"prevToken,omitempty"`
}

func (x *DpaiDeploymentTaskListResponse) Reset() {
	*x = DpaiDeploymentTaskListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskListResponse) ProtoMessage() {}

func (x *DpaiDeploymentTaskListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskListResponse.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskListResponse) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{21}
}

func (x *DpaiDeploymentTaskListResponse) GetData() []*DpaiDeploymentTask {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DpaiDeploymentTaskListResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *DpaiDeploymentTaskListResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

func (x *DpaiDeploymentTaskListResponse) GetPrevToken() string {
	if x != nil {
		return x.PrevToken
	}
	return ""
}

type DpaiDeploymentTaskGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeploymentId   string `protobuf:"bytes,2,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
	CloudAccountId string `protobuf:"bytes,3,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiDeploymentTaskGetRequest) Reset() {
	*x = DpaiDeploymentTaskGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskGetRequest) ProtoMessage() {}

func (x *DpaiDeploymentTaskGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskGetRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskGetRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{22}
}

func (x *DpaiDeploymentTaskGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiDeploymentTaskGetRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DpaiDeploymentTaskGetRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiDeploymentTaskGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpaiDeploymentTask *DpaiDeploymentTask `protobuf:"bytes,1,opt,name=dpaiDeploymentTask,proto3" json:"dpaiDeploymentTask,omitempty"`
}

func (x *DpaiDeploymentTaskGetResponse) Reset() {
	*x = DpaiDeploymentTaskGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskGetResponse) ProtoMessage() {}

func (x *DpaiDeploymentTaskGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskGetResponse.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskGetResponse) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{23}
}

func (x *DpaiDeploymentTaskGetResponse) GetDpaiDeploymentTask() *DpaiDeploymentTask {
	if x != nil {
		return x.DpaiDeploymentTask
	}
	return nil
}

type DpaiDeploymentTaskUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status         *DpaiDeploymentStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ErrorMessage   string                `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	DeploymentId   string                `protobuf:"bytes,4,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
	CloudAccountId string                `protobuf:"bytes,5,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiDeploymentTaskUpdateRequest) Reset() {
	*x = DpaiDeploymentTaskUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskUpdateRequest) ProtoMessage() {}

func (x *DpaiDeploymentTaskUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskUpdateRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskUpdateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{24}
}

func (x *DpaiDeploymentTaskUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiDeploymentTaskUpdateRequest) GetStatus() *DpaiDeploymentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DpaiDeploymentTaskUpdateRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DpaiDeploymentTaskUpdateRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DpaiDeploymentTaskUpdateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiDeploymentTaskUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DpaiDeploymentTask *DpaiDeploymentTask `protobuf:"bytes,1,opt,name=dpaiDeploymentTask,proto3" json:"dpaiDeploymentTask,omitempty"`
}

func (x *DpaiDeploymentTaskUpdateResponse) Reset() {
	*x = DpaiDeploymentTaskUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskUpdateResponse) ProtoMessage() {}

func (x *DpaiDeploymentTaskUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskUpdateResponse.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskUpdateResponse) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{25}
}

func (x *DpaiDeploymentTaskUpdateResponse) GetDpaiDeploymentTask() *DpaiDeploymentTask {
	if x != nil {
		return x.DpaiDeploymentTask
	}
	return nil
}

type DpaiDeploymentTaskDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeploymentId   string `protobuf:"bytes,2,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
	CloudAccountId string `protobuf:"bytes,3,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiDeploymentTaskDeleteRequest) Reset() {
	*x = DpaiDeploymentTaskDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskDeleteRequest) ProtoMessage() {}

func (x *DpaiDeploymentTaskDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskDeleteRequest.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskDeleteRequest) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{26}
}

func (x *DpaiDeploymentTaskDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiDeploymentTaskDeleteRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DpaiDeploymentTaskDeleteRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiDeploymentTaskDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *DpaiDeploymentTaskDeleteResponse) Reset() {
	*x = DpaiDeploymentTaskDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_deployment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiDeploymentTaskDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiDeploymentTaskDeleteResponse) ProtoMessage() {}

func (x *DpaiDeploymentTaskDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_deployment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiDeploymentTaskDeleteResponse.ProtoReflect.Descriptor instead.
func (*DpaiDeploymentTaskDeleteResponse) Descriptor() ([]byte, []int) {
	return file_dpai_deployment_proto_rawDescGZIP(), []int{27}
}

func (x *DpaiDeploymentTaskDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DpaiDeploymentTaskDeleteResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_dpai_deployment_proto protoreflect.FileDescriptor

var file_dpai_deployment_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x70, 0x61, 0x69, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x08, 0x44, 0x70, 0x61, 0x69, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8c, 0x01, 0x0a,
	0x16, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5b, 0x0a, 0x13, 0x44,
	0x70, 0x61, 0x69, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x44, 0x70, 0x61, 0x69,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x22, 0xbc, 0x01, 0x0a, 0x12, 0x44, 0x70, 0x61, 0x69, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x55, 0x72,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x22,
	0x84, 0x01, 0x0a, 0x14, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd8, 0x03, 0x0a, 0x0e, 0x44, 0x70, 0x61, 0x69, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08,
	0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x71, 0x0a, 0x16, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xef, 0x02, 0x0a, 0x1b, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd,
	0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e,
	0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1c, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xf3, 0x02, 0x0a, 0x19, 0x44,
	0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x81, 0x02, 0x0a, 0x1a, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72,
	0x65, 0x76, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x72, 0x65, 0x76, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75,
	0x72, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x75, 0x72, 0x72, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65,
	0x78, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6e, 0x65, 0x78, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x18, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01,
	0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xf0, 0x01, 0x0a, 0x1b, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b,
	0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1b, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02,
	0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x5c, 0x0a, 0x1c, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xc0, 0x02, 0x0a, 0x12, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xab, 0x01, 0x0a, 0x1f, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08,
	0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x20, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x1d, 0x44, 0x70, 0x61,
	0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa5,
	0x01, 0x0a, 0x1e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65,
	0x76, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x1c, 0x44, 0x70, 0x61, 0x69, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x1d, 0x44,
	0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x12,
	0x64, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x12, 0x64, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x22, 0xde, 0x01, 0x0a, 0x1f, 0x44, 0x70, 0x61, 0x69,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x20, 0x44, 0x70, 0x61, 0x69,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x12,
	0x64, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x12, 0x64, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x85, 0x01, 0x0a, 0x1f, 0x44, 0x70, 0x61, 0x69,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x60, 0x0a, 0x20, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2a, 0xb9, 0x01, 0x0a, 0x1d, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x2c, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x44, 0x45, 0x50, 0x4c,
	0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x49, 0x4e,
	0x44, 0x49, 0x43, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x50, 0x41, 0x49, 0x5f,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x50, 0x41, 0x49,
	0x5f, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x50,
	0x41, 0x49, 0x5f, 0x52, 0x45, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x44,
	0x50, 0x41, 0x49, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x10, 0x06, 0x2a, 0x91, 0x02,
	0x0a, 0x13, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x44, 0x45,
	0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x44, 0x50, 0x41, 0x49, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x50, 0x41, 0x49, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x44,
	0x50, 0x41, 0x49, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f,
	0x55, 0x50, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x50,
	0x41, 0x49, 0x5f, 0x55, 0x50, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x09, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x55, 0x50, 0x53,
	0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x0a, 0x2a, 0x8b, 0x01, 0x0a, 0x0f, 0x44, 0x70, 0x61, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x50, 0x41, 0x49, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x50, 0x41, 0x49,
	0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x50, 0x41, 0x49, 0x5f, 0x48, 0x4d, 0x53, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x50,
	0x41, 0x49, 0x5f, 0x53, 0x50, 0x41, 0x52, 0x4b, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x50,
	0x41, 0x49, 0x5f, 0x41, 0x49, 0x52, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d,
	0x44, 0x50, 0x41, 0x49, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x10, 0x05, 0x32,
	0xb2, 0x06, 0x0a, 0x15, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa7, 0x01, 0x0a, 0x14, 0x44, 0x70,
	0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x38, 0x22, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a,
	0x02, 0x08, 0x01, 0x12, 0xf0, 0x01, 0x0a, 0x12, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x94, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x85, 0x01, 0x12, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70,
	0x61, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5a, 0x4e,
	0x12, 0x4c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x7d, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0xaa, 0xdd,
	0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0x95, 0x01, 0x0a, 0x11, 0x44, 0x70, 0x61, 0x69, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x12, 0x38, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f,
	0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d,
	0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0xa9,
	0x01, 0x0a, 0x14, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x48, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x2a, 0x38, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61,
	0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0x38, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x32, 0x89, 0x08, 0x0a, 0x19, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xc8, 0x01, 0x0a, 0x18, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4d, 0x22, 0x48, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61,
	0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0xbf, 0x01,
	0x0a, 0x16, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4a, 0x12, 0x48, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x7d, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12,
	0xc1, 0x01, 0x0a, 0x15, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f, 0x12, 0x4d, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f,
	0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d,
	0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x7d,
	0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a,
	0x02, 0x08, 0x01, 0x12, 0xcd, 0x01, 0x0a, 0x18, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x52, 0x32, 0x4d, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70,
	0x61, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a,
	0x02, 0x08, 0x01, 0x12, 0xca, 0x01, 0x0a, 0x18, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f, 0x2a, 0x4d, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70,
	0x61, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01,
	0x42, 0x5f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x64, 0x65, 0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x69, 0x64, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x62, 0xaa, 0xdd, 0x1b, 0x06, 0x12, 0x04, 0x64, 0x70, 0x61, 0x69, 0xaa, 0xdd, 0x1b, 0x02, 0x08,
	0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dpai_deployment_proto_rawDescOnce sync.Once
	file_dpai_deployment_proto_rawDescData = file_dpai_deployment_proto_rawDesc
)

func file_dpai_deployment_proto_rawDescGZIP() []byte {
	file_dpai_deployment_proto_rawDescOnce.Do(func() {
		file_dpai_deployment_proto_rawDescData = protoimpl.X.CompressGZIP(file_dpai_deployment_proto_rawDescData)
	})
	return file_dpai_deployment_proto_rawDescData
}

var file_dpai_deployment_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_dpai_deployment_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_dpai_deployment_proto_goTypes = []interface{}{
	(DpaiDeploymentChangeIndicator)(0),       // 0: proto.DpaiDeploymentChangeIndicator
	(DpaiDeploymentState)(0),                 // 1: proto.DpaiDeploymentState
	(DpaiServiceType)(0),                     // 2: proto.DpaiServiceType
	(*DpaiMeta)(nil),                         // 3: proto.DpaiMeta
	(*DpaiDeploymentMeta)(nil),               // 4: proto.DpaiDeploymentMeta
	(*DpaiDeploymentTaskMeta)(nil),           // 5: proto.DpaiDeploymentTaskMeta
	(*DpaiSecretReference)(nil),              // 6: proto.DpaiSecretReference
	(*DpaiImageReference)(nil),               // 7: proto.DpaiImageReference
	(*DpaiChartReference)(nil),               // 8: proto.DpaiChartReference
	(*DpaiDeploymentStatus)(nil),             // 9: proto.DpaiDeploymentStatus
	(*DpaiDeployment)(nil),                   // 10: proto.DpaiDeployment
	(*DpaiDeploymentResponse)(nil),           // 11: proto.DpaiDeploymentResponse
	(*DpaiDeploymentCreateRequest)(nil),      // 12: proto.DpaiDeploymentCreateRequest
	(*DpaiDeploymentCreateResponse)(nil),     // 13: proto.DpaiDeploymentCreateResponse
	(*DpaiDeploymentListRequest)(nil),        // 14: proto.DpaiDeploymentListRequest
	(*DpaiDeploymentListResponse)(nil),       // 15: proto.DpaiDeploymentListResponse
	(*DpaiDeploymentGetRequest)(nil),         // 16: proto.DpaiDeploymentGetRequest
	(*DpaiDeploymentUpdateRequest)(nil),      // 17: proto.DpaiDeploymentUpdateRequest
	(*DpaiDeploymentDeleteRequest)(nil),      // 18: proto.DpaiDeploymentDeleteRequest
	(*DpaiDeploymentDeleteResponse)(nil),     // 19: proto.DpaiDeploymentDeleteResponse
	(*DpaiDeploymentTask)(nil),               // 20: proto.DpaiDeploymentTask
	(*DpaiDeploymentTaskCreateRequest)(nil),  // 21: proto.DpaiDeploymentTaskCreateRequest
	(*DpaiDeploymentTaskCreateResponse)(nil), // 22: proto.DpaiDeploymentTaskCreateResponse
	(*DpaiDeploymentTaskListRequest)(nil),    // 23: proto.DpaiDeploymentTaskListRequest
	(*DpaiDeploymentTaskListResponse)(nil),   // 24: proto.DpaiDeploymentTaskListResponse
	(*DpaiDeploymentTaskGetRequest)(nil),     // 25: proto.DpaiDeploymentTaskGetRequest
	(*DpaiDeploymentTaskGetResponse)(nil),    // 26: proto.DpaiDeploymentTaskGetResponse
	(*DpaiDeploymentTaskUpdateRequest)(nil),  // 27: proto.DpaiDeploymentTaskUpdateRequest
	(*DpaiDeploymentTaskUpdateResponse)(nil), // 28: proto.DpaiDeploymentTaskUpdateResponse
	(*DpaiDeploymentTaskDeleteRequest)(nil),  // 29: proto.DpaiDeploymentTaskDeleteRequest
	(*DpaiDeploymentTaskDeleteResponse)(nil), // 30: proto.DpaiDeploymentTaskDeleteResponse
	(*timestamppb.Timestamp)(nil),            // 31: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                    // 32: google.protobuf.Empty
}
var file_dpai_deployment_proto_depIdxs = []int32{
	31, // 0: proto.DpaiMeta.createdAt:type_name -> google.protobuf.Timestamp
	31, // 1: proto.DpaiMeta.updatedAt:type_name -> google.protobuf.Timestamp
	31, // 2: proto.DpaiDeploymentMeta.createdAt:type_name -> google.protobuf.Timestamp
	31, // 3: proto.DpaiDeploymentMeta.updatedAt:type_name -> google.protobuf.Timestamp
	31, // 4: proto.DpaiDeploymentTaskMeta.createdAt:type_name -> google.protobuf.Timestamp
	31, // 5: proto.DpaiDeploymentTaskMeta.updatedAt:type_name -> google.protobuf.Timestamp
	1,  // 6: proto.DpaiDeploymentStatus.state:type_name -> proto.DpaiDeploymentState
	2,  // 7: proto.DpaiDeployment.serviceType:type_name -> proto.DpaiServiceType
	0,  // 8: proto.DpaiDeployment.changeIndicator:type_name -> proto.DpaiDeploymentChangeIndicator
	9,  // 9: proto.DpaiDeployment.status:type_name -> proto.DpaiDeploymentStatus
	4,  // 10: proto.DpaiDeployment.metadata:type_name -> proto.DpaiDeploymentMeta
	9,  // 11: proto.DpaiDeploymentResponse.status:type_name -> proto.DpaiDeploymentStatus
	2,  // 12: proto.DpaiDeploymentCreateRequest.serviceType:type_name -> proto.DpaiServiceType
	0,  // 13: proto.DpaiDeploymentCreateRequest.changeIndicator:type_name -> proto.DpaiDeploymentChangeIndicator
	2,  // 14: proto.DpaiDeploymentListRequest.serviceType:type_name -> proto.DpaiServiceType
	0,  // 15: proto.DpaiDeploymentListRequest.changeIndicator:type_name -> proto.DpaiDeploymentChangeIndicator
	10, // 16: proto.DpaiDeploymentListResponse.data:type_name -> proto.DpaiDeployment
	9,  // 17: proto.DpaiDeploymentUpdateRequest.status:type_name -> proto.DpaiDeploymentStatus
	31, // 18: proto.DpaiDeploymentUpdateRequest.updatedAt:type_name -> google.protobuf.Timestamp
	9,  // 19: proto.DpaiDeploymentTask.status:type_name -> proto.DpaiDeploymentStatus
	5,  // 20: proto.DpaiDeploymentTask.metadata:type_name -> proto.DpaiDeploymentTaskMeta
	20, // 21: proto.DpaiDeploymentTaskListResponse.data:type_name -> proto.DpaiDeploymentTask
	20, // 22: proto.DpaiDeploymentTaskGetResponse.dpaiDeploymentTask:type_name -> proto.DpaiDeploymentTask
	9,  // 23: proto.DpaiDeploymentTaskUpdateRequest.status:type_name -> proto.DpaiDeploymentStatus
	20, // 24: proto.DpaiDeploymentTaskUpdateResponse.dpaiDeploymentTask:type_name -> proto.DpaiDeploymentTask
	12, // 25: proto.DpaiDeploymentService.DpaiDeploymentCreate:input_type -> proto.DpaiDeploymentCreateRequest
	14, // 26: proto.DpaiDeploymentService.DpaiDeploymentList:input_type -> proto.DpaiDeploymentListRequest
	16, // 27: proto.DpaiDeploymentService.DpaiDeploymentGet:input_type -> proto.DpaiDeploymentGetRequest
	18, // 28: proto.DpaiDeploymentService.DpaiDeploymentDelete:input_type -> proto.DpaiDeploymentDeleteRequest
	32, // 29: proto.DpaiDeploymentService.Ping:input_type -> google.protobuf.Empty
	21, // 30: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskCreate:input_type -> proto.DpaiDeploymentTaskCreateRequest
	23, // 31: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskList:input_type -> proto.DpaiDeploymentTaskListRequest
	25, // 32: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskGet:input_type -> proto.DpaiDeploymentTaskGetRequest
	27, // 33: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskUpdate:input_type -> proto.DpaiDeploymentTaskUpdateRequest
	29, // 34: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskDelete:input_type -> proto.DpaiDeploymentTaskDeleteRequest
	13, // 35: proto.DpaiDeploymentService.DpaiDeploymentCreate:output_type -> proto.DpaiDeploymentCreateResponse
	15, // 36: proto.DpaiDeploymentService.DpaiDeploymentList:output_type -> proto.DpaiDeploymentListResponse
	10, // 37: proto.DpaiDeploymentService.DpaiDeploymentGet:output_type -> proto.DpaiDeployment
	19, // 38: proto.DpaiDeploymentService.DpaiDeploymentDelete:output_type -> proto.DpaiDeploymentDeleteResponse
	32, // 39: proto.DpaiDeploymentService.Ping:output_type -> google.protobuf.Empty
	22, // 40: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskCreate:output_type -> proto.DpaiDeploymentTaskCreateResponse
	24, // 41: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskList:output_type -> proto.DpaiDeploymentTaskListResponse
	26, // 42: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskGet:output_type -> proto.DpaiDeploymentTaskGetResponse
	28, // 43: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskUpdate:output_type -> proto.DpaiDeploymentTaskUpdateResponse
	30, // 44: proto.DpaiDeploymentTaskService.DpaiDeploymentTaskDelete:output_type -> proto.DpaiDeploymentTaskDeleteResponse
	35, // [35:45] is the sub-list for method output_type
	25, // [25:35] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_dpai_deployment_proto_init() }
func file_dpai_deployment_proto_init() {
	if File_dpai_deployment_proto != nil {
		return
	}
	file_annotations_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dpai_deployment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiSecretReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiImageReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiChartReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_deployment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiDeploymentTaskDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dpai_deployment_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_dpai_deployment_proto_goTypes,
		DependencyIndexes: file_dpai_deployment_proto_depIdxs,
		EnumInfos:         file_dpai_deployment_proto_enumTypes,
		MessageInfos:      file_dpai_deployment_proto_msgTypes,
	}.Build()
	File_dpai_deployment_proto = out.File
	file_dpai_deployment_proto_rawDesc = nil
	file_dpai_deployment_proto_goTypes = nil
	file_dpai_deployment_proto_depIdxs = nil
}
