// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.9
// source: console.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ConsoleInvoiceServiceClient is the client API for ConsoleInvoiceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ConsoleInvoiceServiceClient interface {
	ReadUnbilled(ctx context.Context, in *ConsoleInvoiceUnbilledRequest, opts ...grpc.CallOption) (ConsoleInvoiceService_ReadUnbilledClient, error)
}

type consoleInvoiceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewConsoleInvoiceServiceClient(cc grpc.ClientConnInterface) ConsoleInvoiceServiceClient {
	return &consoleInvoiceServiceClient{cc}
}

func (c *consoleInvoiceServiceClient) ReadUnbilled(ctx context.Context, in *ConsoleInvoiceUnbilledRequest, opts ...grpc.CallOption) (ConsoleInvoiceService_ReadUnbilledClient, error) {
	stream, err := c.cc.NewStream(ctx, &ConsoleInvoiceService_ServiceDesc.Streams[0], "/proto.ConsoleInvoiceService/ReadUnbilled", opts...)
	if err != nil {
		return nil, err
	}
	x := &consoleInvoiceServiceReadUnbilledClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ConsoleInvoiceService_ReadUnbilledClient interface {
	Recv() (*ConsoleInvoiceUnbilledResponse, error)
	grpc.ClientStream
}

type consoleInvoiceServiceReadUnbilledClient struct {
	grpc.ClientStream
}

func (x *consoleInvoiceServiceReadUnbilledClient) Recv() (*ConsoleInvoiceUnbilledResponse, error) {
	m := new(ConsoleInvoiceUnbilledResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ConsoleInvoiceServiceServer is the server API for ConsoleInvoiceService service.
// All implementations must embed UnimplementedConsoleInvoiceServiceServer
// for forward compatibility
type ConsoleInvoiceServiceServer interface {
	ReadUnbilled(*ConsoleInvoiceUnbilledRequest, ConsoleInvoiceService_ReadUnbilledServer) error
	mustEmbedUnimplementedConsoleInvoiceServiceServer()
}

// UnimplementedConsoleInvoiceServiceServer must be embedded to have forward compatible implementations.
type UnimplementedConsoleInvoiceServiceServer struct {
}

func (UnimplementedConsoleInvoiceServiceServer) ReadUnbilled(*ConsoleInvoiceUnbilledRequest, ConsoleInvoiceService_ReadUnbilledServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadUnbilled not implemented")
}
func (UnimplementedConsoleInvoiceServiceServer) mustEmbedUnimplementedConsoleInvoiceServiceServer() {}

// UnsafeConsoleInvoiceServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ConsoleInvoiceServiceServer will
// result in compilation errors.
type UnsafeConsoleInvoiceServiceServer interface {
	mustEmbedUnimplementedConsoleInvoiceServiceServer()
}

func RegisterConsoleInvoiceServiceServer(s grpc.ServiceRegistrar, srv ConsoleInvoiceServiceServer) {
	s.RegisterService(&ConsoleInvoiceService_ServiceDesc, srv)
}

func _ConsoleInvoiceService_ReadUnbilled_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConsoleInvoiceUnbilledRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConsoleInvoiceServiceServer).ReadUnbilled(m, &consoleInvoiceServiceReadUnbilledServer{stream})
}

type ConsoleInvoiceService_ReadUnbilledServer interface {
	Send(*ConsoleInvoiceUnbilledResponse) error
	grpc.ServerStream
}

type consoleInvoiceServiceReadUnbilledServer struct {
	grpc.ServerStream
}

func (x *consoleInvoiceServiceReadUnbilledServer) Send(m *ConsoleInvoiceUnbilledResponse) error {
	return x.ServerStream.SendMsg(m)
}

// ConsoleInvoiceService_ServiceDesc is the grpc.ServiceDesc for ConsoleInvoiceService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ConsoleInvoiceService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ConsoleInvoiceService",
	HandlerType: (*ConsoleInvoiceServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadUnbilled",
			Handler:       _ConsoleInvoiceService_ReadUnbilled_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "console.proto",
}
