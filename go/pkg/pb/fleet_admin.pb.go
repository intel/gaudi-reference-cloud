// This file contains PRIVATE services that are intended for IDC infrastructure (controllers)
// and trusted parties. It is not a part of the public API.
//
// After updating this file, run "make generate".
//
// See:
//  - https://protobuf.dev/programming-guides/proto3/

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: fleet_admin.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchComputeNodePoolsForInstanceSchedulingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *SearchComputeNodePoolsForInstanceSchedulingRequest) Reset() {
	*x = SearchComputeNodePoolsForInstanceSchedulingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleet_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchComputeNodePoolsForInstanceSchedulingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchComputeNodePoolsForInstanceSchedulingRequest) ProtoMessage() {}

func (x *SearchComputeNodePoolsForInstanceSchedulingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleet_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchComputeNodePoolsForInstanceSchedulingRequest.ProtoReflect.Descriptor instead.
func (*SearchComputeNodePoolsForInstanceSchedulingRequest) Descriptor() ([]byte, []int) {
	return file_fleet_admin_proto_rawDescGZIP(), []int{0}
}

func (x *SearchComputeNodePoolsForInstanceSchedulingRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type SearchComputeNodePoolsForInstanceSchedulingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComputeNodePools []*ComputeNodePoolForInstanceScheduling `protobuf:"bytes,1,rep,name=computeNodePools,proto3" json:"computeNodePools,omitempty"`
}

func (x *SearchComputeNodePoolsForInstanceSchedulingResponse) Reset() {
	*x = SearchComputeNodePoolsForInstanceSchedulingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleet_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchComputeNodePoolsForInstanceSchedulingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchComputeNodePoolsForInstanceSchedulingResponse) ProtoMessage() {}

func (x *SearchComputeNodePoolsForInstanceSchedulingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleet_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchComputeNodePoolsForInstanceSchedulingResponse.ProtoReflect.Descriptor instead.
func (*SearchComputeNodePoolsForInstanceSchedulingResponse) Descriptor() ([]byte, []int) {
	return file_fleet_admin_proto_rawDescGZIP(), []int{1}
}

func (x *SearchComputeNodePoolsForInstanceSchedulingResponse) GetComputeNodePools() []*ComputeNodePoolForInstanceScheduling {
	if x != nil {
		return x.ComputeNodePools
	}
	return nil
}

type UpdateComputeNodePoolsForCloudAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId   string                                  `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	ComputeNodePools []*ComputeNodePoolForInstanceScheduling `protobuf:"bytes,2,rep,name=computeNodePools,proto3" json:"computeNodePools,omitempty"`
	CreateAdmin      string                                  `protobuf:"bytes,3,opt,name=createAdmin,proto3" json:"createAdmin,omitempty"`
}

func (x *UpdateComputeNodePoolsForCloudAccountRequest) Reset() {
	*x = UpdateComputeNodePoolsForCloudAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleet_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComputeNodePoolsForCloudAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComputeNodePoolsForCloudAccountRequest) ProtoMessage() {}

func (x *UpdateComputeNodePoolsForCloudAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleet_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComputeNodePoolsForCloudAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateComputeNodePoolsForCloudAccountRequest) Descriptor() ([]byte, []int) {
	return file_fleet_admin_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateComputeNodePoolsForCloudAccountRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *UpdateComputeNodePoolsForCloudAccountRequest) GetComputeNodePools() []*ComputeNodePoolForInstanceScheduling {
	if x != nil {
		return x.ComputeNodePools
	}
	return nil
}

func (x *UpdateComputeNodePoolsForCloudAccountRequest) GetCreateAdmin() string {
	if x != nil {
		return x.CreateAdmin
	}
	return ""
}

type ComputeNodePoolForInstanceScheduling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolId string `protobuf:"bytes,1,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (x *ComputeNodePoolForInstanceScheduling) Reset() {
	*x = ComputeNodePoolForInstanceScheduling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleet_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeNodePoolForInstanceScheduling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeNodePoolForInstanceScheduling) ProtoMessage() {}

func (x *ComputeNodePoolForInstanceScheduling) ProtoReflect() protoreflect.Message {
	mi := &file_fleet_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeNodePoolForInstanceScheduling.ProtoReflect.Descriptor instead.
func (*ComputeNodePoolForInstanceScheduling) Descriptor() ([]byte, []int) {
	return file_fleet_admin_proto_rawDescGZIP(), []int{3}
}

func (x *ComputeNodePoolForInstanceScheduling) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type GetResourcePatchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId        string `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Region           string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AvailabilityZone string `protobuf:"bytes,3,opt,name=availabilityZone,proto3" json:"availabilityZone,omitempty"`
}

func (x *GetResourcePatchesRequest) Reset() {
	*x = GetResourcePatchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleet_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcePatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcePatchesRequest) ProtoMessage() {}

func (x *GetResourcePatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleet_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcePatchesRequest.ProtoReflect.Descriptor instead.
func (*GetResourcePatchesRequest) Descriptor() ([]byte, []int) {
	return file_fleet_admin_proto_rawDescGZIP(), []int{4}
}

func (x *GetResourcePatchesRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *GetResourcePatchesRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetResourcePatchesRequest) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

type ResourcePatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// For VMaaS, this is the K8s node resource name. For BMaaS, this is the Metal3 BareMetalHost resource name
	NodeName string `protobuf:"bytes,1,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	// For BMaaS, this is the namespace of the Metal3 BareMetalHost resource. For VMaaS, this is an empty string
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Group, Version, and Resource for a K8s API resource.
	Gvr *GroupVersionResource `protobuf:"bytes,3,opt,name=gvr,proto3" json:"gvr,omitempty"`
	// Regex which are currently present on the resource for the matching labels.
	OwnedLabelsRegex []string `protobuf:"bytes,4,rep,name=ownedLabelsRegex,proto3" json:"ownedLabelsRegex,omitempty"`
	// Labels to be patched onto the resource
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ResourcePatch) Reset() {
	*x = ResourcePatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleet_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePatch) ProtoMessage() {}

func (x *ResourcePatch) ProtoReflect() protoreflect.Message {
	mi := &file_fleet_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePatch.ProtoReflect.Descriptor instead.
func (*ResourcePatch) Descriptor() ([]byte, []int) {
	return file_fleet_admin_proto_rawDescGZIP(), []int{5}
}

func (x *ResourcePatch) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *ResourcePatch) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourcePatch) GetGvr() *GroupVersionResource {
	if x != nil {
		return x.Gvr
	}
	return nil
}

func (x *ResourcePatch) GetOwnedLabelsRegex() []string {
	if x != nil {
		return x.OwnedLabelsRegex
	}
	return nil
}

func (x *ResourcePatch) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type GetResourcePatchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourcePatches []*ResourcePatch `protobuf:"bytes,1,rep,name=resourcePatches,proto3" json:"resourcePatches,omitempty"`
}

func (x *GetResourcePatchesResponse) Reset() {
	*x = GetResourcePatchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleet_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResourcePatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcePatchesResponse) ProtoMessage() {}

func (x *GetResourcePatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fleet_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcePatchesResponse.ProtoReflect.Descriptor instead.
func (*GetResourcePatchesResponse) Descriptor() ([]byte, []int) {
	return file_fleet_admin_proto_rawDescGZIP(), []int{6}
}

func (x *GetResourcePatchesResponse) GetResourcePatches() []*ResourcePatch {
	if x != nil {
		return x.ResourcePatches
	}
	return nil
}

type ReportNodeStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Collection of statistics for each node.
	SchedulerNodeStatistics []*SchedulerNodeStatistics `protobuf:"bytes,1,rep,name=schedulerNodeStatistics,proto3" json:"schedulerNodeStatistics,omitempty"`
}

func (x *ReportNodeStatisticsRequest) Reset() {
	*x = ReportNodeStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fleet_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportNodeStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportNodeStatisticsRequest) ProtoMessage() {}

func (x *ReportNodeStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fleet_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportNodeStatisticsRequest.ProtoReflect.Descriptor instead.
func (*ReportNodeStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_fleet_admin_proto_rawDescGZIP(), []int{7}
}

func (x *ReportNodeStatisticsRequest) GetSchedulerNodeStatistics() []*SchedulerNodeStatistics {
	if x != nil {
		return x.SchedulerNodeStatistics
	}
	return nil
}

var File_fleet_admin_proto protoreflect.FileDescriptor

var file_fleet_admin_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5c, 0x0a, 0x32,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x33, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x2c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22,
	0x3e, 0x0a, 0x24, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f,
	0x6f, 0x6c, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22,
	0x7d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x99,
	0x02, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x03, 0x67, 0x76,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x03, 0x67, 0x76, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x77, 0x6e,
	0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x67, 0x65, 0x78, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x38, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x77, 0x0a, 0x1b, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x32, 0xb6, 0x05, 0x0a, 0x11, 0x46, 0x6c, 0x65, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xe1, 0x01, 0x0a, 0x2b, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f,
	0x6c, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c,
	0x73, 0x46, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x12, 0x33, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0xb4, 0x01, 0x0a, 0x25,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50,
	0x6f, 0x6f, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x1a, 0x33, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x6e, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x53, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x22, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x71, 0x5a, 0x4d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x69, 0x64,
	0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0xaa, 0xdd, 0x1b, 0x02, 0x08,
	0x02, 0xaa, 0xdd, 0x1b, 0x18, 0x12, 0x16, 0x66, 0x6c, 0x65, 0x65, 0x74, 0x2d, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fleet_admin_proto_rawDescOnce sync.Once
	file_fleet_admin_proto_rawDescData = file_fleet_admin_proto_rawDesc
)

func file_fleet_admin_proto_rawDescGZIP() []byte {
	file_fleet_admin_proto_rawDescOnce.Do(func() {
		file_fleet_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_fleet_admin_proto_rawDescData)
	})
	return file_fleet_admin_proto_rawDescData
}

var file_fleet_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_fleet_admin_proto_goTypes = []interface{}{
	(*SearchComputeNodePoolsForInstanceSchedulingRequest)(nil),  // 0: proto.SearchComputeNodePoolsForInstanceSchedulingRequest
	(*SearchComputeNodePoolsForInstanceSchedulingResponse)(nil), // 1: proto.SearchComputeNodePoolsForInstanceSchedulingResponse
	(*UpdateComputeNodePoolsForCloudAccountRequest)(nil),        // 2: proto.UpdateComputeNodePoolsForCloudAccountRequest
	(*ComputeNodePoolForInstanceScheduling)(nil),                // 3: proto.ComputeNodePoolForInstanceScheduling
	(*GetResourcePatchesRequest)(nil),                           // 4: proto.GetResourcePatchesRequest
	(*ResourcePatch)(nil),                                       // 5: proto.ResourcePatch
	(*GetResourcePatchesResponse)(nil),                          // 6: proto.GetResourcePatchesResponse
	(*ReportNodeStatisticsRequest)(nil),                         // 7: proto.ReportNodeStatisticsRequest
	nil,                                                         // 8: proto.ResourcePatch.LabelsEntry
	(*GroupVersionResource)(nil),                                // 9: proto.GroupVersionResource
	(*SchedulerNodeStatistics)(nil),                             // 10: proto.SchedulerNodeStatistics
	(*emptypb.Empty)(nil),                                       // 11: google.protobuf.Empty
}
var file_fleet_admin_proto_depIdxs = []int32{
	3,  // 0: proto.SearchComputeNodePoolsForInstanceSchedulingResponse.computeNodePools:type_name -> proto.ComputeNodePoolForInstanceScheduling
	3,  // 1: proto.UpdateComputeNodePoolsForCloudAccountRequest.computeNodePools:type_name -> proto.ComputeNodePoolForInstanceScheduling
	9,  // 2: proto.ResourcePatch.gvr:type_name -> proto.GroupVersionResource
	8,  // 3: proto.ResourcePatch.labels:type_name -> proto.ResourcePatch.LabelsEntry
	5,  // 4: proto.GetResourcePatchesResponse.resourcePatches:type_name -> proto.ResourcePatch
	10, // 5: proto.ReportNodeStatisticsRequest.schedulerNodeStatistics:type_name -> proto.SchedulerNodeStatistics
	0,  // 6: proto.FleetAdminService.SearchComputeNodePoolsForInstanceScheduling:input_type -> proto.SearchComputeNodePoolsForInstanceSchedulingRequest
	2,  // 7: proto.FleetAdminService.UpdateComputeNodePoolsForCloudAccount:input_type -> proto.UpdateComputeNodePoolsForCloudAccountRequest
	11, // 8: proto.FleetAdminService.Ping:input_type -> google.protobuf.Empty
	4,  // 9: proto.FleetAdminService.GetResourcePatches:input_type -> proto.GetResourcePatchesRequest
	7,  // 10: proto.FleetAdminService.ReportNodeStatistics:input_type -> proto.ReportNodeStatisticsRequest
	1,  // 11: proto.FleetAdminService.SearchComputeNodePoolsForInstanceScheduling:output_type -> proto.SearchComputeNodePoolsForInstanceSchedulingResponse
	11, // 12: proto.FleetAdminService.UpdateComputeNodePoolsForCloudAccount:output_type -> google.protobuf.Empty
	11, // 13: proto.FleetAdminService.Ping:output_type -> google.protobuf.Empty
	6,  // 14: proto.FleetAdminService.GetResourcePatches:output_type -> proto.GetResourcePatchesResponse
	11, // 15: proto.FleetAdminService.ReportNodeStatistics:output_type -> google.protobuf.Empty
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_fleet_admin_proto_init() }
func file_fleet_admin_proto_init() {
	if File_fleet_admin_proto != nil {
		return
	}
	file_annotations_proto_init()
	file_fleet_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fleet_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchComputeNodePoolsForInstanceSchedulingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleet_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchComputeNodePoolsForInstanceSchedulingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleet_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComputeNodePoolsForCloudAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleet_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeNodePoolForInstanceScheduling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleet_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcePatchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleet_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleet_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResourcePatchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fleet_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportNodeStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fleet_admin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fleet_admin_proto_goTypes,
		DependencyIndexes: file_fleet_admin_proto_depIdxs,
		MessageInfos:      file_fleet_admin_proto_msgTypes,
	}.Build()
	File_fleet_admin_proto = out.File
	file_fleet_admin_proto_rawDesc = nil
	file_fleet_admin_proto_goTypes = nil
	file_fleet_admin_proto_depIdxs = nil
}
