// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: maas-gateway.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListSupportedModels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Models []*Model `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
}

func (x *ListSupportedModels) Reset() {
	*x = ListSupportedModels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maas_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSupportedModels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupportedModels) ProtoMessage() {}

func (x *ListSupportedModels) ProtoReflect() protoreflect.Message {
	mi := &file_maas_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupportedModels.ProtoReflect.Descriptor instead.
func (*ListSupportedModels) Descriptor() ([]byte, []int) {
	return file_maas_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *ListSupportedModels) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

type MaasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model          string                     `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Request        *MaasGenerateStreamRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	CloudAccountId string                     `protobuf:"bytes,3,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	ProductName    string                     `protobuf:"bytes,4,opt,name=productName,proto3" json:"productName,omitempty"`
	ProductId      string                     `protobuf:"bytes,5,opt,name=productId,proto3" json:"productId,omitempty"`
}

func (x *MaasRequest) Reset() {
	*x = MaasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maas_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaasRequest) ProtoMessage() {}

func (x *MaasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_maas_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaasRequest.ProtoReflect.Descriptor instead.
func (*MaasRequest) Descriptor() ([]byte, []int) {
	return file_maas_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *MaasRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *MaasRequest) GetRequest() *MaasGenerateStreamRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *MaasRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *MaasRequest) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *MaasRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type MaasGenerateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt string                     `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Params *MaasGenerateRequestParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *MaasGenerateStreamRequest) Reset() {
	*x = MaasGenerateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maas_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaasGenerateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaasGenerateStreamRequest) ProtoMessage() {}

func (x *MaasGenerateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_maas_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaasGenerateStreamRequest.ProtoReflect.Descriptor instead.
func (*MaasGenerateStreamRequest) Descriptor() ([]byte, []int) {
	return file_maas_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *MaasGenerateStreamRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *MaasGenerateStreamRequest) GetParams() *MaasGenerateRequestParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type MaasGenerateRequestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Maximum number of generated tokens
	MaxNewTokens uint32 `protobuf:"varint,1,opt,name=max_new_tokens,json=maxNewTokens,proto3" json:"max_new_tokens,omitempty"`
	// / The value used to module the logits distribution.
	Temperature *float32 `protobuf:"fixed32,2,opt,name=temperature,proto3,oneof" json:"temperature,omitempty"`
}

func (x *MaasGenerateRequestParams) Reset() {
	*x = MaasGenerateRequestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maas_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaasGenerateRequestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaasGenerateRequestParams) ProtoMessage() {}

func (x *MaasGenerateRequestParams) ProtoReflect() protoreflect.Message {
	mi := &file_maas_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaasGenerateRequestParams.ProtoReflect.Descriptor instead.
func (*MaasGenerateRequestParams) Descriptor() ([]byte, []int) {
	return file_maas_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *MaasGenerateRequestParams) GetMaxNewTokens() uint32 {
	if x != nil {
		return x.MaxNewTokens
	}
	return 0
}

func (x *MaasGenerateRequestParams) GetTemperature() float32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

type MaasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *MaasGenerateStreamResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *MaasResponse) Reset() {
	*x = MaasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maas_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaasResponse) ProtoMessage() {}

func (x *MaasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_maas_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaasResponse.ProtoReflect.Descriptor instead.
func (*MaasResponse) Descriptor() ([]byte, []int) {
	return file_maas_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *MaasResponse) GetResponse() *MaasGenerateStreamResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type MaasGenerateStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Generated token
	Token *APIToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// / Most likely tokens
	TopTokens []*APIToken `protobuf:"bytes,2,rep,name=top_tokens,json=topTokens,proto3" json:"top_tokens,omitempty"`
	// / Complete generated text
	// / Only available when the generation is finished
	GeneratedText *string `protobuf:"bytes,3,opt,name=generated_text,json=generatedText,proto3,oneof" json:"generated_text,omitempty"`
	// / Generation details
	// / Only available when the generation is finished
	Details   *StreamDetails `protobuf:"bytes,4,opt,name=details,proto3,oneof" json:"details,omitempty"`
	RequestID *string        `protobuf:"bytes,5,opt,name=requestID,proto3,oneof" json:"requestID,omitempty"`
}

func (x *MaasGenerateStreamResponse) Reset() {
	*x = MaasGenerateStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maas_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaasGenerateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaasGenerateStreamResponse) ProtoMessage() {}

func (x *MaasGenerateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_maas_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaasGenerateStreamResponse.ProtoReflect.Descriptor instead.
func (*MaasGenerateStreamResponse) Descriptor() ([]byte, []int) {
	return file_maas_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *MaasGenerateStreamResponse) GetToken() *APIToken {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *MaasGenerateStreamResponse) GetTopTokens() []*APIToken {
	if x != nil {
		return x.TopTokens
	}
	return nil
}

func (x *MaasGenerateStreamResponse) GetGeneratedText() string {
	if x != nil && x.GeneratedText != nil {
		return *x.GeneratedText
	}
	return ""
}

func (x *MaasGenerateStreamResponse) GetDetails() *StreamDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MaasGenerateStreamResponse) GetRequestID() string {
	if x != nil && x.RequestID != nil {
		return *x.RequestID
	}
	return ""
}

type APIToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Token ID from the model tokenizer
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// / Token text
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// / Logprob
	Logprob *float32 `protobuf:"fixed32,3,opt,name=logprob,proto3,oneof" json:"logprob,omitempty"`
	// / Is the token a special token
	// / Can be used to ignore tokens when concatenating
	Special bool `protobuf:"varint,4,opt,name=special,proto3" json:"special,omitempty"`
}

func (x *APIToken) Reset() {
	*x = APIToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maas_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIToken) ProtoMessage() {}

func (x *APIToken) ProtoReflect() protoreflect.Message {
	mi := &file_maas_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIToken.ProtoReflect.Descriptor instead.
func (*APIToken) Descriptor() ([]byte, []int) {
	return file_maas_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *APIToken) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APIToken) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *APIToken) GetLogprob() float32 {
	if x != nil && x.Logprob != nil {
		return *x.Logprob
	}
	return 0
}

func (x *APIToken) GetSpecial() bool {
	if x != nil {
		return x.Special
	}
	return false
}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelName   string `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	ProductId   string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName string `protobuf:"bytes,3,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_maas_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_maas_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_maas_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *Model) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *Model) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Model) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

var File_maas_gateway_proto protoreflect.FileDescriptor

var file_maas_gateway_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x61, 0x61, 0x73, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x69, 0x6e, 0x66, 0x61, 0x61, 0x73, 0x2d, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x12, 0x24, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0xfb, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x02, 0x18, 0x96,
	0x01, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x44, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x61, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xaa, 0xdd, 0x1b, 0x02, 0x10, 0x01, 0xaa, 0xdd, 0x1b, 0x02, 0x18,
	0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x30, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x19, 0x4d, 0x61, 0x61, 0x73, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x02, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x61, 0x73, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x95, 0x01, 0x0a,
	0x19, 0x4d, 0x61, 0x61, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x0e, 0x6d, 0x61,
	0x78, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x2a, 0x05, 0x10, 0x80, 0x10, 0x28, 0x01, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x42, 0x0f, 0xfa, 0x42, 0x0c, 0x0a, 0x0a, 0x15, 0x00, 0x00, 0x80, 0x3f, 0x2d, 0x00, 0x00,
	0x00, 0x00, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x4d, 0x0a, 0x0c, 0x4d, 0x61, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x61, 0x61, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x1a, 0x4d, 0x61, 0x61, 0x73, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x74, 0x6f, 0x70,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09,
	0x74, 0x6f, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x01, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x22, 0x73, 0x0a, 0x08, 0x41, 0x50,
	0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x6c, 0x6f,
	0x67, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x22,
	0x68, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x8a, 0x02, 0x0a, 0x0b, 0x4d, 0x61,
	0x61, 0x73, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x87, 0x01, 0x0a, 0x0e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x61, 0x61, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08,
	0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x18, 0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x40,
	0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x28, 0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x50,
	0x01, 0x30, 0x01, 0x12, 0x71, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x61, 0x73, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x10, 0x01, 0xaa, 0xdd,
	0x1b, 0x04, 0x0a, 0x02, 0x50, 0x01, 0x42, 0x67, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x69, 0x64, 0x63, 0x2f, 0x67, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x02, 0xaa, 0xdd, 0x1b,
	0x0e, 0x12, 0x0c, 0x4d, 0x61, 0x61, 0x73, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_maas_gateway_proto_rawDescOnce sync.Once
	file_maas_gateway_proto_rawDescData = file_maas_gateway_proto_rawDesc
)

func file_maas_gateway_proto_rawDescGZIP() []byte {
	file_maas_gateway_proto_rawDescOnce.Do(func() {
		file_maas_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_maas_gateway_proto_rawDescData)
	})
	return file_maas_gateway_proto_rawDescData
}

var file_maas_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_maas_gateway_proto_goTypes = []interface{}{
	(*ListSupportedModels)(nil),        // 0: proto.ListSupportedModels
	(*MaasRequest)(nil),                // 1: proto.MaasRequest
	(*MaasGenerateStreamRequest)(nil),  // 2: proto.MaasGenerateStreamRequest
	(*MaasGenerateRequestParams)(nil),  // 3: proto.MaasGenerateRequestParams
	(*MaasResponse)(nil),               // 4: proto.MaasResponse
	(*MaasGenerateStreamResponse)(nil), // 5: proto.MaasGenerateStreamResponse
	(*APIToken)(nil),                   // 6: proto.APIToken
	(*Model)(nil),                      // 7: proto.Model
	(*StreamDetails)(nil),              // 8: proto.StreamDetails
	(*emptypb.Empty)(nil),              // 9: google.protobuf.Empty
}
var file_maas_gateway_proto_depIdxs = []int32{
	7, // 0: proto.ListSupportedModels.models:type_name -> proto.Model
	2, // 1: proto.MaasRequest.request:type_name -> proto.MaasGenerateStreamRequest
	3, // 2: proto.MaasGenerateStreamRequest.params:type_name -> proto.MaasGenerateRequestParams
	5, // 3: proto.MaasResponse.response:type_name -> proto.MaasGenerateStreamResponse
	6, // 4: proto.MaasGenerateStreamResponse.token:type_name -> proto.APIToken
	6, // 5: proto.MaasGenerateStreamResponse.top_tokens:type_name -> proto.APIToken
	8, // 6: proto.MaasGenerateStreamResponse.details:type_name -> proto.StreamDetails
	1, // 7: proto.MaasGateway.GenerateStream:input_type -> proto.MaasRequest
	9, // 8: proto.MaasGateway.GetSupportedModels:input_type -> google.protobuf.Empty
	4, // 9: proto.MaasGateway.GenerateStream:output_type -> proto.MaasResponse
	0, // 10: proto.MaasGateway.GetSupportedModels:output_type -> proto.ListSupportedModels
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_maas_gateway_proto_init() }
func file_maas_gateway_proto_init() {
	if File_maas_gateway_proto != nil {
		return
	}
	file_annotations_proto_init()
	file_infaas_generate_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_maas_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSupportedModels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maas_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maas_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaasGenerateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maas_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaasGenerateRequestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maas_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maas_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaasGenerateStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maas_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_maas_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_maas_gateway_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_maas_gateway_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_maas_gateway_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_maas_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_maas_gateway_proto_goTypes,
		DependencyIndexes: file_maas_gateway_proto_depIdxs,
		MessageInfos:      file_maas_gateway_proto_msgTypes,
	}.Build()
	File_maas_gateway_proto = out.File
	file_maas_gateway_proto_rawDesc = nil
	file_maas_gateway_proto_goTypes = nil
	file_maas_gateway_proto_depIdxs = nil
}
