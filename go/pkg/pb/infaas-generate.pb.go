// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: infaas-generate.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FinishReason int32

const (
	FinishReason_FINISH_REASON_LENGTH        FinishReason = 0
	FinishReason_FINISH_REASON_EOS_TOKEN     FinishReason = 1
	FinishReason_FINISH_REASON_STOP_SEQUENCE FinishReason = 2
)

// Enum value maps for FinishReason.
var (
	FinishReason_name = map[int32]string{
		0: "FINISH_REASON_LENGTH",
		1: "FINISH_REASON_EOS_TOKEN",
		2: "FINISH_REASON_STOP_SEQUENCE",
	}
	FinishReason_value = map[string]int32{
		"FINISH_REASON_LENGTH":        0,
		"FINISH_REASON_EOS_TOKEN":     1,
		"FINISH_REASON_STOP_SEQUENCE": 2,
	}
)

func (x FinishReason) Enum() *FinishReason {
	p := new(FinishReason)
	*p = x
	return p
}

func (x FinishReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FinishReason) Descriptor() protoreflect.EnumDescriptor {
	return file_infaas_generate_proto_enumTypes[0].Descriptor()
}

func (FinishReason) Type() protoreflect.EnumType {
	return &file_infaas_generate_proto_enumTypes[0]
}

func (x FinishReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FinishReason.Descriptor instead.
func (FinishReason) EnumDescriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{0}
}

type GenerateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string                     `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Prompt    string                     `protobuf:"bytes,2,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Params    *GenerateRequestParameters `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *GenerateStreamRequest) Reset() {
	*x = GenerateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateStreamRequest) ProtoMessage() {}

func (x *GenerateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateStreamRequest.ProtoReflect.Descriptor instead.
func (*GenerateStreamRequest) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateStreamRequest) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *GenerateStreamRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *GenerateStreamRequest) GetParams() *GenerateRequestParameters {
	if x != nil {
		return x.Params
	}
	return nil
}

type ChatCompletionStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string                   `protobuf:"bytes,1,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Messages  []*ChatCompletionMessage `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	// / The parameter for repetition penalty. 1.0 means no penalty.
	// / See [this paper](https://arxiv.org/pdf/1909.05858.pdf) for more details.
	RepetitionPenalty *float32 `protobuf:"fixed32,3,opt,name=repetition_penalty,json=repetitionPenalty,proto3,oneof" json:"repetition_penalty,omitempty"`
	// / The parameter for frequency penalty. 1.0 means no penalty
	// / Penalize new tokens based on their existing frequency in the text so far,
	// / decreasing the model's likelihood to repeat the same line verbatim.
	FrequencyPenalty *float32 `protobuf:"fixed32,4,opt,name=frequency_penalty,json=frequencyPenalty,proto3,oneof" json:"frequency_penalty,omitempty"`
	// / Adjust the likelihood of specified tokens.
	LogitBias []float32 `protobuf:"fixed32,5,rep,packed,name=logit_bias,json=logitBias,proto3" json:"logit_bias,omitempty"`
	// / Include log probabilities in the response.
	ReturnLogprobs *bool `protobuf:"varint,6,opt,name=return_logprobs,json=returnLogprobs,proto3,oneof" json:"return_logprobs,omitempty"`
	// / Include the `n` most likely tokens at each step.
	TopLogprobs *uint32 `protobuf:"varint,7,opt,name=top_logprobs,json=topLogprobs,proto3,oneof" json:"top_logprobs,omitempty"`
	// / Maximum number of generated tokens.
	MaxTokens *uint32 `protobuf:"varint,8,opt,name=max_tokens,json=maxTokens,proto3,oneof" json:"max_tokens,omitempty"`
	// / Generate `n` completions.
	NumCompletions *uint32 `protobuf:"varint,9,opt,name=num_completions,json=numCompletions,proto3,oneof" json:"num_completions,omitempty"`
	// / The parameter for presence penalty. 0.0 means no penalty.
	// / See [this paper](https://arxiv.org/pdf/1909.05858.pdf) for more details.
	PresencePenalty *float32 `protobuf:"fixed32,10,opt,name=presence_penalty,json=presencePenalty,proto3,oneof" json:"presence_penalty,omitempty"`
	// / Random sampling seed.
	Seed *uint64 `protobuf:"varint,11,opt,name=seed,proto3,oneof" json:"seed,omitempty"`
	// / The value used to module the logits distribution.
	Temperature *float32 `protobuf:"fixed32,12,opt,name=temperature,proto3,oneof" json:"temperature,omitempty"`
	// / If set to < 1, only the smallest set of most probable tokens with probabilities
	// / that add up to `top_p` or higher are kept for generation
	TopP *float32 `protobuf:"fixed32,13,opt,name=top_p,json=topP,proto3,oneof" json:"top_p,omitempty"`
}

func (x *ChatCompletionStreamRequest) Reset() {
	*x = ChatCompletionStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionStreamRequest) ProtoMessage() {}

func (x *ChatCompletionStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionStreamRequest.ProtoReflect.Descriptor instead.
func (*ChatCompletionStreamRequest) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{1}
}

func (x *ChatCompletionStreamRequest) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *ChatCompletionStreamRequest) GetMessages() []*ChatCompletionMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatCompletionStreamRequest) GetRepetitionPenalty() float32 {
	if x != nil && x.RepetitionPenalty != nil {
		return *x.RepetitionPenalty
	}
	return 0
}

func (x *ChatCompletionStreamRequest) GetFrequencyPenalty() float32 {
	if x != nil && x.FrequencyPenalty != nil {
		return *x.FrequencyPenalty
	}
	return 0
}

func (x *ChatCompletionStreamRequest) GetLogitBias() []float32 {
	if x != nil {
		return x.LogitBias
	}
	return nil
}

func (x *ChatCompletionStreamRequest) GetReturnLogprobs() bool {
	if x != nil && x.ReturnLogprobs != nil {
		return *x.ReturnLogprobs
	}
	return false
}

func (x *ChatCompletionStreamRequest) GetTopLogprobs() uint32 {
	if x != nil && x.TopLogprobs != nil {
		return *x.TopLogprobs
	}
	return 0
}

func (x *ChatCompletionStreamRequest) GetMaxTokens() uint32 {
	if x != nil && x.MaxTokens != nil {
		return *x.MaxTokens
	}
	return 0
}

func (x *ChatCompletionStreamRequest) GetNumCompletions() uint32 {
	if x != nil && x.NumCompletions != nil {
		return *x.NumCompletions
	}
	return 0
}

func (x *ChatCompletionStreamRequest) GetPresencePenalty() float32 {
	if x != nil && x.PresencePenalty != nil {
		return *x.PresencePenalty
	}
	return 0
}

func (x *ChatCompletionStreamRequest) GetSeed() uint64 {
	if x != nil && x.Seed != nil {
		return *x.Seed
	}
	return 0
}

func (x *ChatCompletionStreamRequest) GetTemperature() float32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

func (x *ChatCompletionStreamRequest) GetTopP() float32 {
	if x != nil && x.TopP != nil {
		return *x.TopP
	}
	return 0
}

type ChatCompletionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ChatCompletionMessage) Reset() {
	*x = ChatCompletionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionMessage) ProtoMessage() {}

func (x *ChatCompletionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionMessage.ProtoReflect.Descriptor instead.
func (*ChatCompletionMessage) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{2}
}

func (x *ChatCompletionMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatCompletionMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GenerateStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Generated token
	Token *GenerateAPIToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// / Most likely tokens
	TopTokens []*GenerateAPIToken `protobuf:"bytes,2,rep,name=top_tokens,json=topTokens,proto3" json:"top_tokens,omitempty"`
	// / Complete generated text
	// / Only available when the generation is finished
	GeneratedText *string `protobuf:"bytes,3,opt,name=generated_text,json=generatedText,proto3,oneof" json:"generated_text,omitempty"`
	// / Generation details
	// / Only available when the generation is finished
	Details *StreamDetails `protobuf:"bytes,4,opt,name=details,proto3,oneof" json:"details,omitempty"`
}

func (x *GenerateStreamResponse) Reset() {
	*x = GenerateStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateStreamResponse) ProtoMessage() {}

func (x *GenerateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateStreamResponse.ProtoReflect.Descriptor instead.
func (*GenerateStreamResponse) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateStreamResponse) GetToken() *GenerateAPIToken {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GenerateStreamResponse) GetTopTokens() []*GenerateAPIToken {
	if x != nil {
		return x.TopTokens
	}
	return nil
}

func (x *GenerateStreamResponse) GetGeneratedText() string {
	if x != nil && x.GeneratedText != nil {
		return *x.GeneratedText
	}
	return ""
}

func (x *GenerateStreamResponse) GetDetails() *StreamDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ChatCompletionStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / A unique identifier for the chat completion.
	// / If streaming is `true` - all chunks will have the same completion id.
	CompletionID string `protobuf:"bytes,1,opt,name=completionID,proto3" json:"completionID,omitempty"`
	// / The object type, which is always `chat.completion`.
	Object string `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	// / The Unix timestamp (in seconds) of when the chat completion was created.
	Created uint64 `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	// / The model used for the chat completion.
	Model string `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	// / This fingerprint represents the backend configuration that the model runs with.
	SystemFingerprint string `protobuf:"bytes,5,opt,name=system_fingerprint,json=systemFingerprint,proto3" json:"system_fingerprint,omitempty"`
	// / A list of chat completion choices.
	// / Can be more than one if `n` is greater than 1.
	Choices []*ChatCompletionStreamChoice `protobuf:"bytes,6,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *ChatCompletionStreamResponse) Reset() {
	*x = ChatCompletionStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionStreamResponse) ProtoMessage() {}

func (x *ChatCompletionStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionStreamResponse.ProtoReflect.Descriptor instead.
func (*ChatCompletionStreamResponse) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{4}
}

func (x *ChatCompletionStreamResponse) GetCompletionID() string {
	if x != nil {
		return x.CompletionID
	}
	return ""
}

func (x *ChatCompletionStreamResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ChatCompletionStreamResponse) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ChatCompletionStreamResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatCompletionStreamResponse) GetSystemFingerprint() string {
	if x != nil {
		return x.SystemFingerprint
	}
	return ""
}

func (x *ChatCompletionStreamResponse) GetChoices() []*ChatCompletionStreamChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

type ChatCompletionUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromptTokens     uint32 `protobuf:"varint,1,opt,name=prompt_tokens,json=promptTokens,proto3" json:"prompt_tokens,omitempty"`
	CompletionTokens uint32 `protobuf:"varint,2,opt,name=completion_tokens,json=completionTokens,proto3" json:"completion_tokens,omitempty"`
}

func (x *ChatCompletionUsage) Reset() {
	*x = ChatCompletionUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionUsage) ProtoMessage() {}

func (x *ChatCompletionUsage) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionUsage.ProtoReflect.Descriptor instead.
func (*ChatCompletionUsage) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{5}
}

func (x *ChatCompletionUsage) GetPromptTokens() uint32 {
	if x != nil {
		return x.PromptTokens
	}
	return 0
}

func (x *ChatCompletionUsage) GetCompletionTokens() uint32 {
	if x != nil {
		return x.CompletionTokens
	}
	return 0
}

type ChatCompletionStreamChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Index of the chat completion
	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// / Chunk specific data (generated token, etc.)
	Delta *ChatCompletionMessage `protobuf:"bytes,2,opt,name=delta,proto3,oneof" json:"delta,omitempty"`
	// / Log probabilities for the chat completion
	Logprobs *ChatCompletionStreamLogprobsContent `protobuf:"bytes,3,opt,name=logprobs,proto3,oneof" json:"logprobs,omitempty"`
	// / Reason for completion ending
	FinishReason *string `protobuf:"bytes,4,opt,name=finish_reason,json=finishReason,proto3,oneof" json:"finish_reason,omitempty"`
	// / Usage statistics for the completion request.
	// / Value is None until lst token's generation.
	Usage *ChatCompletionUsage `protobuf:"bytes,5,opt,name=usage,proto3,oneof" json:"usage,omitempty"`
}

func (x *ChatCompletionStreamChoice) Reset() {
	*x = ChatCompletionStreamChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionStreamChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionStreamChoice) ProtoMessage() {}

func (x *ChatCompletionStreamChoice) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionStreamChoice.ProtoReflect.Descriptor instead.
func (*ChatCompletionStreamChoice) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{6}
}

func (x *ChatCompletionStreamChoice) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ChatCompletionStreamChoice) GetDelta() *ChatCompletionMessage {
	if x != nil {
		return x.Delta
	}
	return nil
}

func (x *ChatCompletionStreamChoice) GetLogprobs() *ChatCompletionStreamLogprobsContent {
	if x != nil {
		return x.Logprobs
	}
	return nil
}

func (x *ChatCompletionStreamChoice) GetFinishReason() string {
	if x != nil && x.FinishReason != nil {
		return *x.FinishReason
	}
	return ""
}

func (x *ChatCompletionStreamChoice) GetUsage() *ChatCompletionUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

type ChatCompletionStreamLogprobsContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []*ChatCompletionStreamLogprob `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *ChatCompletionStreamLogprobsContent) Reset() {
	*x = ChatCompletionStreamLogprobsContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionStreamLogprobsContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionStreamLogprobsContent) ProtoMessage() {}

func (x *ChatCompletionStreamLogprobsContent) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionStreamLogprobsContent.ProtoReflect.Descriptor instead.
func (*ChatCompletionStreamLogprobsContent) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{7}
}

func (x *ChatCompletionStreamLogprobsContent) GetContent() []*ChatCompletionStreamLogprob {
	if x != nil {
		return x.Content
	}
	return nil
}

type ChatCompletionStreamLogprob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string  `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Logprob float32 `protobuf:"fixed32,2,opt,name=logprob,proto3" json:"logprob,omitempty"`
}

func (x *ChatCompletionStreamLogprob) Reset() {
	*x = ChatCompletionStreamLogprob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionStreamLogprob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionStreamLogprob) ProtoMessage() {}

func (x *ChatCompletionStreamLogprob) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionStreamLogprob.ProtoReflect.Descriptor instead.
func (*ChatCompletionStreamLogprob) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{8}
}

func (x *ChatCompletionStreamLogprob) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ChatCompletionStreamLogprob) GetLogprob() float32 {
	if x != nil {
		return x.Logprob
	}
	return 0
}

type GenerateAPIToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Token ID from the model tokenizer
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// / Token text
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// / Logprob
	Logprob *float32 `protobuf:"fixed32,3,opt,name=logprob,proto3,oneof" json:"logprob,omitempty"`
	// / Is the token a special token
	// / Can be used to ignore tokens when concatenating
	Special bool `protobuf:"varint,4,opt,name=special,proto3" json:"special,omitempty"`
}

func (x *GenerateAPIToken) Reset() {
	*x = GenerateAPIToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAPIToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAPIToken) ProtoMessage() {}

func (x *GenerateAPIToken) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAPIToken.ProtoReflect.Descriptor instead.
func (*GenerateAPIToken) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{9}
}

func (x *GenerateAPIToken) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GenerateAPIToken) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GenerateAPIToken) GetLogprob() float32 {
	if x != nil && x.Logprob != nil {
		return *x.Logprob
	}
	return 0
}

func (x *GenerateAPIToken) GetSpecial() bool {
	if x != nil {
		return x.Special
	}
	return false
}

type StreamDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Generation finish reason
	FinishReason FinishReason `protobuf:"varint,1,opt,name=finish_reason,json=finishReason,proto3,enum=proto.FinishReason" json:"finish_reason,omitempty"`
	// / Number of generated tokens
	GeneratedTokens uint32 `protobuf:"varint,2,opt,name=generated_tokens,json=generatedTokens,proto3" json:"generated_tokens,omitempty"`
	// / Sampling seed if sampling was activated
	Seed *uint64 `protobuf:"varint,3,opt,name=seed,proto3,oneof" json:"seed,omitempty"`
}

func (x *StreamDetails) Reset() {
	*x = StreamDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDetails) ProtoMessage() {}

func (x *StreamDetails) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDetails.ProtoReflect.Descriptor instead.
func (*StreamDetails) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{10}
}

func (x *StreamDetails) GetFinishReason() FinishReason {
	if x != nil {
		return x.FinishReason
	}
	return FinishReason_FINISH_REASON_LENGTH
}

func (x *StreamDetails) GetGeneratedTokens() uint32 {
	if x != nil {
		return x.GeneratedTokens
	}
	return 0
}

func (x *StreamDetails) GetSeed() uint64 {
	if x != nil && x.Seed != nil {
		return *x.Seed
	}
	return 0
}

type GenerateRequestParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Activate logits sampling
	DoSample bool `protobuf:"varint,1,opt,name=do_sample,json=doSample,proto3" json:"do_sample,omitempty"`
	// / Maximum number of generated tokens
	MaxNewTokens uint32 `protobuf:"varint,2,opt,name=max_new_tokens,json=maxNewTokens,proto3" json:"max_new_tokens,omitempty"`
	// / The parameter for repetition penalty. 1.0 means no penalty.
	// / See [this paper](https://arxiv.org/pdf/1909.05858.pdf) for more details.
	RepetitionPenalty *float32 `protobuf:"fixed32,3,opt,name=repetition_penalty,json=repetitionPenalty,proto3,oneof" json:"repetition_penalty,omitempty"`
	// / The parameter for frequency penalty. 1.0 means no penalty
	// / Penalize new tokens based on their existing frequency in the text so far,
	// / decreasing the model's likelihood to repeat the same line verbatim.
	FrequencyPenalty *float32 `protobuf:"fixed32,4,opt,name=frequency_penalty,json=frequencyPenalty,proto3,oneof" json:"frequency_penalty,omitempty"`
	// / Whether to prepend the prompt to the generated text
	ReturnFullText bool `protobuf:"varint,5,opt,name=return_full_text,json=returnFullText,proto3" json:"return_full_text,omitempty"`
	// / Stop generating tokens if a member of `stop_sequences` is generated
	Stop []string `protobuf:"bytes,6,rep,name=stop,proto3" json:"stop,omitempty"`
	// / Random sampling seed
	Seed *uint64 `protobuf:"varint,7,opt,name=seed,proto3,oneof" json:"seed,omitempty"`
	// / The value used to module the logits distribution.
	Temperature *float32 `protobuf:"fixed32,8,opt,name=temperature,proto3,oneof" json:"temperature,omitempty"`
	// / The number of highest probability vocabulary tokens to keep for top-k-filtering.
	TopK *uint32 `protobuf:"varint,9,opt,name=top_k,json=topK,proto3,oneof" json:"top_k,omitempty"`
	// / If set to < 1, only the smallest set of most probable tokens with probabilities that add up to `top_p` or
	// / higher are kept for generation.
	TopP *float32 `protobuf:"fixed32,10,opt,name=top_p,json=topP,proto3,oneof" json:"top_p,omitempty"`
	// / truncate inputs tokens to the given size
	Truncate *uint32 `protobuf:"varint,11,opt,name=truncate,proto3,oneof" json:"truncate,omitempty"`
	// / Typical Decoding mass
	// / See [Typical Decoding for Natural Language Generation](https://arxiv.org/abs/2202.00666) for more information
	TypicalP *float32 `protobuf:"fixed32,12,opt,name=typical_p,json=typicalP,proto3,oneof" json:"typical_p,omitempty"`
	// / Generate best_of sequences and return the one if the highest token logprobs
	BestOf *uint32 `protobuf:"varint,13,opt,name=best_of,json=bestOf,proto3,oneof" json:"best_of,omitempty"`
	// / Watermarking with [A Watermark for Large Language Models](https://arxiv.org/abs/2301.10226)
	Watermark bool `protobuf:"varint,14,opt,name=watermark,proto3" json:"watermark,omitempty"`
	// / Get generation details
	Details bool `protobuf:"varint,15,opt,name=details,proto3" json:"details,omitempty"`
	// / Get decoder input token logprobs and ids
	DecoderInputDetails bool `protobuf:"varint,16,opt,name=decoder_input_details,json=decoderInputDetails,proto3" json:"decoder_input_details,omitempty"`
	// / Return the N most likely tokens at each step
	TopNTokens *uint32 `protobuf:"varint,17,opt,name=top_n_tokens,json=topNTokens,proto3,oneof" json:"top_n_tokens,omitempty"` /// grammars are not supported at the moment
}

func (x *GenerateRequestParameters) Reset() {
	*x = GenerateRequestParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infaas_generate_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateRequestParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRequestParameters) ProtoMessage() {}

func (x *GenerateRequestParameters) ProtoReflect() protoreflect.Message {
	mi := &file_infaas_generate_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRequestParameters.ProtoReflect.Descriptor instead.
func (*GenerateRequestParameters) Descriptor() ([]byte, []int) {
	return file_infaas_generate_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateRequestParameters) GetDoSample() bool {
	if x != nil {
		return x.DoSample
	}
	return false
}

func (x *GenerateRequestParameters) GetMaxNewTokens() uint32 {
	if x != nil {
		return x.MaxNewTokens
	}
	return 0
}

func (x *GenerateRequestParameters) GetRepetitionPenalty() float32 {
	if x != nil && x.RepetitionPenalty != nil {
		return *x.RepetitionPenalty
	}
	return 0
}

func (x *GenerateRequestParameters) GetFrequencyPenalty() float32 {
	if x != nil && x.FrequencyPenalty != nil {
		return *x.FrequencyPenalty
	}
	return 0
}

func (x *GenerateRequestParameters) GetReturnFullText() bool {
	if x != nil {
		return x.ReturnFullText
	}
	return false
}

func (x *GenerateRequestParameters) GetStop() []string {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *GenerateRequestParameters) GetSeed() uint64 {
	if x != nil && x.Seed != nil {
		return *x.Seed
	}
	return 0
}

func (x *GenerateRequestParameters) GetTemperature() float32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

func (x *GenerateRequestParameters) GetTopK() uint32 {
	if x != nil && x.TopK != nil {
		return *x.TopK
	}
	return 0
}

func (x *GenerateRequestParameters) GetTopP() float32 {
	if x != nil && x.TopP != nil {
		return *x.TopP
	}
	return 0
}

func (x *GenerateRequestParameters) GetTruncate() uint32 {
	if x != nil && x.Truncate != nil {
		return *x.Truncate
	}
	return 0
}

func (x *GenerateRequestParameters) GetTypicalP() float32 {
	if x != nil && x.TypicalP != nil {
		return *x.TypicalP
	}
	return 0
}

func (x *GenerateRequestParameters) GetBestOf() uint32 {
	if x != nil && x.BestOf != nil {
		return *x.BestOf
	}
	return 0
}

func (x *GenerateRequestParameters) GetWatermark() bool {
	if x != nil {
		return x.Watermark
	}
	return false
}

func (x *GenerateRequestParameters) GetDetails() bool {
	if x != nil {
		return x.Details
	}
	return false
}

func (x *GenerateRequestParameters) GetDecoderInputDetails() bool {
	if x != nil {
		return x.DecoderInputDetails
	}
	return false
}

func (x *GenerateRequestParameters) GetTopNTokens() uint32 {
	if x != nil && x.TopNTokens != nil {
		return *x.TopNTokens
	}
	return 0
}

var File_infaas_generate_proto protoreflect.FileDescriptor

var file_infaas_generate_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6e, 0x66, 0x61, 0x61, 0x73, 0x2d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xd9, 0x05, 0x0a, 0x1b,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x00, 0x52, 0x11, 0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x66, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x01, 0x52, 0x10, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50,
	0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67,
	0x69, 0x74, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x02, 0x52, 0x09, 0x6c,
	0x6f, 0x67, 0x69, 0x74, 0x42, 0x69, 0x61, 0x73, 0x12, 0x2c, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x02, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4c, 0x6f, 0x67, 0x70, 0x72,
	0x6f, 0x62, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f,
	0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x0b,
	0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x04, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x0e, 0x6e,
	0x75, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x2e, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x48, 0x06, 0x52, 0x0f, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x48, 0x07,
	0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x48, 0x08,
	0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x48,
	0x09, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x72,
	0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74,
	0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x22, 0x45, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xff,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x2a, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x48, 0x01, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0xf6, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2d, 0x0a,
	0x12, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x07,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x13, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x37, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x88, 0x01, 0x01,
	0x12, 0x4b, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c,
	0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x01,
	0x52, 0x08, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x03, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x6f, 0x67,
	0x70, 0x72, 0x6f, 0x62, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x63, 0x0a, 0x23, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x6f,
	0x67, 0x70, 0x72, 0x6f, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x70, 0x72, 0x6f, 0x62, 0x22, 0x7b, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a,
	0x07, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00,
	0x52, 0x07, 0x6c, 0x6f, 0x67, 0x70, 0x72, 0x6f, 0x62, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c, 0x6f, 0x67, 0x70, 0x72,
	0x6f, 0x62, 0x22, 0x96, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x29,
	0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x65, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x22, 0xfc, 0x05, 0x0a, 0x19,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x5f,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x6f,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x65,
	0x77, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x12,
	0x72, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x30, 0x0a, 0x11, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x10, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x74, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70,
	0x12, 0x17, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02,
	0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x48, 0x03,
	0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x04, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x4b, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x05, 0x74, 0x6f,
	0x70, 0x5f, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x48, 0x05, 0x52, 0x04, 0x74, 0x6f, 0x70,
	0x50, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x06, 0x52, 0x08, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x48, 0x07, 0x52, 0x08, 0x74, 0x79, 0x70, 0x69,
	0x63, 0x61, 0x6c, 0x50, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x62, 0x65, 0x73, 0x74, 0x5f,
	0x6f, 0x66, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x08, 0x52, 0x06, 0x62, 0x65, 0x73, 0x74,
	0x4f, 0x66, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x25, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x5f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x4e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x72, 0x65, 0x70,
	0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x70,
	0x5f, 0x70, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x79, 0x70, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x6f,
	0x70, 0x5f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2a, 0x66, 0x0a, 0x0c, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x4e, 0x47,
	0x54, 0x48, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x45, 0x4f, 0x53, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10,
	0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45,
	0x10, 0x02, 0x32, 0xc3, 0x01, 0x0a, 0x0d, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x55, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x69, 0x64, 0x63, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x02, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infaas_generate_proto_rawDescOnce sync.Once
	file_infaas_generate_proto_rawDescData = file_infaas_generate_proto_rawDesc
)

func file_infaas_generate_proto_rawDescGZIP() []byte {
	file_infaas_generate_proto_rawDescOnce.Do(func() {
		file_infaas_generate_proto_rawDescData = protoimpl.X.CompressGZIP(file_infaas_generate_proto_rawDescData)
	})
	return file_infaas_generate_proto_rawDescData
}

var file_infaas_generate_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_infaas_generate_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_infaas_generate_proto_goTypes = []interface{}{
	(FinishReason)(0),                           // 0: proto.FinishReason
	(*GenerateStreamRequest)(nil),               // 1: proto.GenerateStreamRequest
	(*ChatCompletionStreamRequest)(nil),         // 2: proto.ChatCompletionStreamRequest
	(*ChatCompletionMessage)(nil),               // 3: proto.ChatCompletionMessage
	(*GenerateStreamResponse)(nil),              // 4: proto.GenerateStreamResponse
	(*ChatCompletionStreamResponse)(nil),        // 5: proto.ChatCompletionStreamResponse
	(*ChatCompletionUsage)(nil),                 // 6: proto.ChatCompletionUsage
	(*ChatCompletionStreamChoice)(nil),          // 7: proto.ChatCompletionStreamChoice
	(*ChatCompletionStreamLogprobsContent)(nil), // 8: proto.ChatCompletionStreamLogprobsContent
	(*ChatCompletionStreamLogprob)(nil),         // 9: proto.ChatCompletionStreamLogprob
	(*GenerateAPIToken)(nil),                    // 10: proto.GenerateAPIToken
	(*StreamDetails)(nil),                       // 11: proto.StreamDetails
	(*GenerateRequestParameters)(nil),           // 12: proto.GenerateRequestParameters
}
var file_infaas_generate_proto_depIdxs = []int32{
	12, // 0: proto.GenerateStreamRequest.params:type_name -> proto.GenerateRequestParameters
	3,  // 1: proto.ChatCompletionStreamRequest.messages:type_name -> proto.ChatCompletionMessage
	10, // 2: proto.GenerateStreamResponse.token:type_name -> proto.GenerateAPIToken
	10, // 3: proto.GenerateStreamResponse.top_tokens:type_name -> proto.GenerateAPIToken
	11, // 4: proto.GenerateStreamResponse.details:type_name -> proto.StreamDetails
	7,  // 5: proto.ChatCompletionStreamResponse.choices:type_name -> proto.ChatCompletionStreamChoice
	3,  // 6: proto.ChatCompletionStreamChoice.delta:type_name -> proto.ChatCompletionMessage
	8,  // 7: proto.ChatCompletionStreamChoice.logprobs:type_name -> proto.ChatCompletionStreamLogprobsContent
	6,  // 8: proto.ChatCompletionStreamChoice.usage:type_name -> proto.ChatCompletionUsage
	9,  // 9: proto.ChatCompletionStreamLogprobsContent.content:type_name -> proto.ChatCompletionStreamLogprob
	0,  // 10: proto.StreamDetails.finish_reason:type_name -> proto.FinishReason
	1,  // 11: proto.TextGenerator.GenerateStream:input_type -> proto.GenerateStreamRequest
	2,  // 12: proto.TextGenerator.ChatCompletionStream:input_type -> proto.ChatCompletionStreamRequest
	4,  // 13: proto.TextGenerator.GenerateStream:output_type -> proto.GenerateStreamResponse
	5,  // 14: proto.TextGenerator.ChatCompletionStream:output_type -> proto.ChatCompletionStreamResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_infaas_generate_proto_init() }
func file_infaas_generate_proto_init() {
	if File_infaas_generate_proto != nil {
		return
	}
	file_annotations_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_infaas_generate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionStreamChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionStreamLogprobsContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionStreamLogprob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAPIToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infaas_generate_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateRequestParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_infaas_generate_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_infaas_generate_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_infaas_generate_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_infaas_generate_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_infaas_generate_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_infaas_generate_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infaas_generate_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_infaas_generate_proto_goTypes,
		DependencyIndexes: file_infaas_generate_proto_depIdxs,
		EnumInfos:         file_infaas_generate_proto_enumTypes,
		MessageInfos:      file_infaas_generate_proto_msgTypes,
	}.Build()
	File_infaas_generate_proto = out.File
	file_infaas_generate_proto_rawDesc = nil
	file_infaas_generate_proto_goTypes = nil
	file_infaas_generate_proto_depIdxs = nil
}
