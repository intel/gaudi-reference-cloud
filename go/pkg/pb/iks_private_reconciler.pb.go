// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: iks_private_reconciler.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterDeletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ClusterDeletionRequest) Reset() {
	*x = ClusterDeletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterDeletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterDeletionRequest) ProtoMessage() {}

func (x *ClusterDeletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterDeletionRequest.ProtoReflect.Descriptor instead.
func (*ClusterDeletionRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{0}
}

func (x *ClusterDeletionRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ClusterReconcilerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ClusterReconcilerRequest) Reset() {
	*x = ClusterReconcilerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterReconcilerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterReconcilerRequest) ProtoMessage() {}

func (x *ClusterReconcilerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterReconcilerRequest.ProtoReflect.Descriptor instead.
func (*ClusterReconcilerRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{1}
}

func (x *ClusterReconcilerRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ClusterReconcilerResponseCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State        string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	ClusterRevId int32  `protobuf:"varint,2,opt,name=clusterRevId,proto3" json:"clusterRevId,omitempty"`
	DesiredJson  string `protobuf:"bytes,3,opt,name=desiredJson,proto3" json:"desiredJson,omitempty"`
}

func (x *ClusterReconcilerResponseCluster) Reset() {
	*x = ClusterReconcilerResponseCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterReconcilerResponseCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterReconcilerResponseCluster) ProtoMessage() {}

func (x *ClusterReconcilerResponseCluster) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterReconcilerResponseCluster.ProtoReflect.Descriptor instead.
func (*ClusterReconcilerResponseCluster) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{2}
}

func (x *ClusterReconcilerResponseCluster) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ClusterReconcilerResponseCluster) GetClusterRevId() int32 {
	if x != nil {
		return x.ClusterRevId
	}
	return 0
}

func (x *ClusterReconcilerResponseCluster) GetDesiredJson() string {
	if x != nil {
		return x.DesiredJson
	}
	return ""
}

type ClusterReconcilerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*ClusterReconcilerResponseCluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *ClusterReconcilerResponse) Reset() {
	*x = ClusterReconcilerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterReconcilerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterReconcilerResponse) ProtoMessage() {}

func (x *ClusterReconcilerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterReconcilerResponse.ProtoReflect.Descriptor instead.
func (*ClusterReconcilerResponse) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{3}
}

func (x *ClusterReconcilerResponse) GetClusters() []*ClusterReconcilerResponseCluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type UpdateClusterStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateClusterStateRequest) Reset() {
	*x = UpdateClusterStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterStateRequest) ProtoMessage() {}

func (x *UpdateClusterStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterStateRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateClusterStateRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateClusterStateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type UpdateClusterChangeAppliedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterrevId  int32 `protobuf:"varint,1,opt,name=clusterrevId,proto3" json:"clusterrevId,omitempty"`
	ChangeApplied bool  `protobuf:"varint,2,opt,name=changeApplied,proto3" json:"changeApplied,omitempty"`
}

func (x *UpdateClusterChangeAppliedRequest) Reset() {
	*x = UpdateClusterChangeAppliedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterChangeAppliedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterChangeAppliedRequest) ProtoMessage() {}

func (x *UpdateClusterChangeAppliedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterChangeAppliedRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterChangeAppliedRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateClusterChangeAppliedRequest) GetClusterrevId() int32 {
	if x != nil {
		return x.ClusterrevId
	}
	return 0
}

func (x *UpdateClusterChangeAppliedRequest) GetChangeApplied() bool {
	if x != nil {
		return x.ChangeApplied
	}
	return false
}

type NodeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IpAddress        string             `protobuf:"bytes,2,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	InstanceIMI      string             `protobuf:"bytes,3,opt,name=instanceIMI,proto3" json:"instanceIMI,omitempty"`
	KubeletVersion   string             `protobuf:"bytes,4,opt,name=kubeletVersion,proto3" json:"kubeletVersion,omitempty"`
	KubeProxyVersion string             `protobuf:"bytes,5,opt,name=kubeProxyVersion,proto3" json:"kubeProxyVersion,omitempty"`
	CreationTime     string             `protobuf:"bytes,6,opt,name=creationTime,proto3" json:"creationTime,omitempty"`
	State            string             `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	LastUpdate       string             `protobuf:"bytes,8,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	Reason           string             `protobuf:"bytes,9,opt,name=reason,proto3" json:"reason,omitempty"`
	Message          string             `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	DnsName          string             `protobuf:"bytes,11,opt,name=dnsName,proto3" json:"dnsName,omitempty"`
	WekaStorage      *WekaStorageStatus `protobuf:"bytes,12,opt,name=wekaStorage,proto3" json:"wekaStorage,omitempty"`
}

func (x *NodeStatusRequest) Reset() {
	*x = NodeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatusRequest) ProtoMessage() {}

func (x *NodeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatusRequest.ProtoReflect.Descriptor instead.
func (*NodeStatusRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{6}
}

func (x *NodeStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeStatusRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NodeStatusRequest) GetInstanceIMI() string {
	if x != nil {
		return x.InstanceIMI
	}
	return ""
}

func (x *NodeStatusRequest) GetKubeletVersion() string {
	if x != nil {
		return x.KubeletVersion
	}
	return ""
}

func (x *NodeStatusRequest) GetKubeProxyVersion() string {
	if x != nil {
		return x.KubeProxyVersion
	}
	return ""
}

func (x *NodeStatusRequest) GetCreationTime() string {
	if x != nil {
		return x.CreationTime
	}
	return ""
}

func (x *NodeStatusRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *NodeStatusRequest) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *NodeStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *NodeStatusRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NodeStatusRequest) GetDnsName() string {
	if x != nil {
		return x.DnsName
	}
	return ""
}

func (x *NodeStatusRequest) GetWekaStorage() *WekaStorageStatus {
	if x != nil {
		return x.WekaStorage
	}
	return nil
}

type NodeGroupStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count   int32                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Type    string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	State   string               `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Nodes   []*NodeStatusRequest `protobuf:"bytes,5,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Reason  string               `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Message string               `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *NodeGroupStatusRequest) Reset() {
	*x = NodeGroupStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeGroupStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeGroupStatusRequest) ProtoMessage() {}

func (x *NodeGroupStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeGroupStatusRequest.ProtoReflect.Descriptor instead.
func (*NodeGroupStatusRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{7}
}

func (x *NodeGroupStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeGroupStatusRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NodeGroupStatusRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NodeGroupStatusRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *NodeGroupStatusRequest) GetNodes() []*NodeStatusRequest {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *NodeGroupStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *NodeGroupStatusRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddonStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State      string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Reason     string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Message    string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	LastUpdate string `protobuf:"bytes,5,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	Artifact   string `protobuf:"bytes,6,opt,name=artifact,proto3" json:"artifact,omitempty"`
}

func (x *AddonStatusRequest) Reset() {
	*x = AddonStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddonStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddonStatusRequest) ProtoMessage() {}

func (x *AddonStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddonStatusRequest.ProtoReflect.Descriptor instead.
func (*AddonStatusRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{8}
}

func (x *AddonStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddonStatusRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AddonStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AddonStatusRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddonStatusRequest) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *AddonStatusRequest) GetArtifact() string {
	if x != nil {
		return x.Artifact
	}
	return ""
}

type IlbStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vip        string                      `protobuf:"bytes,2,opt,name=vip,proto3" json:"vip,omitempty"`
	State      string                      `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	PoolID     int32                       `protobuf:"varint,4,opt,name=poolID,proto3" json:"poolID,omitempty"`
	VipID      int32                       `protobuf:"varint,5,opt,name=vipID,proto3" json:"vipID,omitempty"`
	Conditions *IlbConditionsStatusRequest `protobuf:"bytes,6,opt,name=conditions,proto3" json:"conditions,omitempty"`
	Message    string                      `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *IlbStatusRequest) Reset() {
	*x = IlbStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IlbStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IlbStatusRequest) ProtoMessage() {}

func (x *IlbStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IlbStatusRequest.ProtoReflect.Descriptor instead.
func (*IlbStatusRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{9}
}

func (x *IlbStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IlbStatusRequest) GetVip() string {
	if x != nil {
		return x.Vip
	}
	return ""
}

func (x *IlbStatusRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *IlbStatusRequest) GetPoolID() int32 {
	if x != nil {
		return x.PoolID
	}
	return 0
}

func (x *IlbStatusRequest) GetVipID() int32 {
	if x != nil {
		return x.VipID
	}
	return 0
}

func (x *IlbStatusRequest) GetConditions() *IlbConditionsStatusRequest {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *IlbStatusRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IlbConditionsStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolCreated   bool `protobuf:"varint,1,opt,name=poolCreated,proto3" json:"poolCreated,omitempty"`
	VipCreated    bool `protobuf:"varint,2,opt,name=vipCreated,proto3" json:"vipCreated,omitempty"`
	VipPoolLinked bool `protobuf:"varint,3,opt,name=vipPoolLinked,proto3" json:"vipPoolLinked,omitempty"`
}

func (x *IlbConditionsStatusRequest) Reset() {
	*x = IlbConditionsStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IlbConditionsStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IlbConditionsStatusRequest) ProtoMessage() {}

func (x *IlbConditionsStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IlbConditionsStatusRequest.ProtoReflect.Descriptor instead.
func (*IlbConditionsStatusRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{10}
}

func (x *IlbConditionsStatusRequest) GetPoolCreated() bool {
	if x != nil {
		return x.PoolCreated
	}
	return false
}

func (x *IlbConditionsStatusRequest) GetVipCreated() bool {
	if x != nil {
		return x.VipCreated
	}
	return false
}

func (x *IlbConditionsStatusRequest) GetVipPoolLinked() bool {
	if x != nil {
		return x.VipPoolLinked
	}
	return false
}

type StorageStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceName    string `protobuf:"bytes,1,opt,name=namespaceName,proto3" json:"namespaceName,omitempty"`
	NamespaceCreated bool   `protobuf:"varint,2,opt,name=namespaceCreated,proto3" json:"namespaceCreated,omitempty"`
	NamespaceState   string `protobuf:"bytes,3,opt,name=namespaceState,proto3" json:"namespaceState,omitempty"`
	Provider         string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	Size             string `protobuf:"bytes,5,opt,name=size,proto3" json:"size,omitempty"`
	SecretCreated    bool   `protobuf:"varint,6,opt,name=secretCreated,proto3" json:"secretCreated,omitempty"`
	StorageState     string `protobuf:"bytes,7,opt,name=storageState,proto3" json:"storageState,omitempty"`
	Message          string `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	Reason           string `protobuf:"bytes,9,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *StorageStatusRequest) Reset() {
	*x = StorageStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageStatusRequest) ProtoMessage() {}

func (x *StorageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageStatusRequest.ProtoReflect.Descriptor instead.
func (*StorageStatusRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{11}
}

func (x *StorageStatusRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *StorageStatusRequest) GetNamespaceCreated() bool {
	if x != nil {
		return x.NamespaceCreated
	}
	return false
}

func (x *StorageStatusRequest) GetNamespaceState() string {
	if x != nil {
		return x.NamespaceState
	}
	return ""
}

func (x *StorageStatusRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *StorageStatusRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *StorageStatusRequest) GetSecretCreated() bool {
	if x != nil {
		return x.SecretCreated
	}
	return false
}

func (x *StorageStatusRequest) GetStorageState() string {
	if x != nil {
		return x.StorageState
	}
	return ""
}

func (x *StorageStatusRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StorageStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type FirewallStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Firewallstate string   `protobuf:"bytes,1,opt,name=firewallstate,proto3" json:"firewallstate,omitempty"`
	Destinationip string   `protobuf:"bytes,2,opt,name=destinationip,proto3" json:"destinationip,omitempty"`
	Port          int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Protocol      string   `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Sourceips     []string `protobuf:"bytes,5,rep,name=sourceips,proto3" json:"sourceips,omitempty"`
}

func (x *FirewallStatusRequest) Reset() {
	*x = FirewallStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirewallStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallStatusRequest) ProtoMessage() {}

func (x *FirewallStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallStatusRequest.ProtoReflect.Descriptor instead.
func (*FirewallStatusRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{12}
}

func (x *FirewallStatusRequest) GetFirewallstate() string {
	if x != nil {
		return x.Firewallstate
	}
	return ""
}

func (x *FirewallStatusRequest) GetDestinationip() string {
	if x != nil {
		return x.Destinationip
	}
	return ""
}

func (x *FirewallStatusRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *FirewallStatusRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *FirewallStatusRequest) GetSourceips() []string {
	if x != nil {
		return x.Sourceips
	}
	return nil
}

type ClusterStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State      string                    `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	LastUpdate string                    `protobuf:"bytes,2,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	Reason     string                    `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Message    string                    `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Nodegroups []*NodeGroupStatusRequest `protobuf:"bytes,5,rep,name=nodegroups,proto3" json:"nodegroups,omitempty"`
	Addons     []*AddonStatusRequest     `protobuf:"bytes,6,rep,name=addons,proto3" json:"addons,omitempty"`
	Ilbs       []*IlbStatusRequest       `protobuf:"bytes,7,rep,name=ilbs,proto3" json:"ilbs,omitempty"`
	Storages   []*StorageStatusRequest   `protobuf:"bytes,8,rep,name=storages,proto3" json:"storages,omitempty"`
	Firewall   []*FirewallStatusRequest  `protobuf:"bytes,9,rep,name=firewall,proto3" json:"firewall,omitempty"`
}

func (x *ClusterStatusRequest) Reset() {
	*x = ClusterStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusRequest) ProtoMessage() {}

func (x *ClusterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusRequest.ProtoReflect.Descriptor instead.
func (*ClusterStatusRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{13}
}

func (x *ClusterStatusRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ClusterStatusRequest) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *ClusterStatusRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ClusterStatusRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ClusterStatusRequest) GetNodegroups() []*NodeGroupStatusRequest {
	if x != nil {
		return x.Nodegroups
	}
	return nil
}

func (x *ClusterStatusRequest) GetAddons() []*AddonStatusRequest {
	if x != nil {
		return x.Addons
	}
	return nil
}

func (x *ClusterStatusRequest) GetIlbs() []*IlbStatusRequest {
	if x != nil {
		return x.Ilbs
	}
	return nil
}

func (x *ClusterStatusRequest) GetStorages() []*StorageStatusRequest {
	if x != nil {
		return x.Storages
	}
	return nil
}

func (x *ClusterStatusRequest) GetFirewall() []*FirewallStatusRequest {
	if x != nil {
		return x.Firewall
	}
	return nil
}

type UpdateClusterStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string                `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ClusterStatus *ClusterStatusRequest `protobuf:"bytes,4,opt,name=clusterStatus,proto3" json:"clusterStatus,omitempty"`
}

func (x *UpdateClusterStatusRequest) Reset() {
	*x = UpdateClusterStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterStatusRequest) ProtoMessage() {}

func (x *UpdateClusterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterStatusRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateClusterStatusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateClusterStatusRequest) GetClusterStatus() *ClusterStatusRequest {
	if x != nil {
		return x.ClusterStatus
	}
	return nil
}

type UpdateClusterCertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid               string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	CaCert             string `protobuf:"bytes,2,opt,name=caCert,proto3" json:"caCert,omitempty"`
	CaKey              string `protobuf:"bytes,3,opt,name=caKey,proto3" json:"caKey,omitempty"`
	EtcdCaCert         string `protobuf:"bytes,4,opt,name=etcdCaCert,proto3" json:"etcdCaCert,omitempty"`
	EtcdCaKey          string `protobuf:"bytes,5,opt,name=etcdCaKey,proto3" json:"etcdCaKey,omitempty"`
	EtcdCaRotationKey  string `protobuf:"bytes,6,opt,name=etcdCaRotationKey,proto3" json:"etcdCaRotationKey,omitempty"`
	SaPub              string `protobuf:"bytes,7,opt,name=saPub,proto3" json:"saPub,omitempty"`
	SaKey              string `protobuf:"bytes,8,opt,name=saKey,proto3" json:"saKey,omitempty"`
	CpRegistrationCmd  string `protobuf:"bytes,9,opt,name=cpRegistrationCmd,proto3" json:"cpRegistrationCmd,omitempty"`
	WrkRegistrationCmd string `protobuf:"bytes,10,opt,name=wrkRegistrationCmd,proto3" json:"wrkRegistrationCmd,omitempty"`
}

func (x *UpdateClusterCertsRequest) Reset() {
	*x = UpdateClusterCertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iks_private_reconciler_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterCertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterCertsRequest) ProtoMessage() {}

func (x *UpdateClusterCertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iks_private_reconciler_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterCertsRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterCertsRequest) Descriptor() ([]byte, []int) {
	return file_iks_private_reconciler_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateClusterCertsRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateClusterCertsRequest) GetCaCert() string {
	if x != nil {
		return x.CaCert
	}
	return ""
}

func (x *UpdateClusterCertsRequest) GetCaKey() string {
	if x != nil {
		return x.CaKey
	}
	return ""
}

func (x *UpdateClusterCertsRequest) GetEtcdCaCert() string {
	if x != nil {
		return x.EtcdCaCert
	}
	return ""
}

func (x *UpdateClusterCertsRequest) GetEtcdCaKey() string {
	if x != nil {
		return x.EtcdCaKey
	}
	return ""
}

func (x *UpdateClusterCertsRequest) GetEtcdCaRotationKey() string {
	if x != nil {
		return x.EtcdCaRotationKey
	}
	return ""
}

func (x *UpdateClusterCertsRequest) GetSaPub() string {
	if x != nil {
		return x.SaPub
	}
	return ""
}

func (x *UpdateClusterCertsRequest) GetSaKey() string {
	if x != nil {
		return x.SaKey
	}
	return ""
}

func (x *UpdateClusterCertsRequest) GetCpRegistrationCmd() string {
	if x != nil {
		return x.CpRegistrationCmd
	}
	return ""
}

func (x *UpdateClusterCertsRequest) GetWrkRegistrationCmd() string {
	if x != nil {
		return x.WrkRegistrationCmd
	}
	return ""
}

var File_iks_private_reconciler_proto protoreflect.FileDescriptor

var file_iks_private_reconciler_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x69, 0x6b, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x69, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2c, 0x0a, 0x16, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x30,
	0x0a, 0x18, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x7e, 0x0a, 0x20, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x63, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x76, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4a, 0x73, 0x6f, 0x6e,
	0x22, 0x60, 0x0a, 0x19, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x63, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x45, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x21, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x72, 0x65, 0x76, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x72, 0x65, 0x76,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x22, 0x9d, 0x03, 0x0a, 0x11, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x4d, 0x49, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x4d, 0x49, 0x12, 0x26, 0x0a, 0x0e, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6b, 0x75, 0x62, 0x65,
	0x6c, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6b, 0x75,
	0x62, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6b, 0x75, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0b,
	0x77, 0x65, 0x6b, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x6b, 0x61, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x77, 0x65, 0x6b,
	0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x64,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x41, 0x64,
	0x64, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x10, 0x49, 0x6c, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f,
	0x6c, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x70, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x69, 0x70, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x69, 0x6c, 0x62, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x69, 0x6c, 0x62, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x69, 0x70, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x69, 0x70, 0x50, 0x6f, 0x6f, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x76, 0x69,
	0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x22, 0xbc, 0x02, 0x0a, 0x14,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x15, 0x46,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x72,
	0x65, 0x77, 0x61, 0x6c, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x69, 0x70, 0x73, 0x22, 0x90,
	0x03, 0x0a, 0x14, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x31,
	0x0a, 0x06, 0x61, 0x64, 0x64, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x61, 0x64, 0x64, 0x6f, 0x6e,
	0x73, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6c, 0x62, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6c, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x69, 0x6c, 0x62, 0x73, 0x12, 0x37,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c,
	0x6c, 0x22, 0x73, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd3, 0x02, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x43, 0x65,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x43, 0x65, 0x72, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x74, 0x63, 0x64, 0x43, 0x61,
	0x43, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x74, 0x63, 0x64,
	0x43, 0x61, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x74, 0x63, 0x64, 0x43, 0x61,
	0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x74, 0x63, 0x64, 0x43,
	0x61, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x74, 0x63, 0x64, 0x43, 0x61, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x65, 0x74, 0x63, 0x64, 0x43, 0x61, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x61, 0x50, 0x75, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x61, 0x50, 0x75, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x61, 0x4b, 0x65,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x11, 0x63, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6d, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x70, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6d, 0x64, 0x12, 0x2e, 0x0a, 0x12,
	0x77, 0x72, 0x6b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6d, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x72, 0x6b, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6d, 0x64, 0x32, 0xbe, 0x04, 0x0a,
	0x14, 0x49, 0x6b, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x63, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x5c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x19, 0x50, 0x75, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x72,
	0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x21,
	0x50, 0x75, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65,
	0x72, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x1a, 0x50, 0x75, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69,
	0x6c, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x19, 0x50, 0x75, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x65,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63,
	0x69, 0x6c, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x5e, 0x5a,
	0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x6c, 0x2d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64,
	0x65, 0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x69, 0x64, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0xaa, 0xdd,
	0x1b, 0x02, 0x08, 0x02, 0xaa, 0xdd, 0x1b, 0x05, 0x12, 0x03, 0x69, 0x6b, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iks_private_reconciler_proto_rawDescOnce sync.Once
	file_iks_private_reconciler_proto_rawDescData = file_iks_private_reconciler_proto_rawDesc
)

func file_iks_private_reconciler_proto_rawDescGZIP() []byte {
	file_iks_private_reconciler_proto_rawDescOnce.Do(func() {
		file_iks_private_reconciler_proto_rawDescData = protoimpl.X.CompressGZIP(file_iks_private_reconciler_proto_rawDescData)
	})
	return file_iks_private_reconciler_proto_rawDescData
}

var file_iks_private_reconciler_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_iks_private_reconciler_proto_goTypes = []interface{}{
	(*ClusterDeletionRequest)(nil),            // 0: proto.ClusterDeletionRequest
	(*ClusterReconcilerRequest)(nil),          // 1: proto.ClusterReconcilerRequest
	(*ClusterReconcilerResponseCluster)(nil),  // 2: proto.ClusterReconcilerResponseCluster
	(*ClusterReconcilerResponse)(nil),         // 3: proto.ClusterReconcilerResponse
	(*UpdateClusterStateRequest)(nil),         // 4: proto.UpdateClusterStateRequest
	(*UpdateClusterChangeAppliedRequest)(nil), // 5: proto.UpdateClusterChangeAppliedRequest
	(*NodeStatusRequest)(nil),                 // 6: proto.NodeStatusRequest
	(*NodeGroupStatusRequest)(nil),            // 7: proto.NodeGroupStatusRequest
	(*AddonStatusRequest)(nil),                // 8: proto.AddonStatusRequest
	(*IlbStatusRequest)(nil),                  // 9: proto.IlbStatusRequest
	(*IlbConditionsStatusRequest)(nil),        // 10: proto.ilbConditionsStatusRequest
	(*StorageStatusRequest)(nil),              // 11: proto.StorageStatusRequest
	(*FirewallStatusRequest)(nil),             // 12: proto.FirewallStatusRequest
	(*ClusterStatusRequest)(nil),              // 13: proto.ClusterStatusRequest
	(*UpdateClusterStatusRequest)(nil),        // 14: proto.UpdateClusterStatusRequest
	(*UpdateClusterCertsRequest)(nil),         // 15: proto.UpdateClusterCertsRequest
	(*WekaStorageStatus)(nil),                 // 16: proto.WekaStorageStatus
	(*emptypb.Empty)(nil),                     // 17: google.protobuf.Empty
}
var file_iks_private_reconciler_proto_depIdxs = []int32{
	2,  // 0: proto.ClusterReconcilerResponse.clusters:type_name -> proto.ClusterReconcilerResponseCluster
	16, // 1: proto.NodeStatusRequest.wekaStorage:type_name -> proto.WekaStorageStatus
	6,  // 2: proto.NodeGroupStatusRequest.nodes:type_name -> proto.NodeStatusRequest
	10, // 3: proto.IlbStatusRequest.conditions:type_name -> proto.ilbConditionsStatusRequest
	7,  // 4: proto.ClusterStatusRequest.nodegroups:type_name -> proto.NodeGroupStatusRequest
	8,  // 5: proto.ClusterStatusRequest.addons:type_name -> proto.AddonStatusRequest
	9,  // 6: proto.ClusterStatusRequest.ilbs:type_name -> proto.IlbStatusRequest
	11, // 7: proto.ClusterStatusRequest.storages:type_name -> proto.StorageStatusRequest
	12, // 8: proto.ClusterStatusRequest.firewall:type_name -> proto.FirewallStatusRequest
	13, // 9: proto.UpdateClusterStatusRequest.clusterStatus:type_name -> proto.ClusterStatusRequest
	1,  // 10: proto.IksPrivateReconciler.GetClustersReconciler:input_type -> proto.ClusterReconcilerRequest
	4,  // 11: proto.IksPrivateReconciler.PutClusterStateReconciler:input_type -> proto.UpdateClusterStateRequest
	5,  // 12: proto.IksPrivateReconciler.PutClusterChangeAppliedReconciler:input_type -> proto.UpdateClusterChangeAppliedRequest
	14, // 13: proto.IksPrivateReconciler.PutClusterStatusReconciler:input_type -> proto.UpdateClusterStatusRequest
	15, // 14: proto.IksPrivateReconciler.PutClusterCertsReconciler:input_type -> proto.UpdateClusterCertsRequest
	0,  // 15: proto.IksPrivateReconciler.DeleteClusterReconciler:input_type -> proto.ClusterDeletionRequest
	3,  // 16: proto.IksPrivateReconciler.GetClustersReconciler:output_type -> proto.ClusterReconcilerResponse
	17, // 17: proto.IksPrivateReconciler.PutClusterStateReconciler:output_type -> google.protobuf.Empty
	17, // 18: proto.IksPrivateReconciler.PutClusterChangeAppliedReconciler:output_type -> google.protobuf.Empty
	17, // 19: proto.IksPrivateReconciler.PutClusterStatusReconciler:output_type -> google.protobuf.Empty
	17, // 20: proto.IksPrivateReconciler.PutClusterCertsReconciler:output_type -> google.protobuf.Empty
	17, // 21: proto.IksPrivateReconciler.DeleteClusterReconciler:output_type -> google.protobuf.Empty
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_iks_private_reconciler_proto_init() }
func file_iks_private_reconciler_proto_init() {
	if File_iks_private_reconciler_proto != nil {
		return
	}
	file_annotations_proto_init()
	file_iks_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iks_private_reconciler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterDeletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterReconcilerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterReconcilerResponseCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterReconcilerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterChangeAppliedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeGroupStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddonStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IlbStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IlbConditionsStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirewallStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iks_private_reconciler_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterCertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iks_private_reconciler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iks_private_reconciler_proto_goTypes,
		DependencyIndexes: file_iks_private_reconciler_proto_depIdxs,
		MessageInfos:      file_iks_private_reconciler_proto_msgTypes,
	}.Build()
	File_iks_private_reconciler_proto = out.File
	file_iks_private_reconciler_proto_rawDesc = nil
	file_iks_private_reconciler_proto_goTypes = nil
	file_iks_private_reconciler_proto_depIdxs = nil
}
