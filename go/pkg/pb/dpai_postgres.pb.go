// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: dpai_postgres.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DpaiPostgresDeploymentMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId     string                `protobuf:"bytes,1,opt,name=deploymentId,proto3" json:"deploymentId,omitempty"`
	DeploymentStatus *DpaiDeploymentStatus `protobuf:"bytes,2,opt,name=deploymentStatus,proto3" json:"deploymentStatus,omitempty"`
	CloudAccountId   string                `protobuf:"bytes,3,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresDeploymentMeta) Reset() {
	*x = DpaiPostgresDeploymentMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresDeploymentMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresDeploymentMeta) ProtoMessage() {}

func (x *DpaiPostgresDeploymentMeta) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresDeploymentMeta.ProtoReflect.Descriptor instead.
func (*DpaiPostgresDeploymentMeta) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{0}
}

func (x *DpaiPostgresDeploymentMeta) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DpaiPostgresDeploymentMeta) GetDeploymentStatus() *DpaiDeploymentStatus {
	if x != nil {
		return x.DeploymentStatus
	}
	return nil
}

func (x *DpaiPostgresDeploymentMeta) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresAdminProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminUsername                string               `protobuf:"bytes,1,opt,name=adminUsername,proto3" json:"adminUsername,omitempty"`
	AdminPassword                string               `protobuf:"bytes,2,opt,name=adminPassword,proto3" json:"adminPassword,omitempty"`
	AdminPasswordSecretReference *DpaiSecretReference `protobuf:"bytes,3,opt,name=adminPasswordSecretReference,proto3" json:"adminPasswordSecretReference,omitempty"`
}

func (x *DpaiPostgresAdminProperties) Reset() {
	*x = DpaiPostgresAdminProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresAdminProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresAdminProperties) ProtoMessage() {}

func (x *DpaiPostgresAdminProperties) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresAdminProperties.ProtoReflect.Descriptor instead.
func (*DpaiPostgresAdminProperties) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{1}
}

func (x *DpaiPostgresAdminProperties) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *DpaiPostgresAdminProperties) GetAdminPassword() string {
	if x != nil {
		return x.AdminPassword
	}
	return ""
}

func (x *DpaiPostgresAdminProperties) GetAdminPasswordSecretReference() *DpaiSecretReference {
	if x != nil {
		return x.AdminPasswordSecretReference
	}
	return nil
}

type DpaiPostgresSizePgPoolProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfInstancesDefault int32  `protobuf:"varint,1,opt,name=numberOfInstancesDefault,proto3" json:"numberOfInstancesDefault,omitempty"`
	NumberOfInstancesMin     int32  `protobuf:"varint,2,opt,name=numberOfInstancesMin,proto3" json:"numberOfInstancesMin,omitempty"`
	NumberOfInstancesMax     int32  `protobuf:"varint,3,opt,name=numberOfInstancesMax,proto3" json:"numberOfInstancesMax,omitempty"`
	ResourceCpuLimit         string `protobuf:"bytes,4,opt,name=resourceCpuLimit,proto3" json:"resourceCpuLimit,omitempty"`
	ResourceCpuRequest       string `protobuf:"bytes,5,opt,name=resourceCpuRequest,proto3" json:"resourceCpuRequest,omitempty"`
	ResourceMemoryLimit      string `protobuf:"bytes,6,opt,name=resourceMemoryLimit,proto3" json:"resourceMemoryLimit,omitempty"`
	ResourceMemoryRequest    string `protobuf:"bytes,7,opt,name=resourceMemoryRequest,proto3" json:"resourceMemoryRequest,omitempty"`
}

func (x *DpaiPostgresSizePgPoolProperties) Reset() {
	*x = DpaiPostgresSizePgPoolProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizePgPoolProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizePgPoolProperties) ProtoMessage() {}

func (x *DpaiPostgresSizePgPoolProperties) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizePgPoolProperties.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizePgPoolProperties) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{2}
}

func (x *DpaiPostgresSizePgPoolProperties) GetNumberOfInstancesDefault() int32 {
	if x != nil {
		return x.NumberOfInstancesDefault
	}
	return 0
}

func (x *DpaiPostgresSizePgPoolProperties) GetNumberOfInstancesMin() int32 {
	if x != nil {
		return x.NumberOfInstancesMin
	}
	return 0
}

func (x *DpaiPostgresSizePgPoolProperties) GetNumberOfInstancesMax() int32 {
	if x != nil {
		return x.NumberOfInstancesMax
	}
	return 0
}

func (x *DpaiPostgresSizePgPoolProperties) GetResourceCpuLimit() string {
	if x != nil {
		return x.ResourceCpuLimit
	}
	return ""
}

func (x *DpaiPostgresSizePgPoolProperties) GetResourceCpuRequest() string {
	if x != nil {
		return x.ResourceCpuRequest
	}
	return ""
}

func (x *DpaiPostgresSizePgPoolProperties) GetResourceMemoryLimit() string {
	if x != nil {
		return x.ResourceMemoryLimit
	}
	return ""
}

func (x *DpaiPostgresSizePgPoolProperties) GetResourceMemoryRequest() string {
	if x != nil {
		return x.ResourceMemoryRequest
	}
	return ""
}

type DpaiPostgresSizeDiskProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiskSizeInGbDefault int32  `protobuf:"varint,1,opt,name=diskSizeInGbDefault,proto3" json:"diskSizeInGbDefault,omitempty"`
	DiskSizeInGbMin     int32  `protobuf:"varint,2,opt,name=diskSizeInGbMin,proto3" json:"diskSizeInGbMin,omitempty"`
	DiskSizeInGbMax     int32  `protobuf:"varint,3,opt,name=diskSizeInGbMax,proto3" json:"diskSizeInGbMax,omitempty"`
	StorageClassName    string `protobuf:"bytes,4,opt,name=storageClassName,proto3" json:"storageClassName,omitempty"`
}

func (x *DpaiPostgresSizeDiskProperties) Reset() {
	*x = DpaiPostgresSizeDiskProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeDiskProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeDiskProperties) ProtoMessage() {}

func (x *DpaiPostgresSizeDiskProperties) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeDiskProperties.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeDiskProperties) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{3}
}

func (x *DpaiPostgresSizeDiskProperties) GetDiskSizeInGbDefault() int32 {
	if x != nil {
		return x.DiskSizeInGbDefault
	}
	return 0
}

func (x *DpaiPostgresSizeDiskProperties) GetDiskSizeInGbMin() int32 {
	if x != nil {
		return x.DiskSizeInGbMin
	}
	return 0
}

func (x *DpaiPostgresSizeDiskProperties) GetDiskSizeInGbMax() int32 {
	if x != nil {
		return x.DiskSizeInGbMax
	}
	return 0
}

func (x *DpaiPostgresSizeDiskProperties) GetStorageClassName() string {
	if x != nil {
		return x.StorageClassName
	}
	return ""
}

type DpaiPostgresSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                     string                            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description              string                            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	NumberOfInstancesDefault int32                             `protobuf:"varint,4,opt,name=numberOfInstancesDefault,proto3" json:"numberOfInstancesDefault,omitempty"`
	NumberOfInstancesMin     int32                             `protobuf:"varint,5,opt,name=numberOfInstancesMin,proto3" json:"numberOfInstancesMin,omitempty"`
	NumberOfInstancesMax     int32                             `protobuf:"varint,6,opt,name=numberOfInstancesMax,proto3" json:"numberOfInstancesMax,omitempty"`
	ResourceCpuLimit         string                            `protobuf:"bytes,8,opt,name=resourceCpuLimit,proto3" json:"resourceCpuLimit,omitempty"`
	ResourceCpuRequest       string                            `protobuf:"bytes,9,opt,name=resourceCpuRequest,proto3" json:"resourceCpuRequest,omitempty"`
	ResourceMemoryLimit      string                            `protobuf:"bytes,10,opt,name=resourceMemoryLimit,proto3" json:"resourceMemoryLimit,omitempty"`
	ResourceMemoryRequest    string                            `protobuf:"bytes,11,opt,name=resourceMemoryRequest,proto3" json:"resourceMemoryRequest,omitempty"`
	PgPoolProperties         *DpaiPostgresSizePgPoolProperties `protobuf:"bytes,12,opt,name=pgPoolProperties,proto3" json:"pgPoolProperties,omitempty"`
	DiskProperties           *DpaiPostgresSizeDiskProperties   `protobuf:"bytes,13,opt,name=diskProperties,proto3" json:"diskProperties,omitempty"`
	Metadata                 *DpaiMeta                         `protobuf:"bytes,14,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *DpaiPostgresSize) Reset() {
	*x = DpaiPostgresSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSize) ProtoMessage() {}

func (x *DpaiPostgresSize) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSize.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSize) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{4}
}

func (x *DpaiPostgresSize) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresSize) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiPostgresSize) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiPostgresSize) GetNumberOfInstancesDefault() int32 {
	if x != nil {
		return x.NumberOfInstancesDefault
	}
	return 0
}

func (x *DpaiPostgresSize) GetNumberOfInstancesMin() int32 {
	if x != nil {
		return x.NumberOfInstancesMin
	}
	return 0
}

func (x *DpaiPostgresSize) GetNumberOfInstancesMax() int32 {
	if x != nil {
		return x.NumberOfInstancesMax
	}
	return 0
}

func (x *DpaiPostgresSize) GetResourceCpuLimit() string {
	if x != nil {
		return x.ResourceCpuLimit
	}
	return ""
}

func (x *DpaiPostgresSize) GetResourceCpuRequest() string {
	if x != nil {
		return x.ResourceCpuRequest
	}
	return ""
}

func (x *DpaiPostgresSize) GetResourceMemoryLimit() string {
	if x != nil {
		return x.ResourceMemoryLimit
	}
	return ""
}

func (x *DpaiPostgresSize) GetResourceMemoryRequest() string {
	if x != nil {
		return x.ResourceMemoryRequest
	}
	return ""
}

func (x *DpaiPostgresSize) GetPgPoolProperties() *DpaiPostgresSizePgPoolProperties {
	if x != nil {
		return x.PgPoolProperties
	}
	return nil
}

func (x *DpaiPostgresSize) GetDiskProperties() *DpaiPostgresSizeDiskProperties {
	if x != nil {
		return x.DiskProperties
	}
	return nil
}

func (x *DpaiPostgresSize) GetMetadata() *DpaiMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DpaiPostgresSizeCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description              string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	NumberOfInstancesDefault int32                             `protobuf:"varint,3,opt,name=numberOfInstancesDefault,proto3" json:"numberOfInstancesDefault,omitempty"`
	NumberOfInstancesMin     int32                             `protobuf:"varint,4,opt,name=numberOfInstancesMin,proto3" json:"numberOfInstancesMin,omitempty"`
	NumberOfInstancesMax     int32                             `protobuf:"varint,5,opt,name=numberOfInstancesMax,proto3" json:"numberOfInstancesMax,omitempty"`
	ResourceCpuLimit         string                            `protobuf:"bytes,6,opt,name=resourceCpuLimit,proto3" json:"resourceCpuLimit,omitempty"`
	ResourceCpuRequest       string                            `protobuf:"bytes,7,opt,name=resourceCpuRequest,proto3" json:"resourceCpuRequest,omitempty"`
	ResourceMemoryLimit      string                            `protobuf:"bytes,8,opt,name=resourceMemoryLimit,proto3" json:"resourceMemoryLimit,omitempty"`
	ResourceMemoryRequest    string                            `protobuf:"bytes,9,opt,name=resourceMemoryRequest,proto3" json:"resourceMemoryRequest,omitempty"`
	PgPoolProperties         *DpaiPostgresSizePgPoolProperties `protobuf:"bytes,10,opt,name=pgPoolProperties,proto3" json:"pgPoolProperties,omitempty"`
	DiskProperties           *DpaiPostgresSizeDiskProperties   `protobuf:"bytes,11,opt,name=diskProperties,proto3" json:"diskProperties,omitempty"`
	CloudAccountId           string                            `protobuf:"bytes,12,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresSizeCreateRequest) Reset() {
	*x = DpaiPostgresSizeCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeCreateRequest) ProtoMessage() {}

func (x *DpaiPostgresSizeCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeCreateRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeCreateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{5}
}

func (x *DpaiPostgresSizeCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiPostgresSizeCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiPostgresSizeCreateRequest) GetNumberOfInstancesDefault() int32 {
	if x != nil {
		return x.NumberOfInstancesDefault
	}
	return 0
}

func (x *DpaiPostgresSizeCreateRequest) GetNumberOfInstancesMin() int32 {
	if x != nil {
		return x.NumberOfInstancesMin
	}
	return 0
}

func (x *DpaiPostgresSizeCreateRequest) GetNumberOfInstancesMax() int32 {
	if x != nil {
		return x.NumberOfInstancesMax
	}
	return 0
}

func (x *DpaiPostgresSizeCreateRequest) GetResourceCpuLimit() string {
	if x != nil {
		return x.ResourceCpuLimit
	}
	return ""
}

func (x *DpaiPostgresSizeCreateRequest) GetResourceCpuRequest() string {
	if x != nil {
		return x.ResourceCpuRequest
	}
	return ""
}

func (x *DpaiPostgresSizeCreateRequest) GetResourceMemoryLimit() string {
	if x != nil {
		return x.ResourceMemoryLimit
	}
	return ""
}

func (x *DpaiPostgresSizeCreateRequest) GetResourceMemoryRequest() string {
	if x != nil {
		return x.ResourceMemoryRequest
	}
	return ""
}

func (x *DpaiPostgresSizeCreateRequest) GetPgPoolProperties() *DpaiPostgresSizePgPoolProperties {
	if x != nil {
		return x.PgPoolProperties
	}
	return nil
}

func (x *DpaiPostgresSizeCreateRequest) GetDiskProperties() *DpaiPostgresSizeDiskProperties {
	if x != nil {
		return x.DiskProperties
	}
	return nil
}

func (x *DpaiPostgresSizeCreateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresSizeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresSizeListRequest) Reset() {
	*x = DpaiPostgresSizeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeListRequest) ProtoMessage() {}

func (x *DpaiPostgresSizeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeListRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeListRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{6}
}

func (x *DpaiPostgresSizeListRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresSizeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*DpaiPostgresSize `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	HasMore   bool                `protobuf:"varint,2,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	NextToken string              `protobuf:"bytes,3,opt,name=nextToken,proto3" json:"nextToken,omitempty"`
	PrevToken string              `protobuf:"bytes,4,opt,name=prevToken,proto3" json:"prevToken,omitempty"`
}

func (x *DpaiPostgresSizeListResponse) Reset() {
	*x = DpaiPostgresSizeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeListResponse) ProtoMessage() {}

func (x *DpaiPostgresSizeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeListResponse.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeListResponse) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{7}
}

func (x *DpaiPostgresSizeListResponse) GetData() []*DpaiPostgresSize {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DpaiPostgresSizeListResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *DpaiPostgresSizeListResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

func (x *DpaiPostgresSizeListResponse) GetPrevToken() string {
	if x != nil {
		return x.PrevToken
	}
	return ""
}

type DpaiPostgresSizeGetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresSizeGetByIdRequest) Reset() {
	*x = DpaiPostgresSizeGetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeGetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeGetByIdRequest) ProtoMessage() {}

func (x *DpaiPostgresSizeGetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeGetByIdRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeGetByIdRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{8}
}

func (x *DpaiPostgresSizeGetByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresSizeGetByIdRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresSizeGetByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresSizeGetByNameRequest) Reset() {
	*x = DpaiPostgresSizeGetByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeGetByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeGetByNameRequest) ProtoMessage() {}

func (x *DpaiPostgresSizeGetByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeGetByNameRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeGetByNameRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{9}
}

func (x *DpaiPostgresSizeGetByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiPostgresSizeGetByNameRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresSizeUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description              string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	NumberOfInstancesDefault int32                             `protobuf:"varint,3,opt,name=numberOfInstancesDefault,proto3" json:"numberOfInstancesDefault,omitempty"`
	NumberOfInstancesMin     int32                             `protobuf:"varint,4,opt,name=numberOfInstancesMin,proto3" json:"numberOfInstancesMin,omitempty"`
	NumberOfInstancesMax     int32                             `protobuf:"varint,5,opt,name=numberOfInstancesMax,proto3" json:"numberOfInstancesMax,omitempty"`
	ResourceCpuLimit         string                            `protobuf:"bytes,6,opt,name=resourceCpuLimit,proto3" json:"resourceCpuLimit,omitempty"`
	ResourceCpuRequest       string                            `protobuf:"bytes,7,opt,name=resourceCpuRequest,proto3" json:"resourceCpuRequest,omitempty"`
	ResourceMemoryLimit      string                            `protobuf:"bytes,8,opt,name=resourceMemoryLimit,proto3" json:"resourceMemoryLimit,omitempty"`
	ResourceMemoryRequest    string                            `protobuf:"bytes,9,opt,name=resourceMemoryRequest,proto3" json:"resourceMemoryRequest,omitempty"`
	PgPoolProperties         *DpaiPostgresSizePgPoolProperties `protobuf:"bytes,10,opt,name=pgPoolProperties,proto3" json:"pgPoolProperties,omitempty"`
	DiskProperties           *DpaiPostgresSizeDiskProperties   `protobuf:"bytes,11,opt,name=diskProperties,proto3" json:"diskProperties,omitempty"`
	CloudAccountId           string                            `protobuf:"bytes,12,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresSizeUpdateRequest) Reset() {
	*x = DpaiPostgresSizeUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeUpdateRequest) ProtoMessage() {}

func (x *DpaiPostgresSizeUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeUpdateRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeUpdateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{10}
}

func (x *DpaiPostgresSizeUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresSizeUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiPostgresSizeUpdateRequest) GetNumberOfInstancesDefault() int32 {
	if x != nil {
		return x.NumberOfInstancesDefault
	}
	return 0
}

func (x *DpaiPostgresSizeUpdateRequest) GetNumberOfInstancesMin() int32 {
	if x != nil {
		return x.NumberOfInstancesMin
	}
	return 0
}

func (x *DpaiPostgresSizeUpdateRequest) GetNumberOfInstancesMax() int32 {
	if x != nil {
		return x.NumberOfInstancesMax
	}
	return 0
}

func (x *DpaiPostgresSizeUpdateRequest) GetResourceCpuLimit() string {
	if x != nil {
		return x.ResourceCpuLimit
	}
	return ""
}

func (x *DpaiPostgresSizeUpdateRequest) GetResourceCpuRequest() string {
	if x != nil {
		return x.ResourceCpuRequest
	}
	return ""
}

func (x *DpaiPostgresSizeUpdateRequest) GetResourceMemoryLimit() string {
	if x != nil {
		return x.ResourceMemoryLimit
	}
	return ""
}

func (x *DpaiPostgresSizeUpdateRequest) GetResourceMemoryRequest() string {
	if x != nil {
		return x.ResourceMemoryRequest
	}
	return ""
}

func (x *DpaiPostgresSizeUpdateRequest) GetPgPoolProperties() *DpaiPostgresSizePgPoolProperties {
	if x != nil {
		return x.PgPoolProperties
	}
	return nil
}

func (x *DpaiPostgresSizeUpdateRequest) GetDiskProperties() *DpaiPostgresSizeDiskProperties {
	if x != nil {
		return x.DiskProperties
	}
	return nil
}

func (x *DpaiPostgresSizeUpdateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresSizeDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresSizeDeleteRequest) Reset() {
	*x = DpaiPostgresSizeDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeDeleteRequest) ProtoMessage() {}

func (x *DpaiPostgresSizeDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeDeleteRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeDeleteRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{11}
}

func (x *DpaiPostgresSizeDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresSizeDeleteRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresSizeDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *DpaiPostgresSizeDeleteResponse) Reset() {
	*x = DpaiPostgresSizeDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeDeleteResponse) ProtoMessage() {}

func (x *DpaiPostgresSizeDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeDeleteResponse.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeDeleteResponse) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{12}
}

func (x *DpaiPostgresSizeDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DpaiPostgresSizeDeleteResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type DpaiPostgresVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                   string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description            string              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Version                string              `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	PostgresVersion        string              `protobuf:"bytes,5,opt,name=postgresVersion,proto3" json:"postgresVersion,omitempty"`
	ImageReference         string              `protobuf:"bytes,6,opt,name=imageReference,proto3" json:"imageReference,omitempty"`
	ChartReference         *DpaiChartReference `protobuf:"bytes,7,opt,name=chartReference,proto3" json:"chartReference,omitempty"`
	BackwardCompatibleFrom string              `protobuf:"bytes,8,opt,name=backwardCompatibleFrom,proto3" json:"backwardCompatibleFrom,omitempty"`
	Metadata               *DpaiMeta           `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *DpaiPostgresVersion) Reset() {
	*x = DpaiPostgresVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresVersion) ProtoMessage() {}

func (x *DpaiPostgresVersion) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresVersion.ProtoReflect.Descriptor instead.
func (*DpaiPostgresVersion) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{13}
}

func (x *DpaiPostgresVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresVersion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiPostgresVersion) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiPostgresVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DpaiPostgresVersion) GetPostgresVersion() string {
	if x != nil {
		return x.PostgresVersion
	}
	return ""
}

func (x *DpaiPostgresVersion) GetImageReference() string {
	if x != nil {
		return x.ImageReference
	}
	return ""
}

func (x *DpaiPostgresVersion) GetChartReference() *DpaiChartReference {
	if x != nil {
		return x.ChartReference
	}
	return nil
}

func (x *DpaiPostgresVersion) GetBackwardCompatibleFrom() string {
	if x != nil {
		return x.BackwardCompatibleFrom
	}
	return ""
}

func (x *DpaiPostgresVersion) GetMetadata() *DpaiMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DpaiPostgresVersionCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description            string              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Version                string              `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	PostgresVersion        string              `protobuf:"bytes,4,opt,name=postgresVersion,proto3" json:"postgresVersion,omitempty"`
	ImageReference         string              `protobuf:"bytes,5,opt,name=imageReference,proto3" json:"imageReference,omitempty"`
	ChartReference         *DpaiChartReference `protobuf:"bytes,6,opt,name=chartReference,proto3" json:"chartReference,omitempty"`
	BackwardCompatibleFrom string              `protobuf:"bytes,7,opt,name=backwardCompatibleFrom,proto3" json:"backwardCompatibleFrom,omitempty"`
	CloudAccountId         string              `protobuf:"bytes,8,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresVersionCreateRequest) Reset() {
	*x = DpaiPostgresVersionCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresVersionCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresVersionCreateRequest) ProtoMessage() {}

func (x *DpaiPostgresVersionCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresVersionCreateRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresVersionCreateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{14}
}

func (x *DpaiPostgresVersionCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiPostgresVersionCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiPostgresVersionCreateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DpaiPostgresVersionCreateRequest) GetPostgresVersion() string {
	if x != nil {
		return x.PostgresVersion
	}
	return ""
}

func (x *DpaiPostgresVersionCreateRequest) GetImageReference() string {
	if x != nil {
		return x.ImageReference
	}
	return ""
}

func (x *DpaiPostgresVersionCreateRequest) GetChartReference() *DpaiChartReference {
	if x != nil {
		return x.ChartReference
	}
	return nil
}

func (x *DpaiPostgresVersionCreateRequest) GetBackwardCompatibleFrom() string {
	if x != nil {
		return x.BackwardCompatibleFrom
	}
	return ""
}

func (x *DpaiPostgresVersionCreateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresVersionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresVersionListRequest) Reset() {
	*x = DpaiPostgresVersionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresVersionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresVersionListRequest) ProtoMessage() {}

func (x *DpaiPostgresVersionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresVersionListRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresVersionListRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{15}
}

func (x *DpaiPostgresVersionListRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresVersionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*DpaiPostgresVersion `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	HasMore   bool                   `protobuf:"varint,2,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	NextToken string                 `protobuf:"bytes,3,opt,name=nextToken,proto3" json:"nextToken,omitempty"`
	PrevToken string                 `protobuf:"bytes,4,opt,name=prevToken,proto3" json:"prevToken,omitempty"`
}

func (x *DpaiPostgresVersionListResponse) Reset() {
	*x = DpaiPostgresVersionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresVersionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresVersionListResponse) ProtoMessage() {}

func (x *DpaiPostgresVersionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresVersionListResponse.ProtoReflect.Descriptor instead.
func (*DpaiPostgresVersionListResponse) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{16}
}

func (x *DpaiPostgresVersionListResponse) GetData() []*DpaiPostgresVersion {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DpaiPostgresVersionListResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *DpaiPostgresVersionListResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

func (x *DpaiPostgresVersionListResponse) GetPrevToken() string {
	if x != nil {
		return x.PrevToken
	}
	return ""
}

type DpaiPostgresVersionGetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresVersionGetByIdRequest) Reset() {
	*x = DpaiPostgresVersionGetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresVersionGetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresVersionGetByIdRequest) ProtoMessage() {}

func (x *DpaiPostgresVersionGetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresVersionGetByIdRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresVersionGetByIdRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{17}
}

func (x *DpaiPostgresVersionGetByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresVersionGetByIdRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresVersionGetByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresVersionGetByNameRequest) Reset() {
	*x = DpaiPostgresVersionGetByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresVersionGetByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresVersionGetByNameRequest) ProtoMessage() {}

func (x *DpaiPostgresVersionGetByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresVersionGetByNameRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresVersionGetByNameRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{18}
}

func (x *DpaiPostgresVersionGetByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiPostgresVersionGetByNameRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresVersionUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description            string              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ImageReference         string              `protobuf:"bytes,3,opt,name=imageReference,proto3" json:"imageReference,omitempty"`
	ChartReference         *DpaiChartReference `protobuf:"bytes,4,opt,name=chartReference,proto3" json:"chartReference,omitempty"`
	BackwardCompatibleFrom string              `protobuf:"bytes,5,opt,name=backwardCompatibleFrom,proto3" json:"backwardCompatibleFrom,omitempty"`
	CloudAccountId         string              `protobuf:"bytes,6,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresVersionUpdateRequest) Reset() {
	*x = DpaiPostgresVersionUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresVersionUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresVersionUpdateRequest) ProtoMessage() {}

func (x *DpaiPostgresVersionUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresVersionUpdateRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresVersionUpdateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{19}
}

func (x *DpaiPostgresVersionUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresVersionUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiPostgresVersionUpdateRequest) GetImageReference() string {
	if x != nil {
		return x.ImageReference
	}
	return ""
}

func (x *DpaiPostgresVersionUpdateRequest) GetChartReference() *DpaiChartReference {
	if x != nil {
		return x.ChartReference
	}
	return nil
}

func (x *DpaiPostgresVersionUpdateRequest) GetBackwardCompatibleFrom() string {
	if x != nil {
		return x.BackwardCompatibleFrom
	}
	return ""
}

func (x *DpaiPostgresVersionUpdateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresVersionDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresVersionDeleteRequest) Reset() {
	*x = DpaiPostgresVersionDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresVersionDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresVersionDeleteRequest) ProtoMessage() {}

func (x *DpaiPostgresVersionDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresVersionDeleteRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresVersionDeleteRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{20}
}

func (x *DpaiPostgresVersionDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresVersionDeleteRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresVersionDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *DpaiPostgresVersionDeleteResponse) Reset() {
	*x = DpaiPostgresVersionDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresVersionDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresVersionDeleteResponse) ProtoMessage() {}

func (x *DpaiPostgresVersionDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresVersionDeleteResponse.ProtoReflect.Descriptor instead.
func (*DpaiPostgresVersionDeleteResponse) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{21}
}

func (x *DpaiPostgresVersionDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DpaiPostgresVersionDeleteResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type DpaiPostgresSizeProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeId                  string `protobuf:"bytes,1,opt,name=sizeId,proto3" json:"sizeId,omitempty"`
	NumberOfInstances       int32  `protobuf:"varint,2,opt,name=numberOfInstances,proto3" json:"numberOfInstances,omitempty"`
	NumberOfPgPoolInstances int32  `protobuf:"varint,3,opt,name=numberOfPgPoolInstances,proto3" json:"numberOfPgPoolInstances,omitempty"`
	DiskSizeInGb            int32  `protobuf:"varint,4,opt,name=diskSizeInGb,proto3" json:"diskSizeInGb,omitempty"`
}

func (x *DpaiPostgresSizeProperties) Reset() {
	*x = DpaiPostgresSizeProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresSizeProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresSizeProperties) ProtoMessage() {}

func (x *DpaiPostgresSizeProperties) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresSizeProperties.ProtoReflect.Descriptor instead.
func (*DpaiPostgresSizeProperties) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{22}
}

func (x *DpaiPostgresSizeProperties) GetSizeId() string {
	if x != nil {
		return x.SizeId
	}
	return ""
}

func (x *DpaiPostgresSizeProperties) GetNumberOfInstances() int32 {
	if x != nil {
		return x.NumberOfInstances
	}
	return 0
}

func (x *DpaiPostgresSizeProperties) GetNumberOfPgPoolInstances() int32 {
	if x != nil {
		return x.NumberOfPgPoolInstances
	}
	return 0
}

func (x *DpaiPostgresSizeProperties) GetDiskSizeInGb() int32 {
	if x != nil {
		return x.DiskSizeInGb
	}
	return 0
}

type DpaiPostgresOptionalProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitialDatabaseName string `protobuf:"bytes,1,opt,name=initialDatabaseName,proto3" json:"initialDatabaseName,omitempty"`
}

func (x *DpaiPostgresOptionalProperties) Reset() {
	*x = DpaiPostgresOptionalProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresOptionalProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresOptionalProperties) ProtoMessage() {}

func (x *DpaiPostgresOptionalProperties) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresOptionalProperties.ProtoReflect.Descriptor instead.
func (*DpaiPostgresOptionalProperties) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{23}
}

func (x *DpaiPostgresOptionalProperties) GetInitialDatabaseName() string {
	if x != nil {
		return x.InitialDatabaseName
	}
	return ""
}

type DpaiPostgres struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId          string                          `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Id                   string                          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                          `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	VersionId            string                          `protobuf:"bytes,5,opt,name=versionId,proto3" json:"versionId,omitempty"`
	SizeProperties       *DpaiPostgresSizeProperties     `protobuf:"bytes,6,opt,name=sizeProperties,proto3" json:"sizeProperties,omitempty"`
	OptionalProperties   *DpaiPostgresOptionalProperties `protobuf:"bytes,7,opt,name=optionalProperties,proto3" json:"optionalProperties,omitempty"`
	AdminProperties      *DpaiPostgresAdminProperties    `protobuf:"bytes,10,opt,name=adminProperties,proto3" json:"adminProperties,omitempty"`
	AdvanceConfiguration map[string]string               `protobuf:"bytes,11,rep,name=advanceConfiguration,proto3" json:"advanceConfiguration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags                 map[string]string               `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ServerUrl            string                          `protobuf:"bytes,13,opt,name=serverUrl,proto3" json:"serverUrl,omitempty"`
	Metadata             *DpaiMeta                       `protobuf:"bytes,14,opt,name=metadata,proto3" json:"metadata,omitempty"`
	DeploymentMetadata   *DpaiPostgresDeploymentMeta     `protobuf:"bytes,15,opt,name=deploymentMetadata,proto3" json:"deploymentMetadata,omitempty"`
}

func (x *DpaiPostgres) Reset() {
	*x = DpaiPostgres{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgres) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgres) ProtoMessage() {}

func (x *DpaiPostgres) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgres.ProtoReflect.Descriptor instead.
func (*DpaiPostgres) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{24}
}

func (x *DpaiPostgres) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgres) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgres) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiPostgres) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiPostgres) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *DpaiPostgres) GetSizeProperties() *DpaiPostgresSizeProperties {
	if x != nil {
		return x.SizeProperties
	}
	return nil
}

func (x *DpaiPostgres) GetOptionalProperties() *DpaiPostgresOptionalProperties {
	if x != nil {
		return x.OptionalProperties
	}
	return nil
}

func (x *DpaiPostgres) GetAdminProperties() *DpaiPostgresAdminProperties {
	if x != nil {
		return x.AdminProperties
	}
	return nil
}

func (x *DpaiPostgres) GetAdvanceConfiguration() map[string]string {
	if x != nil {
		return x.AdvanceConfiguration
	}
	return nil
}

func (x *DpaiPostgres) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DpaiPostgres) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

func (x *DpaiPostgres) GetMetadata() *DpaiMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DpaiPostgres) GetDeploymentMetadata() *DpaiPostgresDeploymentMeta {
	if x != nil {
		return x.DeploymentMetadata
	}
	return nil
}

type DpaiPostgresCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId          string                          `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Name                 string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                          `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	VersionId            string                          `protobuf:"bytes,4,opt,name=versionId,proto3" json:"versionId,omitempty"`
	SizeProperties       *DpaiPostgresSizeProperties     `protobuf:"bytes,5,opt,name=sizeProperties,proto3" json:"sizeProperties,omitempty"`
	OptionalProperties   *DpaiPostgresOptionalProperties `protobuf:"bytes,6,opt,name=optionalProperties,proto3" json:"optionalProperties,omitempty"`
	AdminProperties      *DpaiPostgresAdminProperties    `protobuf:"bytes,9,opt,name=adminProperties,proto3" json:"adminProperties,omitempty"`
	AdvanceConfiguration map[string]string               `protobuf:"bytes,10,rep,name=advanceConfiguration,proto3" json:"advanceConfiguration,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tags                 map[string]string               `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CreatedBy            string                          `protobuf:"bytes,12,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CloudAccountId       string                          `protobuf:"bytes,13,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresCreateRequest) Reset() {
	*x = DpaiPostgresCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresCreateRequest) ProtoMessage() {}

func (x *DpaiPostgresCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresCreateRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresCreateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{25}
}

func (x *DpaiPostgresCreateRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiPostgresCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiPostgresCreateRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *DpaiPostgresCreateRequest) GetSizeProperties() *DpaiPostgresSizeProperties {
	if x != nil {
		return x.SizeProperties
	}
	return nil
}

func (x *DpaiPostgresCreateRequest) GetOptionalProperties() *DpaiPostgresOptionalProperties {
	if x != nil {
		return x.OptionalProperties
	}
	return nil
}

func (x *DpaiPostgresCreateRequest) GetAdminProperties() *DpaiPostgresAdminProperties {
	if x != nil {
		return x.AdminProperties
	}
	return nil
}

func (x *DpaiPostgresCreateRequest) GetAdvanceConfiguration() map[string]string {
	if x != nil {
		return x.AdvanceConfiguration
	}
	return nil
}

func (x *DpaiPostgresCreateRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DpaiPostgresCreateRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *DpaiPostgresCreateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId    string `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresListRequest) Reset() {
	*x = DpaiPostgresListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresListRequest) ProtoMessage() {}

func (x *DpaiPostgresListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresListRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresListRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{26}
}

func (x *DpaiPostgresListRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresListRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []*DpaiPostgres `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	HasMore   bool            `protobuf:"varint,2,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	NextToken string          `protobuf:"bytes,3,opt,name=nextToken,proto3" json:"nextToken,omitempty"`
	PrevToken string          `protobuf:"bytes,4,opt,name=prevToken,proto3" json:"prevToken,omitempty"`
}

func (x *DpaiPostgresListResponse) Reset() {
	*x = DpaiPostgresListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresListResponse) ProtoMessage() {}

func (x *DpaiPostgresListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresListResponse.ProtoReflect.Descriptor instead.
func (*DpaiPostgresListResponse) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{27}
}

func (x *DpaiPostgresListResponse) GetData() []*DpaiPostgres {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DpaiPostgresListResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *DpaiPostgresListResponse) GetNextToken() string {
	if x != nil {
		return x.NextToken
	}
	return ""
}

func (x *DpaiPostgresListResponse) GetPrevToken() string {
	if x != nil {
		return x.PrevToken
	}
	return ""
}

type DpaiPostgresGetByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CloudAccountId string `protobuf:"bytes,3,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresGetByIdRequest) Reset() {
	*x = DpaiPostgresGetByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresGetByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresGetByIdRequest) ProtoMessage() {}

func (x *DpaiPostgresGetByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresGetByIdRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresGetByIdRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{28}
}

func (x *DpaiPostgresGetByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresGetByIdRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresGetByIdRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresGetByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	WorkspaceId    string `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CloudAccountId string `protobuf:"bytes,3,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresGetByNameRequest) Reset() {
	*x = DpaiPostgresGetByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresGetByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresGetByNameRequest) ProtoMessage() {}

func (x *DpaiPostgresGetByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresGetByNameRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresGetByNameRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{29}
}

func (x *DpaiPostgresGetByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DpaiPostgresGetByNameRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresGetByNameRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CloudAccountId string `protobuf:"bytes,3,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresDeleteRequest) Reset() {
	*x = DpaiPostgresDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresDeleteRequest) ProtoMessage() {}

func (x *DpaiPostgresDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresDeleteRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresDeleteRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{30}
}

func (x *DpaiPostgresDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresDeleteRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresDeleteRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description    string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Tags           map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WorkspaceId    string            `protobuf:"bytes,4,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CloudAccountId string            `protobuf:"bytes,5,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresUpdateRequest) Reset() {
	*x = DpaiPostgresUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresUpdateRequest) ProtoMessage() {}

func (x *DpaiPostgresUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresUpdateRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresUpdateRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{31}
}

func (x *DpaiPostgresUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DpaiPostgresUpdateRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DpaiPostgresUpdateRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresUpdateRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresRestartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CloudAccountId string `protobuf:"bytes,3,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresRestartRequest) Reset() {
	*x = DpaiPostgresRestartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresRestartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresRestartRequest) ProtoMessage() {}

func (x *DpaiPostgresRestartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresRestartRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresRestartRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{32}
}

func (x *DpaiPostgresRestartRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresRestartRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresRestartRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresResizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SizeProperties *DpaiPostgresSizeProperties `protobuf:"bytes,2,opt,name=sizeProperties,proto3" json:"sizeProperties,omitempty"`
	WorkspaceId    string                      `protobuf:"bytes,3,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CloudAccountId string                      `protobuf:"bytes,4,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresResizeRequest) Reset() {
	*x = DpaiPostgresResizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresResizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresResizeRequest) ProtoMessage() {}

func (x *DpaiPostgresResizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresResizeRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresResizeRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{33}
}

func (x *DpaiPostgresResizeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresResizeRequest) GetSizeProperties() *DpaiPostgresSizeProperties {
	if x != nil {
		return x.SizeProperties
	}
	return nil
}

func (x *DpaiPostgresResizeRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresResizeRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresListUpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId    string `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CloudAccountId string `protobuf:"bytes,3,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresListUpgradeRequest) Reset() {
	*x = DpaiPostgresListUpgradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresListUpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresListUpgradeRequest) ProtoMessage() {}

func (x *DpaiPostgresListUpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresListUpgradeRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresListUpgradeRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{34}
}

func (x *DpaiPostgresListUpgradeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresListUpgradeRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresListUpgradeRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type DpaiPostgresUpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VersionId      string `protobuf:"bytes,2,opt,name=versionId,proto3" json:"versionId,omitempty"`
	WorkspaceId    string `protobuf:"bytes,3,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	CloudAccountId string `protobuf:"bytes,4,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *DpaiPostgresUpgradeRequest) Reset() {
	*x = DpaiPostgresUpgradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dpai_postgres_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DpaiPostgresUpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DpaiPostgresUpgradeRequest) ProtoMessage() {}

func (x *DpaiPostgresUpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dpai_postgres_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DpaiPostgresUpgradeRequest.ProtoReflect.Descriptor instead.
func (*DpaiPostgresUpgradeRequest) Descriptor() ([]byte, []int) {
	return file_dpai_postgres_proto_rawDescGZIP(), []int{35}
}

func (x *DpaiPostgresUpgradeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DpaiPostgresUpgradeRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *DpaiPostgresUpgradeRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *DpaiPostgresUpgradeRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

var File_dpai_postgres_proto protoreflect.FileDescriptor

var file_dpai_postgres_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x70, 0x61, 0x69, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x64, 0x70, 0x61, 0x69, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x1a,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x47,
	0x0a, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xc9, 0x01, 0x0a, 0x1b, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x5e, 0x0a, 0x1c, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x1c, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x8a, 0x03, 0x0a, 0x20,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65,
	0x50, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x3a, 0x0a, 0x18, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x18, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x14,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x4d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x69, 0x6e,
	0x12, 0x32, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x4d, 0x61, 0x78, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70, 0x75, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x1e, 0x44, 0x70, 0x61,
	0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x44, 0x69, 0x73,
	0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x64,
	0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x47, 0x62, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x49, 0x6e, 0x47, 0x62, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x47, 0x62, 0x4d, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x49, 0x6e, 0x47, 0x62, 0x4d, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x49, 0x6e, 0x47, 0x62, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x49, 0x6e, 0x47, 0x62, 0x4d, 0x61,
	0x78, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x91, 0x05,
	0x0a, 0x10, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x18, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x61, 0x78,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x2a, 0x0a, 0x10,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70,
	0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x53, 0x0a, 0x10, 0x70, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53,
	0x69, 0x7a, 0x65, 0x50, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x10, 0x70, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x70, 0x61, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x91, 0x05, 0x0a, 0x1d, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x18, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x61,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x2a, 0x0a,
	0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x43, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x53, 0x0a, 0x10, 0x70, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x53, 0x69, 0x7a, 0x65, 0x50, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x10, 0x70, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa,
	0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1b, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd,
	0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x1c, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x65, 0x76, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x65, 0x76, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x60, 0x0a, 0x1e, 0x44, 0x70, 0x61, 0x69,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x20, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02,
	0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x8d, 0x05, 0x0a, 0x1d, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x18, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x4d, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x61, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70,
	0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x43, 0x70, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x70, 0x75, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53,
	0x0a, 0x10, 0x70, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a,
	0x65, 0x50, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x10, 0x70, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x53, 0x69, 0x7a, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02,
	0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1d, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b,
	0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xef, 0x02, 0x0a, 0x13, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x0e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70,
	0x61, 0x69, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x36, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74,
	0x69, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xef, 0x02, 0x0a, 0x20, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0e,
	0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61,
	0x69, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x0e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x36, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x74, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69,
	0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x1e, 0x44, 0x70, 0x61, 0x69, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x1f, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x63, 0x0a, 0x21, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x23, 0x44, 0x70, 0x61, 0x69,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b,
	0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x20, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2e, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a,
	0x20, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08,
	0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x61, 0x0a, 0x21, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x1a, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x7a, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x50, 0x67, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x49,
	0x6e, 0x47, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x49, 0x6e, 0x47, 0x62, 0x22, 0x52, 0x0a, 0x1e, 0x44, 0x70, 0x61, 0x69, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x06, 0x0a, 0x0c,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x49, 0x0a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53,
	0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x73,
	0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x55, 0x0a,
	0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x0f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x61, 0x0a, 0x14, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x14, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x47, 0x0a, 0x19, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x81, 0x06, 0x0a, 0x19, 0x44, 0x70, 0x61,
	0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0e,
	0x73, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61,
	0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x12, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x4c,
	0x0a, 0x0f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x6e, 0x0a, 0x14,
	0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x64, 0x76,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x47, 0x0a, 0x19, 0x41, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6b, 0x0a, 0x17,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x18, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61,
	0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7e, 0x0a, 0x1a, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa,
	0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x1c, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x19,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x98, 0x02, 0x0a, 0x19,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x37, 0x0a,
	0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x1a, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x19, 0x44, 0x70, 0x61, 0x69, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x53, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x0e, 0x73, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08,
	0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x82, 0x01, 0x0a, 0x1e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x1a, 0x44, 0x70, 0x61, 0x69, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa,
	0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x32, 0xcb, 0x06, 0x0a, 0x17, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x59, 0x0a, 0x16, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x53, 0x69, 0x7a, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x00, 0x12, 0xab, 0x01, 0x0a,
	0x14, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69,
	0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a,
	0x65, 0x73, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0xaa, 0x01, 0x0a, 0x17, 0x44,
	0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x41, 0x12, 0x3f,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xaa,
	0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0xb5, 0x01, 0x0a, 0x19, 0x44, 0x70, 0x61, 0x69,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x48, 0x12,
	0x46, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x2f, 0x6e, 0x61, 0x6d, 0x65,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12,
	0x59, 0x0a, 0x16, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53,
	0x69, 0x7a, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69,
	0x7a, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61,
	0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x69, 0x7a, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53,
	0x69, 0x7a, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0x8d, 0x07, 0x0a, 0x1a, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x62, 0x0a, 0x19, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0xb7, 0x01, 0x0a, 0x17, 0x44, 0x70, 0x61, 0x69, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70,
	0x61, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01,
	0x12, 0xb6, 0x01, 0x0a, 0x1a, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x12, 0x42, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0xc1, 0x01, 0x0a, 0x1c, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x59, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4b, 0x12, 0x49, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64,
	0x70, 0x61, 0x69, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0x62, 0x0a,
	0x19, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x12, 0x70, 0x0a, 0x19, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0xe6, 0x0e, 0x0a, 0x13, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb2, 0x01, 0x0a, 0x12,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61,
	0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4d, 0x22, 0x48, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f,
	0x64, 0x70, 0x61, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01,
	0x12, 0xad, 0x01, 0x0a, 0x10, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4a, 0x12, 0x48,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x2f,
	0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01,
	0x12, 0xac, 0x01, 0x0a, 0x13, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f, 0x12, 0x4d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61,
	0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12,
	0xb7, 0x01, 0x0a, 0x15, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x22, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x56, 0x12, 0x54, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f,
	0x64, 0x70, 0x61, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0xad, 0x01, 0x0a, 0x12, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x22, 0x60, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x52, 0x32,
	0x4d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x7d,
	0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01,
	0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0xb4, 0x01, 0x0a, 0x12, 0x44, 0x70,
	0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4f, 0x2a, 0x4d, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70,
	0x61, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01,
	0x12, 0xd0, 0x01, 0x0a, 0x17, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x58, 0x12, 0x56, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x2f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x73, 0xaa, 0xdd, 0x1b, 0x04, 0x0a,
	0x02, 0x08, 0x01, 0x12, 0xc1, 0x01, 0x0a, 0x13, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22, 0x55, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70, 0x61, 0x69, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x3a, 0x01, 0x2a, 0xaa,
	0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0xc1, 0x01, 0x0a, 0x13, 0x44, 0x70, 0x61, 0x69,
	0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x68, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5a, 0x22, 0x55, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f, 0x64, 0x70,
	0x61, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x12, 0xbe, 0x01, 0x0a, 0x12,
	0x44, 0x70, 0x61, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61, 0x69, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x70, 0x61,
	0x69, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x59, 0x22, 0x54, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x7d, 0x2f,
	0x64, 0x70, 0x61, 0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x7b,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x2f, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x69, 0x7a,
	0x65, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x42, 0x5f, 0x5a, 0x4d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c,
	0x2d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x65,
	0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x69, 0x64, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0xaa, 0xdd, 0x1b,
	0x06, 0x12, 0x04, 0x64, 0x70, 0x61, 0x69, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x02, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dpai_postgres_proto_rawDescOnce sync.Once
	file_dpai_postgres_proto_rawDescData = file_dpai_postgres_proto_rawDesc
)

func file_dpai_postgres_proto_rawDescGZIP() []byte {
	file_dpai_postgres_proto_rawDescOnce.Do(func() {
		file_dpai_postgres_proto_rawDescData = protoimpl.X.CompressGZIP(file_dpai_postgres_proto_rawDescData)
	})
	return file_dpai_postgres_proto_rawDescData
}

var file_dpai_postgres_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_dpai_postgres_proto_goTypes = []interface{}{
	(*DpaiPostgresDeploymentMeta)(nil),          // 0: proto.DpaiPostgresDeploymentMeta
	(*DpaiPostgresAdminProperties)(nil),         // 1: proto.DpaiPostgresAdminProperties
	(*DpaiPostgresSizePgPoolProperties)(nil),    // 2: proto.DpaiPostgresSizePgPoolProperties
	(*DpaiPostgresSizeDiskProperties)(nil),      // 3: proto.DpaiPostgresSizeDiskProperties
	(*DpaiPostgresSize)(nil),                    // 4: proto.DpaiPostgresSize
	(*DpaiPostgresSizeCreateRequest)(nil),       // 5: proto.DpaiPostgresSizeCreateRequest
	(*DpaiPostgresSizeListRequest)(nil),         // 6: proto.DpaiPostgresSizeListRequest
	(*DpaiPostgresSizeListResponse)(nil),        // 7: proto.DpaiPostgresSizeListResponse
	(*DpaiPostgresSizeGetByIdRequest)(nil),      // 8: proto.DpaiPostgresSizeGetByIdRequest
	(*DpaiPostgresSizeGetByNameRequest)(nil),    // 9: proto.DpaiPostgresSizeGetByNameRequest
	(*DpaiPostgresSizeUpdateRequest)(nil),       // 10: proto.DpaiPostgresSizeUpdateRequest
	(*DpaiPostgresSizeDeleteRequest)(nil),       // 11: proto.DpaiPostgresSizeDeleteRequest
	(*DpaiPostgresSizeDeleteResponse)(nil),      // 12: proto.DpaiPostgresSizeDeleteResponse
	(*DpaiPostgresVersion)(nil),                 // 13: proto.DpaiPostgresVersion
	(*DpaiPostgresVersionCreateRequest)(nil),    // 14: proto.DpaiPostgresVersionCreateRequest
	(*DpaiPostgresVersionListRequest)(nil),      // 15: proto.DpaiPostgresVersionListRequest
	(*DpaiPostgresVersionListResponse)(nil),     // 16: proto.DpaiPostgresVersionListResponse
	(*DpaiPostgresVersionGetByIdRequest)(nil),   // 17: proto.DpaiPostgresVersionGetByIdRequest
	(*DpaiPostgresVersionGetByNameRequest)(nil), // 18: proto.DpaiPostgresVersionGetByNameRequest
	(*DpaiPostgresVersionUpdateRequest)(nil),    // 19: proto.DpaiPostgresVersionUpdateRequest
	(*DpaiPostgresVersionDeleteRequest)(nil),    // 20: proto.DpaiPostgresVersionDeleteRequest
	(*DpaiPostgresVersionDeleteResponse)(nil),   // 21: proto.DpaiPostgresVersionDeleteResponse
	(*DpaiPostgresSizeProperties)(nil),          // 22: proto.DpaiPostgresSizeProperties
	(*DpaiPostgresOptionalProperties)(nil),      // 23: proto.DpaiPostgresOptionalProperties
	(*DpaiPostgres)(nil),                        // 24: proto.DpaiPostgres
	(*DpaiPostgresCreateRequest)(nil),           // 25: proto.DpaiPostgresCreateRequest
	(*DpaiPostgresListRequest)(nil),             // 26: proto.DpaiPostgresListRequest
	(*DpaiPostgresListResponse)(nil),            // 27: proto.DpaiPostgresListResponse
	(*DpaiPostgresGetByIdRequest)(nil),          // 28: proto.DpaiPostgresGetByIdRequest
	(*DpaiPostgresGetByNameRequest)(nil),        // 29: proto.DpaiPostgresGetByNameRequest
	(*DpaiPostgresDeleteRequest)(nil),           // 30: proto.DpaiPostgresDeleteRequest
	(*DpaiPostgresUpdateRequest)(nil),           // 31: proto.DpaiPostgresUpdateRequest
	(*DpaiPostgresRestartRequest)(nil),          // 32: proto.DpaiPostgresRestartRequest
	(*DpaiPostgresResizeRequest)(nil),           // 33: proto.DpaiPostgresResizeRequest
	(*DpaiPostgresListUpgradeRequest)(nil),      // 34: proto.DpaiPostgresListUpgradeRequest
	(*DpaiPostgresUpgradeRequest)(nil),          // 35: proto.DpaiPostgresUpgradeRequest
	nil,                                         // 36: proto.DpaiPostgres.AdvanceConfigurationEntry
	nil,                                         // 37: proto.DpaiPostgres.TagsEntry
	nil,                                         // 38: proto.DpaiPostgresCreateRequest.AdvanceConfigurationEntry
	nil,                                         // 39: proto.DpaiPostgresCreateRequest.TagsEntry
	nil,                                         // 40: proto.DpaiPostgresUpdateRequest.TagsEntry
	(*DpaiDeploymentStatus)(nil),                // 41: proto.DpaiDeploymentStatus
	(*DpaiSecretReference)(nil),                 // 42: proto.DpaiSecretReference
	(*DpaiMeta)(nil),                            // 43: proto.DpaiMeta
	(*DpaiChartReference)(nil),                  // 44: proto.DpaiChartReference
	(*DpaiDeploymentResponse)(nil),              // 45: proto.DpaiDeploymentResponse
}
var file_dpai_postgres_proto_depIdxs = []int32{
	41, // 0: proto.DpaiPostgresDeploymentMeta.deploymentStatus:type_name -> proto.DpaiDeploymentStatus
	42, // 1: proto.DpaiPostgresAdminProperties.adminPasswordSecretReference:type_name -> proto.DpaiSecretReference
	2,  // 2: proto.DpaiPostgresSize.pgPoolProperties:type_name -> proto.DpaiPostgresSizePgPoolProperties
	3,  // 3: proto.DpaiPostgresSize.diskProperties:type_name -> proto.DpaiPostgresSizeDiskProperties
	43, // 4: proto.DpaiPostgresSize.metadata:type_name -> proto.DpaiMeta
	2,  // 5: proto.DpaiPostgresSizeCreateRequest.pgPoolProperties:type_name -> proto.DpaiPostgresSizePgPoolProperties
	3,  // 6: proto.DpaiPostgresSizeCreateRequest.diskProperties:type_name -> proto.DpaiPostgresSizeDiskProperties
	4,  // 7: proto.DpaiPostgresSizeListResponse.data:type_name -> proto.DpaiPostgresSize
	2,  // 8: proto.DpaiPostgresSizeUpdateRequest.pgPoolProperties:type_name -> proto.DpaiPostgresSizePgPoolProperties
	3,  // 9: proto.DpaiPostgresSizeUpdateRequest.diskProperties:type_name -> proto.DpaiPostgresSizeDiskProperties
	44, // 10: proto.DpaiPostgresVersion.chartReference:type_name -> proto.DpaiChartReference
	43, // 11: proto.DpaiPostgresVersion.metadata:type_name -> proto.DpaiMeta
	44, // 12: proto.DpaiPostgresVersionCreateRequest.chartReference:type_name -> proto.DpaiChartReference
	13, // 13: proto.DpaiPostgresVersionListResponse.data:type_name -> proto.DpaiPostgresVersion
	44, // 14: proto.DpaiPostgresVersionUpdateRequest.chartReference:type_name -> proto.DpaiChartReference
	22, // 15: proto.DpaiPostgres.sizeProperties:type_name -> proto.DpaiPostgresSizeProperties
	23, // 16: proto.DpaiPostgres.optionalProperties:type_name -> proto.DpaiPostgresOptionalProperties
	1,  // 17: proto.DpaiPostgres.adminProperties:type_name -> proto.DpaiPostgresAdminProperties
	36, // 18: proto.DpaiPostgres.advanceConfiguration:type_name -> proto.DpaiPostgres.AdvanceConfigurationEntry
	37, // 19: proto.DpaiPostgres.tags:type_name -> proto.DpaiPostgres.TagsEntry
	43, // 20: proto.DpaiPostgres.metadata:type_name -> proto.DpaiMeta
	0,  // 21: proto.DpaiPostgres.deploymentMetadata:type_name -> proto.DpaiPostgresDeploymentMeta
	22, // 22: proto.DpaiPostgresCreateRequest.sizeProperties:type_name -> proto.DpaiPostgresSizeProperties
	23, // 23: proto.DpaiPostgresCreateRequest.optionalProperties:type_name -> proto.DpaiPostgresOptionalProperties
	1,  // 24: proto.DpaiPostgresCreateRequest.adminProperties:type_name -> proto.DpaiPostgresAdminProperties
	38, // 25: proto.DpaiPostgresCreateRequest.advanceConfiguration:type_name -> proto.DpaiPostgresCreateRequest.AdvanceConfigurationEntry
	39, // 26: proto.DpaiPostgresCreateRequest.tags:type_name -> proto.DpaiPostgresCreateRequest.TagsEntry
	24, // 27: proto.DpaiPostgresListResponse.data:type_name -> proto.DpaiPostgres
	40, // 28: proto.DpaiPostgresUpdateRequest.tags:type_name -> proto.DpaiPostgresUpdateRequest.TagsEntry
	22, // 29: proto.DpaiPostgresResizeRequest.sizeProperties:type_name -> proto.DpaiPostgresSizeProperties
	5,  // 30: proto.DpaiPostgresSizeService.DpaiPostgresSizeCreate:input_type -> proto.DpaiPostgresSizeCreateRequest
	6,  // 31: proto.DpaiPostgresSizeService.DpaiPostgresSizeList:input_type -> proto.DpaiPostgresSizeListRequest
	8,  // 32: proto.DpaiPostgresSizeService.DpaiPostgresSizeGetById:input_type -> proto.DpaiPostgresSizeGetByIdRequest
	9,  // 33: proto.DpaiPostgresSizeService.DpaiPostgresSizeGetByName:input_type -> proto.DpaiPostgresSizeGetByNameRequest
	10, // 34: proto.DpaiPostgresSizeService.DpaiPostgresSizeUpdate:input_type -> proto.DpaiPostgresSizeUpdateRequest
	11, // 35: proto.DpaiPostgresSizeService.DpaiPostgresSizeDelete:input_type -> proto.DpaiPostgresSizeDeleteRequest
	14, // 36: proto.DpaiPostgresVersionService.DpaiPostgresVersionCreate:input_type -> proto.DpaiPostgresVersionCreateRequest
	15, // 37: proto.DpaiPostgresVersionService.DpaiPostgresVersionList:input_type -> proto.DpaiPostgresVersionListRequest
	17, // 38: proto.DpaiPostgresVersionService.DpaiPostgresVersionGetById:input_type -> proto.DpaiPostgresVersionGetByIdRequest
	18, // 39: proto.DpaiPostgresVersionService.DpaiPostgresVersionGetByName:input_type -> proto.DpaiPostgresVersionGetByNameRequest
	19, // 40: proto.DpaiPostgresVersionService.DpaiPostgresVersionUpdate:input_type -> proto.DpaiPostgresVersionUpdateRequest
	20, // 41: proto.DpaiPostgresVersionService.DpaiPostgresVersionDelete:input_type -> proto.DpaiPostgresVersionDeleteRequest
	25, // 42: proto.DpaiPostgresService.DpaiPostgresCreate:input_type -> proto.DpaiPostgresCreateRequest
	26, // 43: proto.DpaiPostgresService.DpaiPostgresList:input_type -> proto.DpaiPostgresListRequest
	28, // 44: proto.DpaiPostgresService.DpaiPostgresGetById:input_type -> proto.DpaiPostgresGetByIdRequest
	29, // 45: proto.DpaiPostgresService.DpaiPostgresGetByName:input_type -> proto.DpaiPostgresGetByNameRequest
	31, // 46: proto.DpaiPostgresService.DpaiPostgresUpdate:input_type -> proto.DpaiPostgresUpdateRequest
	30, // 47: proto.DpaiPostgresService.DpaiPostgresDelete:input_type -> proto.DpaiPostgresDeleteRequest
	34, // 48: proto.DpaiPostgresService.DpaiPostgresListUpgrade:input_type -> proto.DpaiPostgresListUpgradeRequest
	35, // 49: proto.DpaiPostgresService.DpaiPostgresUpgrade:input_type -> proto.DpaiPostgresUpgradeRequest
	32, // 50: proto.DpaiPostgresService.DpaiPostgresRestart:input_type -> proto.DpaiPostgresRestartRequest
	33, // 51: proto.DpaiPostgresService.DpaiPostgresResize:input_type -> proto.DpaiPostgresResizeRequest
	4,  // 52: proto.DpaiPostgresSizeService.DpaiPostgresSizeCreate:output_type -> proto.DpaiPostgresSize
	7,  // 53: proto.DpaiPostgresSizeService.DpaiPostgresSizeList:output_type -> proto.DpaiPostgresSizeListResponse
	4,  // 54: proto.DpaiPostgresSizeService.DpaiPostgresSizeGetById:output_type -> proto.DpaiPostgresSize
	4,  // 55: proto.DpaiPostgresSizeService.DpaiPostgresSizeGetByName:output_type -> proto.DpaiPostgresSize
	4,  // 56: proto.DpaiPostgresSizeService.DpaiPostgresSizeUpdate:output_type -> proto.DpaiPostgresSize
	12, // 57: proto.DpaiPostgresSizeService.DpaiPostgresSizeDelete:output_type -> proto.DpaiPostgresSizeDeleteResponse
	13, // 58: proto.DpaiPostgresVersionService.DpaiPostgresVersionCreate:output_type -> proto.DpaiPostgresVersion
	16, // 59: proto.DpaiPostgresVersionService.DpaiPostgresVersionList:output_type -> proto.DpaiPostgresVersionListResponse
	13, // 60: proto.DpaiPostgresVersionService.DpaiPostgresVersionGetById:output_type -> proto.DpaiPostgresVersion
	13, // 61: proto.DpaiPostgresVersionService.DpaiPostgresVersionGetByName:output_type -> proto.DpaiPostgresVersion
	13, // 62: proto.DpaiPostgresVersionService.DpaiPostgresVersionUpdate:output_type -> proto.DpaiPostgresVersion
	21, // 63: proto.DpaiPostgresVersionService.DpaiPostgresVersionDelete:output_type -> proto.DpaiPostgresVersionDeleteResponse
	45, // 64: proto.DpaiPostgresService.DpaiPostgresCreate:output_type -> proto.DpaiDeploymentResponse
	27, // 65: proto.DpaiPostgresService.DpaiPostgresList:output_type -> proto.DpaiPostgresListResponse
	24, // 66: proto.DpaiPostgresService.DpaiPostgresGetById:output_type -> proto.DpaiPostgres
	24, // 67: proto.DpaiPostgresService.DpaiPostgresGetByName:output_type -> proto.DpaiPostgres
	24, // 68: proto.DpaiPostgresService.DpaiPostgresUpdate:output_type -> proto.DpaiPostgres
	45, // 69: proto.DpaiPostgresService.DpaiPostgresDelete:output_type -> proto.DpaiDeploymentResponse
	16, // 70: proto.DpaiPostgresService.DpaiPostgresListUpgrade:output_type -> proto.DpaiPostgresVersionListResponse
	45, // 71: proto.DpaiPostgresService.DpaiPostgresUpgrade:output_type -> proto.DpaiDeploymentResponse
	45, // 72: proto.DpaiPostgresService.DpaiPostgresRestart:output_type -> proto.DpaiDeploymentResponse
	45, // 73: proto.DpaiPostgresService.DpaiPostgresResize:output_type -> proto.DpaiDeploymentResponse
	52, // [52:74] is the sub-list for method output_type
	30, // [30:52] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_dpai_postgres_proto_init() }
func file_dpai_postgres_proto_init() {
	if File_dpai_postgres_proto != nil {
		return
	}
	file_annotations_proto_init()
	file_dpai_deployment_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dpai_postgres_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresDeploymentMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresAdminProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizePgPoolProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeDiskProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeGetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeGetByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresVersionCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresVersionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresVersionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresVersionGetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresVersionGetByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresVersionUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresVersionDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresVersionDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresSizeProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresOptionalProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgres); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresGetByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresGetByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresRestartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresResizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresListUpgradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dpai_postgres_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DpaiPostgresUpgradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dpai_postgres_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_dpai_postgres_proto_goTypes,
		DependencyIndexes: file_dpai_postgres_proto_depIdxs,
		MessageInfos:      file_dpai_postgres_proto_msgTypes,
	}.Build()
	File_dpai_postgres_proto = out.File
	file_dpai_postgres_proto_rawDesc = nil
	file_dpai_postgres_proto_goTypes = nil
	file_dpai_postgres_proto_depIdxs = nil
}
