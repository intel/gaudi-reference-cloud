// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: billing.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DowngradeOption int32

const (
	DowngradeOption_DOWNGRADE_OPTION_UNSPECIFIED                      DowngradeOption = 0
	DowngradeOption_DOWNGRADE_PREMIUM_TO_STANDARD_WITH_PAYMENT_OPTION DowngradeOption = 1
)

// Enum value maps for DowngradeOption.
var (
	DowngradeOption_name = map[int32]string{
		0: "DOWNGRADE_OPTION_UNSPECIFIED",
		1: "DOWNGRADE_PREMIUM_TO_STANDARD_WITH_PAYMENT_OPTION",
	}
	DowngradeOption_value = map[string]int32{
		"DOWNGRADE_OPTION_UNSPECIFIED":                      0,
		"DOWNGRADE_PREMIUM_TO_STANDARD_WITH_PAYMENT_OPTION": 1,
	}
)

func (x DowngradeOption) Enum() *DowngradeOption {
	p := new(DowngradeOption)
	*p = x
	return p
}

func (x DowngradeOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DowngradeOption) Descriptor() protoreflect.EnumDescriptor {
	return file_billing_proto_enumTypes[0].Descriptor()
}

func (DowngradeOption) Type() protoreflect.EnumType {
	return &file_billing_proto_enumTypes[0]
}

func (x DowngradeOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DowngradeOption.Descriptor instead.
func (DowngradeOption) EnumDescriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{0}
}

type PaymentType int32

const (
	PaymentType_PAYMENT_UNSPECIFIED PaymentType = 0
	PaymentType_PAYMENT_CREDIT_CARD PaymentType = 1
	PaymentType_PAYMENT_OTHER       PaymentType = 2
)

// Enum value maps for PaymentType.
var (
	PaymentType_name = map[int32]string{
		0: "PAYMENT_UNSPECIFIED",
		1: "PAYMENT_CREDIT_CARD",
		2: "PAYMENT_OTHER",
	}
	PaymentType_value = map[string]int32{
		"PAYMENT_UNSPECIFIED": 0,
		"PAYMENT_CREDIT_CARD": 1,
		"PAYMENT_OTHER":       2,
	}
)

func (x PaymentType) Enum() *PaymentType {
	p := new(PaymentType)
	*p = x
	return p
}

func (x PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_billing_proto_enumTypes[1].Descriptor()
}

func (PaymentType) Type() protoreflect.EnumType {
	return &file_billing_proto_enumTypes[1]
}

func (x PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentType.Descriptor instead.
func (PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{1}
}

type BillingCreditReason int32

const (
	BillingCreditReason_CREDIT_UNSPECIFIED BillingCreditReason = 0
	BillingCreditReason_CREDIT_INITIAL     BillingCreditReason = 1
	BillingCreditReason_CREDIT_PURCHASED   BillingCreditReason = 2
	BillingCreditReason_CREDIT_COUPON      BillingCreditReason = 3
)

// Enum value maps for BillingCreditReason.
var (
	BillingCreditReason_name = map[int32]string{
		0: "CREDIT_UNSPECIFIED",
		1: "CREDIT_INITIAL",
		2: "CREDIT_PURCHASED",
		3: "CREDIT_COUPON",
	}
	BillingCreditReason_value = map[string]int32{
		"CREDIT_UNSPECIFIED": 0,
		"CREDIT_INITIAL":     1,
		"CREDIT_PURCHASED":   2,
		"CREDIT_COUPON":      3,
	}
)

func (x BillingCreditReason) Enum() *BillingCreditReason {
	p := new(BillingCreditReason)
	*p = x
	return p
}

func (x BillingCreditReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillingCreditReason) Descriptor() protoreflect.EnumDescriptor {
	return file_billing_proto_enumTypes[2].Descriptor()
}

func (BillingCreditReason) Type() protoreflect.EnumType {
	return &file_billing_proto_enumTypes[2]
}

func (x BillingCreditReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillingCreditReason.Descriptor instead.
func (BillingCreditReason) EnumDescriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{2}
}

type SchedulerActionType int32

const (
	SchedulerActionType_START_CREDIT_INSTALL_SCHEDULER      SchedulerActionType = 0
	SchedulerActionType_START_POST_USAGE_SCHEDULER          SchedulerActionType = 1
	SchedulerActionType_START_ENT_LINK_SCHEDULER            SchedulerActionType = 2
	SchedulerActionType_START_CREDIT_USAGE_SCHEDULER        SchedulerActionType = 3
	SchedulerActionType_START_CREDIT_EXPIRY_SCHEDULER       SchedulerActionType = 4
	SchedulerActionType_START_SERVICE_TERMINATION_SCHEDULER SchedulerActionType = 5
)

// Enum value maps for SchedulerActionType.
var (
	SchedulerActionType_name = map[int32]string{
		0: "START_CREDIT_INSTALL_SCHEDULER",
		1: "START_POST_USAGE_SCHEDULER",
		2: "START_ENT_LINK_SCHEDULER",
		3: "START_CREDIT_USAGE_SCHEDULER",
		4: "START_CREDIT_EXPIRY_SCHEDULER",
		5: "START_SERVICE_TERMINATION_SCHEDULER",
	}
	SchedulerActionType_value = map[string]int32{
		"START_CREDIT_INSTALL_SCHEDULER":      0,
		"START_POST_USAGE_SCHEDULER":          1,
		"START_ENT_LINK_SCHEDULER":            2,
		"START_CREDIT_USAGE_SCHEDULER":        3,
		"START_CREDIT_EXPIRY_SCHEDULER":       4,
		"START_SERVICE_TERMINATION_SCHEDULER": 5,
	}
)

func (x SchedulerActionType) Enum() *SchedulerActionType {
	p := new(SchedulerActionType)
	*p = x
	return p
}

func (x SchedulerActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SchedulerActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_billing_proto_enumTypes[3].Descriptor()
}

func (SchedulerActionType) Type() protoreflect.EnumType {
	return &file_billing_proto_enumTypes[3]
}

func (x SchedulerActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SchedulerActionType.Descriptor instead.
func (SchedulerActionType) EnumDescriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{3}
}

type BillingAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *BillingAccount) Reset() {
	*x = BillingAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingAccount) ProtoMessage() {}

func (x *BillingAccount) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingAccount.ProtoReflect.Descriptor instead.
func (*BillingAccount) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{0}
}

func (x *BillingAccount) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type BillingAccountDowngrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId  string          `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	Force           bool            `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	DowngradeOption DowngradeOption `protobuf:"varint,3,opt,name=downgradeOption,proto3,enum=proto.DowngradeOption" json:"downgradeOption,omitempty"`
}

func (x *BillingAccountDowngrade) Reset() {
	*x = BillingAccountDowngrade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingAccountDowngrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingAccountDowngrade) ProtoMessage() {}

func (x *BillingAccountDowngrade) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingAccountDowngrade.ProtoReflect.Descriptor instead.
func (*BillingAccountDowngrade) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{1}
}

func (x *BillingAccountDowngrade) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingAccountDowngrade) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *BillingAccountDowngrade) GetDowngradeOption() DowngradeOption {
	if x != nil {
		return x.DowngradeOption
	}
	return DowngradeOption_DOWNGRADE_OPTION_UNSPECIFIED
}

type BillingOptionFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *uint64                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name           *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	CloudAccountId *string                `protobuf:"bytes,3,opt,name=cloudAccountId,proto3,oneof" json:"cloudAccountId,omitempty"`
	StartTime      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=startTime,proto3,oneof" json:"startTime,omitempty"`
	EndTime        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=endTime,proto3,oneof" json:"endTime,omitempty"`
}

func (x *BillingOptionFilter) Reset() {
	*x = BillingOptionFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingOptionFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingOptionFilter) ProtoMessage() {}

func (x *BillingOptionFilter) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingOptionFilter.ProtoReflect.Descriptor instead.
func (*BillingOptionFilter) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{2}
}

func (x *BillingOptionFilter) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BillingOptionFilter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BillingOptionFilter) GetCloudAccountId() string {
	if x != nil && x.CloudAccountId != nil {
		return *x.CloudAccountId
	}
	return ""
}

func (x *BillingOptionFilter) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *BillingOptionFilter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type BillingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Created        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CloudAccountId string                 `protobuf:"bytes,4,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	FirstName      string                 `protobuf:"bytes,5,opt,name=firstName,proto3" json:"firstName,omitempty"`
	MiddleInitial  string                 `protobuf:"bytes,6,opt,name=middleInitial,proto3" json:"middleInitial,omitempty"`
	LastName       string                 `protobuf:"bytes,7,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email          string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	PaymentType    PaymentType            `protobuf:"varint,9,opt,name=paymentType,proto3,enum=proto.PaymentType" json:"paymentType,omitempty"`
	// Types that are assignable to PaymentMethod:
	//
	//	*BillingOption_CreditCard
	//	*BillingOption_Other
	PaymentMethod isBillingOption_PaymentMethod `protobuf_oneof:"paymentMethod"`
}

func (x *BillingOption) Reset() {
	*x = BillingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingOption) ProtoMessage() {}

func (x *BillingOption) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingOption.ProtoReflect.Descriptor instead.
func (*BillingOption) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{3}
}

func (x *BillingOption) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BillingOption) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *BillingOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BillingOption) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingOption) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *BillingOption) GetMiddleInitial() string {
	if x != nil {
		return x.MiddleInitial
	}
	return ""
}

func (x *BillingOption) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *BillingOption) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BillingOption) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_PAYMENT_UNSPECIFIED
}

func (m *BillingOption) GetPaymentMethod() isBillingOption_PaymentMethod {
	if m != nil {
		return m.PaymentMethod
	}
	return nil
}

func (x *BillingOption) GetCreditCard() *CreditCard {
	if x, ok := x.GetPaymentMethod().(*BillingOption_CreditCard); ok {
		return x.CreditCard
	}
	return nil
}

func (x *BillingOption) GetOther() *PaymentMethodOther {
	if x, ok := x.GetPaymentMethod().(*BillingOption_Other); ok {
		return x.Other
	}
	return nil
}

type isBillingOption_PaymentMethod interface {
	isBillingOption_PaymentMethod()
}

type BillingOption_CreditCard struct {
	CreditCard *CreditCard `protobuf:"bytes,10,opt,name=creditCard,proto3,oneof"`
}

type BillingOption_Other struct {
	Other *PaymentMethodOther `protobuf:"bytes,11,opt,name=other,proto3,oneof"`
}

func (*BillingOption_CreditCard) isBillingOption_PaymentMethod() {}

func (*BillingOption_Other) isBillingOption_PaymentMethod() {}

type CreditCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Suffix     string `protobuf:"bytes,1,opt,name=suffix,proto3" json:"suffix,omitempty"`
	Expiration string `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CreditCard) Reset() {
	*x = CreditCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreditCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCard) ProtoMessage() {}

func (x *CreditCard) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCard.ProtoReflect.Descriptor instead.
func (*CreditCard) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{4}
}

func (x *CreditCard) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *CreditCard) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

func (x *CreditCard) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PaymentMethodOther struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PaymentMethodOther) Reset() {
	*x = PaymentMethodOther{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethodOther) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethodOther) ProtoMessage() {}

func (x *PaymentMethodOther) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethodOther.ProtoReflect.Descriptor instead.
func (*PaymentMethodOther) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{5}
}

type BillingRateFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string  `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	ProductId      *string `protobuf:"bytes,2,opt,name=productId,proto3,oneof" json:"productId,omitempty"`
}

func (x *BillingRateFilter) Reset() {
	*x = BillingRateFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingRateFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingRateFilter) ProtoMessage() {}

func (x *BillingRateFilter) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingRateFilter.ProtoReflect.Descriptor instead.
func (*BillingRateFilter) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{6}
}

func (x *BillingRateFilter) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingRateFilter) GetProductId() string {
	if x != nil && x.ProductId != nil {
		return *x.ProductId
	}
	return ""
}

type BillingRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	ProductId      string `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	Rate           *Rate  `protobuf:"bytes,3,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *BillingRate) Reset() {
	*x = BillingRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingRate) ProtoMessage() {}

func (x *BillingRate) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingRate.ProtoReflect.Descriptor instead.
func (*BillingRate) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{7}
}

func (x *BillingRate) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingRate) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *BillingRate) GetRate() *Rate {
	if x != nil {
		return x.Rate
	}
	return nil
}

type BillingMigratedCredit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *BillingMigratedCredit) Reset() {
	*x = BillingMigratedCredit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingMigratedCredit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingMigratedCredit) ProtoMessage() {}

func (x *BillingMigratedCredit) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingMigratedCredit.ProtoReflect.Descriptor instead.
func (*BillingMigratedCredit) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{8}
}

func (x *BillingMigratedCredit) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type BillingUnappliedCredit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId  string                 `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	RemainingAmount float64                `protobuf:"fixed64,2,opt,name=remainingAmount,proto3" json:"remainingAmount,omitempty"`
	Expiration      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *BillingUnappliedCredit) Reset() {
	*x = BillingUnappliedCredit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingUnappliedCredit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingUnappliedCredit) ProtoMessage() {}

func (x *BillingUnappliedCredit) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingUnappliedCredit.ProtoReflect.Descriptor instead.
func (*BillingUnappliedCredit) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{9}
}

func (x *BillingUnappliedCredit) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingUnappliedCredit) GetRemainingAmount() float64 {
	if x != nil {
		return x.RemainingAmount
	}
	return 0
}

func (x *BillingUnappliedCredit) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type BillingCredit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Expiration      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	CloudAccountId  string                 `protobuf:"bytes,4,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	Reason          BillingCreditReason    `protobuf:"varint,5,opt,name=reason,proto3,enum=proto.BillingCreditReason" json:"reason,omitempty"`
	OriginalAmount  float64                `protobuf:"fixed64,6,opt,name=originalAmount,proto3" json:"originalAmount,omitempty"`
	RemainingAmount float64                `protobuf:"fixed64,7,opt,name=remainingAmount,proto3" json:"remainingAmount,omitempty"`
	CouponCode      string                 `protobuf:"bytes,8,opt,name=couponCode,proto3" json:"couponCode,omitempty"`
	AmountUsed      float64                `protobuf:"fixed64,9,opt,name=amountUsed,proto3" json:"amountUsed,omitempty"`
}

func (x *BillingCredit) Reset() {
	*x = BillingCredit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCredit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCredit) ProtoMessage() {}

func (x *BillingCredit) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCredit.ProtoReflect.Descriptor instead.
func (*BillingCredit) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{10}
}

func (x *BillingCredit) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *BillingCredit) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *BillingCredit) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingCredit) GetReason() BillingCreditReason {
	if x != nil {
		return x.Reason
	}
	return BillingCreditReason_CREDIT_UNSPECIFIED
}

func (x *BillingCredit) GetOriginalAmount() float64 {
	if x != nil {
		return x.OriginalAmount
	}
	return 0
}

func (x *BillingCredit) GetRemainingAmount() float64 {
	if x != nil {
		return x.RemainingAmount
	}
	return 0
}

func (x *BillingCredit) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

func (x *BillingCredit) GetAmountUsed() float64 {
	if x != nil {
		return x.AmountUsed
	}
	return 0
}

type BillingUnappliedCreditBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnappliedAmount float64 `protobuf:"fixed64,1,opt,name=unappliedAmount,proto3" json:"unappliedAmount,omitempty"`
}

func (x *BillingUnappliedCreditBalance) Reset() {
	*x = BillingUnappliedCreditBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingUnappliedCreditBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingUnappliedCreditBalance) ProtoMessage() {}

func (x *BillingUnappliedCreditBalance) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingUnappliedCreditBalance.ProtoReflect.Descriptor instead.
func (*BillingUnappliedCreditBalance) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{11}
}

func (x *BillingUnappliedCreditBalance) GetUnappliedAmount() float64 {
	if x != nil {
		return x.UnappliedAmount
	}
	return 0
}

type BillingCreditFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	History        *bool  `protobuf:"varint,2,opt,name=history,proto3,oneof" json:"history,omitempty"`
}

func (x *BillingCreditFilter) Reset() {
	*x = BillingCreditFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCreditFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCreditFilter) ProtoMessage() {}

func (x *BillingCreditFilter) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCreditFilter.ProtoReflect.Descriptor instead.
func (*BillingCreditFilter) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{12}
}

func (x *BillingCreditFilter) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingCreditFilter) GetHistory() bool {
	if x != nil && x.History != nil {
		return *x.History
	}
	return false
}

type BillingCreditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRemainingAmount float64                `protobuf:"fixed64,1,opt,name=totalRemainingAmount,proto3" json:"totalRemainingAmount,omitempty"`
	TotalUsedAmount      float64                `protobuf:"fixed64,2,opt,name=totalUsedAmount,proto3" json:"totalUsedAmount,omitempty"`
	TotalUnAppliedAmount float64                `protobuf:"fixed64,3,opt,name=totalUnAppliedAmount,proto3" json:"totalUnAppliedAmount,omitempty"`
	LastUpdated          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	ExpirationDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expirationDate,proto3" json:"expirationDate,omitempty"`
	Credits              []*BillingCredit       `protobuf:"bytes,6,rep,name=credits,proto3" json:"credits,omitempty"`
}

func (x *BillingCreditResponse) Reset() {
	*x = BillingCreditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCreditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCreditResponse) ProtoMessage() {}

func (x *BillingCreditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCreditResponse.ProtoReflect.Descriptor instead.
func (*BillingCreditResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{13}
}

func (x *BillingCreditResponse) GetTotalRemainingAmount() float64 {
	if x != nil {
		return x.TotalRemainingAmount
	}
	return 0
}

func (x *BillingCreditResponse) GetTotalUsedAmount() float64 {
	if x != nil {
		return x.TotalUsedAmount
	}
	return 0
}

func (x *BillingCreditResponse) GetTotalUnAppliedAmount() float64 {
	if x != nil {
		return x.TotalUnAppliedAmount
	}
	return 0
}

func (x *BillingCreditResponse) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *BillingCreditResponse) GetExpirationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *BillingCreditResponse) GetCredits() []*BillingCredit {
	if x != nil {
		return x.Credits
	}
	return nil
}

type BillingCouponFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     *string                `protobuf:"bytes,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
	Redeemed *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=redeemed,proto3,oneof" json:"redeemed,omitempty"`
	Creator  *string                `protobuf:"bytes,3,opt,name=creator,proto3,oneof" json:"creator,omitempty"`
}

func (x *BillingCouponFilter) Reset() {
	*x = BillingCouponFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCouponFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCouponFilter) ProtoMessage() {}

func (x *BillingCouponFilter) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCouponFilter.ProtoReflect.Descriptor instead.
func (*BillingCouponFilter) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{14}
}

func (x *BillingCouponFilter) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *BillingCouponFilter) GetRedeemed() *timestamppb.Timestamp {
	if x != nil {
		return x.Redeemed
	}
	return nil
}

func (x *BillingCouponFilter) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

type BillingCouponResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coupons     []*BillingCoupon           `protobuf:"bytes,1,rep,name=coupons,proto3" json:"coupons,omitempty"`
	Redemptions []*BillingCouponRedemption `protobuf:"bytes,2,rep,name=redemptions,proto3" json:"redemptions,omitempty"`
}

func (x *BillingCouponResponse) Reset() {
	*x = BillingCouponResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCouponResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCouponResponse) ProtoMessage() {}

func (x *BillingCouponResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCouponResponse.ProtoReflect.Descriptor instead.
func (*BillingCouponResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{15}
}

func (x *BillingCouponResponse) GetCoupons() []*BillingCoupon {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *BillingCouponResponse) GetRedemptions() []*BillingCouponRedemption {
	if x != nil {
		return x.Redemptions
	}
	return nil
}

type BillingCouponRedeem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	CloudAccountId string `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *BillingCouponRedeem) Reset() {
	*x = BillingCouponRedeem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCouponRedeem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCouponRedeem) ProtoMessage() {}

func (x *BillingCouponRedeem) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCouponRedeem.ProtoReflect.Descriptor instead.
func (*BillingCouponRedeem) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{16}
}

func (x *BillingCouponRedeem) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BillingCouponRedeem) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type BillingCouponDisable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Disabled *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *BillingCouponDisable) Reset() {
	*x = BillingCouponDisable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCouponDisable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCouponDisable) ProtoMessage() {}

func (x *BillingCouponDisable) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCouponDisable.ProtoReflect.Descriptor instead.
func (*BillingCouponDisable) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{17}
}

func (x *BillingCouponDisable) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BillingCouponDisable) GetDisabled() *timestamppb.Timestamp {
	if x != nil {
		return x.Disabled
	}
	return nil
}

type BillingCouponCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	Expires    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
	Amount     float64                `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	NumUses    uint32                 `protobuf:"varint,6,opt,name=numUses,proto3" json:"numUses,omitempty"`
	Creator    string                 `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
	IsStandard *bool                  `protobuf:"varint,8,opt,name=isStandard,proto3,oneof" json:"isStandard,omitempty"`
}

func (x *BillingCouponCreate) Reset() {
	*x = BillingCouponCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCouponCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCouponCreate) ProtoMessage() {}

func (x *BillingCouponCreate) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCouponCreate.ProtoReflect.Descriptor instead.
func (*BillingCouponCreate) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{18}
}

func (x *BillingCouponCreate) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *BillingCouponCreate) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

func (x *BillingCouponCreate) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BillingCouponCreate) GetNumUses() uint32 {
	if x != nil {
		return x.NumUses
	}
	return 0
}

func (x *BillingCouponCreate) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *BillingCouponCreate) GetIsStandard() bool {
	if x != nil && x.IsStandard != nil {
		return *x.IsStandard
	}
	return false
}

type BillingCoupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string                     `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Creator     string                     `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Created     *timestamppb.Timestamp     `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Start       *timestamppb.Timestamp     `protobuf:"bytes,4,opt,name=start,proto3" json:"start,omitempty"`
	Expires     *timestamppb.Timestamp     `protobuf:"bytes,5,opt,name=expires,proto3" json:"expires,omitempty"`
	Disabled    *timestamppb.Timestamp     `protobuf:"bytes,6,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Amount      float64                    `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
	NumUses     uint32                     `protobuf:"varint,8,opt,name=numUses,proto3" json:"numUses,omitempty"`
	NumRedeemed uint32                     `protobuf:"varint,9,opt,name=numRedeemed,proto3" json:"numRedeemed,omitempty"`
	Redemptions []*BillingCouponRedemption `protobuf:"bytes,10,rep,name=redemptions,proto3" json:"redemptions,omitempty"`
	IsStandard  *bool                      `protobuf:"varint,11,opt,name=isStandard,proto3,oneof" json:"isStandard,omitempty"`
}

func (x *BillingCoupon) Reset() {
	*x = BillingCoupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCoupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCoupon) ProtoMessage() {}

func (x *BillingCoupon) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCoupon.ProtoReflect.Descriptor instead.
func (*BillingCoupon) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{19}
}

func (x *BillingCoupon) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BillingCoupon) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *BillingCoupon) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *BillingCoupon) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *BillingCoupon) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

func (x *BillingCoupon) GetDisabled() *timestamppb.Timestamp {
	if x != nil {
		return x.Disabled
	}
	return nil
}

func (x *BillingCoupon) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BillingCoupon) GetNumUses() uint32 {
	if x != nil {
		return x.NumUses
	}
	return 0
}

func (x *BillingCoupon) GetNumRedeemed() uint32 {
	if x != nil {
		return x.NumRedeemed
	}
	return 0
}

func (x *BillingCoupon) GetRedemptions() []*BillingCouponRedemption {
	if x != nil {
		return x.Redemptions
	}
	return nil
}

func (x *BillingCoupon) GetIsStandard() bool {
	if x != nil && x.IsStandard != nil {
		return *x.IsStandard
	}
	return false
}

type BillingCouponRedemption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	CloudAccountId string                 `protobuf:"bytes,2,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	Redeemed       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=redeemed,proto3" json:"redeemed,omitempty"`
	Installed      bool                   `protobuf:"varint,4,opt,name=installed,proto3" json:"installed,omitempty"`
	Creator        string                 `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *BillingCouponRedemption) Reset() {
	*x = BillingCouponRedemption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingCouponRedemption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingCouponRedemption) ProtoMessage() {}

func (x *BillingCouponRedemption) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingCouponRedemption.ProtoReflect.Descriptor instead.
func (*BillingCouponRedemption) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{20}
}

func (x *BillingCouponRedemption) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BillingCouponRedemption) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingCouponRedemption) GetRedeemed() *timestamppb.Timestamp {
	if x != nil {
		return x.Redeemed
	}
	return nil
}

func (x *BillingCouponRedemption) GetInstalled() bool {
	if x != nil {
		return x.Installed
	}
	return false
}

func (x *BillingCouponRedemption) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type BillingInvoiceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string                 `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	Id             *uint64                `protobuf:"varint,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	SearchStart    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=searchStart,proto3,oneof" json:"searchStart,omitempty"`
	SearchEnd      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=searchEnd,proto3,oneof" json:"searchEnd,omitempty"`
}

func (x *BillingInvoiceFilter) Reset() {
	*x = BillingInvoiceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingInvoiceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingInvoiceFilter) ProtoMessage() {}

func (x *BillingInvoiceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingInvoiceFilter.ProtoReflect.Descriptor instead.
func (*BillingInvoiceFilter) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{21}
}

func (x *BillingInvoiceFilter) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingInvoiceFilter) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BillingInvoiceFilter) GetSearchStart() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchStart
	}
	return nil
}

func (x *BillingInvoiceFilter) GetSearchEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchEnd
	}
	return nil
}

type BillingInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	Invoices    []*Invoice             `protobuf:"bytes,2,rep,name=invoices,proto3" json:"invoices,omitempty"`
}

func (x *BillingInvoiceResponse) Reset() {
	*x = BillingInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingInvoiceResponse) ProtoMessage() {}

func (x *BillingInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingInvoiceResponse.ProtoReflect.Descriptor instead.
func (*BillingInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{22}
}

func (x *BillingInvoiceResponse) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *BillingInvoiceResponse) GetInvoices() []*Invoice {
	if x != nil {
		return x.Invoices
	}
	return nil
}

type InvoiceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string                 `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	Start     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	Rate      *Rate                  `protobuf:"bytes,5,opt,name=rate,proto3" json:"rate,omitempty"`
	Usage     float64                `protobuf:"fixed64,6,opt,name=usage,proto3" json:"usage,omitempty"`
	Amount    float64                `protobuf:"fixed64,7,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *InvoiceDetail) Reset() {
	*x = InvoiceDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceDetail) ProtoMessage() {}

func (x *InvoiceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceDetail.ProtoReflect.Descriptor instead.
func (*InvoiceDetail) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{23}
}

func (x *InvoiceDetail) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *InvoiceDetail) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *InvoiceDetail) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *InvoiceDetail) GetRate() *Rate {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *InvoiceDetail) GetUsage() float64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *InvoiceDetail) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string                 `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	Id             uint64                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Total          float64                `protobuf:"fixed64,3,opt,name=total,proto3" json:"total,omitempty"`
	Paid           float64                `protobuf:"fixed64,4,opt,name=paid,proto3" json:"paid,omitempty"`
	Due            float64                `protobuf:"fixed64,5,opt,name=due,proto3" json:"due,omitempty"`
	Start          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
	End            *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end,proto3" json:"end,omitempty"`
	InvoiceDate    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=invoiceDate,proto3" json:"invoiceDate,omitempty"`
	DueDate        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	NotifyDate     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=notifyDate,proto3" json:"notifyDate,omitempty"`
	PaidDate       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=paidDate,proto3" json:"paidDate,omitempty"`
	BillingPeriod  string                 `protobuf:"bytes,12,opt,name=billingPeriod,proto3" json:"billingPeriod,omitempty"`
	Status         string                 `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	StatementLink  string                 `protobuf:"bytes,14,opt,name=statementLink,proto3" json:"statementLink,omitempty"`
	DownloadLink   string                 `protobuf:"bytes,15,opt,name=downloadLink,proto3" json:"downloadLink,omitempty"`
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{24}
}

func (x *Invoice) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *Invoice) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Invoice) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Invoice) GetPaid() float64 {
	if x != nil {
		return x.Paid
	}
	return 0
}

func (x *Invoice) GetDue() float64 {
	if x != nil {
		return x.Due
	}
	return 0
}

func (x *Invoice) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Invoice) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Invoice) GetInvoiceDate() *timestamppb.Timestamp {
	if x != nil {
		return x.InvoiceDate
	}
	return nil
}

func (x *Invoice) GetDueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DueDate
	}
	return nil
}

func (x *Invoice) GetNotifyDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NotifyDate
	}
	return nil
}

func (x *Invoice) GetPaidDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PaidDate
	}
	return nil
}

func (x *Invoice) GetBillingPeriod() string {
	if x != nil {
		return x.BillingPeriod
	}
	return ""
}

func (x *Invoice) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Invoice) GetStatementLink() string {
	if x != nil {
		return x.StatementLink
	}
	return ""
}

func (x *Invoice) GetDownloadLink() string {
	if x != nil {
		return x.DownloadLink
	}
	return ""
}

type InvoiceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	InvoiceId      int64  `protobuf:"varint,2,opt,name=invoiceId,proto3" json:"invoiceId,omitempty"`
}

func (x *InvoiceId) Reset() {
	*x = InvoiceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceId) ProtoMessage() {}

func (x *InvoiceId) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceId.ProtoReflect.Descriptor instead.
func (*InvoiceId) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{25}
}

func (x *InvoiceId) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *InvoiceId) GetInvoiceId() int64 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

type Statement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType  string `protobuf:"bytes,1,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	Statement []byte `protobuf:"bytes,2,opt,name=statement,proto3" json:"statement,omitempty"`
}

func (x *Statement) Reset() {
	*x = Statement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{26}
}

func (x *Statement) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Statement) GetStatement() []byte {
	if x != nil {
		return x.Statement
	}
	return nil
}

type PrePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *PrePaymentRequest) Reset() {
	*x = PrePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrePaymentRequest) ProtoMessage() {}

func (x *PrePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrePaymentRequest.ProtoReflect.Descriptor instead.
func (*PrePaymentRequest) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{27}
}

func (x *PrePaymentRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type PrePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId     string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	DirectPostUrl string `protobuf:"bytes,2,opt,name=directPostUrl,proto3" json:"directPostUrl,omitempty"`
	FunctionMode  string `protobuf:"bytes,3,opt,name=functionMode,proto3" json:"functionMode,omitempty"`
}

func (x *PrePaymentResponse) Reset() {
	*x = PrePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrePaymentResponse) ProtoMessage() {}

func (x *PrePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrePaymentResponse.ProtoReflect.Descriptor instead.
func (*PrePaymentResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{28}
}

func (x *PrePaymentResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *PrePaymentResponse) GetDirectPostUrl() string {
	if x != nil {
		return x.DirectPostUrl
	}
	return ""
}

func (x *PrePaymentResponse) GetFunctionMode() string {
	if x != nil {
		return x.FunctionMode
	}
	return ""
}

type PostPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId         string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	PrimaryPaymentMethodNo int64  `protobuf:"varint,2,opt,name=primaryPaymentMethodNo,proto3" json:"primaryPaymentMethodNo,omitempty"`
}

func (x *PostPaymentRequest) Reset() {
	*x = PostPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPaymentRequest) ProtoMessage() {}

func (x *PostPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostPaymentRequest.ProtoReflect.Descriptor instead.
func (*PostPaymentRequest) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{29}
}

func (x *PostPaymentRequest) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *PostPaymentRequest) GetPrimaryPaymentMethodNo() int64 {
	if x != nil {
		return x.PrimaryPaymentMethodNo
	}
	return 0
}

type BillingPaidInstanceFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
}

func (x *BillingPaidInstanceFilter) Reset() {
	*x = BillingPaidInstanceFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingPaidInstanceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingPaidInstanceFilter) ProtoMessage() {}

func (x *BillingPaidInstanceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingPaidInstanceFilter.ProtoReflect.Descriptor instead.
func (*BillingPaidInstanceFilter) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{30}
}

func (x *BillingPaidInstanceFilter) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

type BillingPaidInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceTypes []string `protobuf:"bytes,1,rep,name=instance_types,json=instanceTypes,proto3" json:"instance_types,omitempty"`
}

func (x *BillingPaidInstanceResponse) Reset() {
	*x = BillingPaidInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingPaidInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingPaidInstanceResponse) ProtoMessage() {}

func (x *BillingPaidInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingPaidInstanceResponse.ProtoReflect.Descriptor instead.
func (*BillingPaidInstanceResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{31}
}

func (x *BillingPaidInstanceResponse) GetInstanceTypes() []string {
	if x != nil {
		return x.InstanceTypes
	}
	return nil
}

type BillingUsageFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string                 `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	SearchStart    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=searchStart,proto3,oneof" json:"searchStart,omitempty"`
	SearchEnd      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=searchEnd,proto3,oneof" json:"searchEnd,omitempty"`
	RegionName     *string                `protobuf:"bytes,4,opt,name=regionName,proto3,oneof" json:"regionName,omitempty"`
}

func (x *BillingUsageFilter) Reset() {
	*x = BillingUsageFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingUsageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingUsageFilter) ProtoMessage() {}

func (x *BillingUsageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingUsageFilter.ProtoReflect.Descriptor instead.
func (*BillingUsageFilter) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{32}
}

func (x *BillingUsageFilter) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *BillingUsageFilter) GetSearchStart() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchStart
	}
	return nil
}

func (x *BillingUsageFilter) GetSearchEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.SearchEnd
	}
	return nil
}

func (x *BillingUsageFilter) GetRegionName() string {
	if x != nil && x.RegionName != nil {
		return *x.RegionName
	}
	return ""
}

type BillingUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAmount float64                `protobuf:"fixed64,1,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	DownloadUrl string                 `protobuf:"bytes,3,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"`
	Period      string                 `protobuf:"bytes,4,opt,name=period,proto3" json:"period,omitempty"`
	Usages      []*BillingUsage        `protobuf:"bytes,5,rep,name=usages,proto3" json:"usages,omitempty"`
	TotalUsage  float64                `protobuf:"fixed64,6,opt,name=totalUsage,proto3" json:"totalUsage,omitempty"`
}

func (x *BillingUsageResponse) Reset() {
	*x = BillingUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingUsageResponse) ProtoMessage() {}

func (x *BillingUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingUsageResponse.ProtoReflect.Descriptor instead.
func (*BillingUsageResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{33}
}

func (x *BillingUsageResponse) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *BillingUsageResponse) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *BillingUsageResponse) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *BillingUsageResponse) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *BillingUsageResponse) GetUsages() []*BillingUsage {
	if x != nil {
		return x.Usages
	}
	return nil
}

func (x *BillingUsageResponse) GetTotalUsage() float64 {
	if x != nil {
		return x.TotalUsage
	}
	return 0
}

type BillingUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName         string                 `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ProductType         string                 `protobuf:"bytes,2,opt,name=productType,proto3" json:"productType,omitempty"`
	Start               *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	End                 *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	MinsUsed            float64                `protobuf:"fixed64,5,opt,name=minsUsed,proto3" json:"minsUsed,omitempty"`
	Amount              float64                `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Rate                string                 `protobuf:"bytes,7,opt,name=rate,proto3" json:"rate,omitempty"`
	RegionName          string                 `protobuf:"bytes,8,opt,name=regionName,proto3" json:"regionName,omitempty"`
	BillingUsageMetrics *BillingUsageMetrics   `protobuf:"bytes,9,opt,name=billingUsageMetrics,proto3" json:"billingUsageMetrics,omitempty"`
	ProductFamily       string                 `protobuf:"bytes,10,opt,name=productFamily,proto3" json:"productFamily,omitempty"`
}

func (x *BillingUsage) Reset() {
	*x = BillingUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingUsage) ProtoMessage() {}

func (x *BillingUsage) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingUsage.ProtoReflect.Descriptor instead.
func (*BillingUsage) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{34}
}

func (x *BillingUsage) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *BillingUsage) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *BillingUsage) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *BillingUsage) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *BillingUsage) GetMinsUsed() float64 {
	if x != nil {
		return x.MinsUsed
	}
	return 0
}

func (x *BillingUsage) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BillingUsage) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *BillingUsage) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *BillingUsage) GetBillingUsageMetrics() *BillingUsageMetrics {
	if x != nil {
		return x.BillingUsageMetrics
	}
	return nil
}

func (x *BillingUsage) GetProductFamily() string {
	if x != nil {
		return x.ProductFamily
	}
	return ""
}

type BillingUsageMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsageQuantity         float64 `protobuf:"fixed64,1,opt,name=usageQuantity,proto3" json:"usageQuantity,omitempty"`
	UsageUnitName         string  `protobuf:"bytes,2,opt,name=usageUnitName,proto3" json:"usageUnitName,omitempty"`
	UsageQuantityUnitName string  `protobuf:"bytes,3,opt,name=usageQuantityUnitName,proto3" json:"usageQuantityUnitName,omitempty"`
}

func (x *BillingUsageMetrics) Reset() {
	*x = BillingUsageMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillingUsageMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingUsageMetrics) ProtoMessage() {}

func (x *BillingUsageMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingUsageMetrics.ProtoReflect.Descriptor instead.
func (*BillingUsageMetrics) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{35}
}

func (x *BillingUsageMetrics) GetUsageQuantity() float64 {
	if x != nil {
		return x.UsageQuantity
	}
	return 0
}

func (x *BillingUsageMetrics) GetUsageUnitName() string {
	if x != nil {
		return x.UsageUnitName
	}
	return ""
}

func (x *BillingUsageMetrics) GetUsageQuantityUnitName() string {
	if x != nil {
		return x.UsageQuantityUnitName
	}
	return ""
}

type SchedulerAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action SchedulerActionType `protobuf:"varint,1,opt,name=action,proto3,enum=proto.SchedulerActionType" json:"action,omitempty"`
}

func (x *SchedulerAction) Reset() {
	*x = SchedulerAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulerAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulerAction) ProtoMessage() {}

func (x *SchedulerAction) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulerAction.ProtoReflect.Descriptor instead.
func (*SchedulerAction) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{36}
}

func (x *SchedulerAction) GetAction() SchedulerActionType {
	if x != nil {
		return x.Action
	}
	return SchedulerActionType_START_CREDIT_INSTALL_SCHEDULER
}

type InstanceQuotas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceType string `protobuf:"bytes,1,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	Limit        int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *InstanceQuotas) Reset() {
	*x = InstanceQuotas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceQuotas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceQuotas) ProtoMessage() {}

func (x *InstanceQuotas) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceQuotas.ProtoReflect.Descriptor instead.
func (*InstanceQuotas) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{37}
}

func (x *InstanceQuotas) GetInstanceType() string {
	if x != nil {
		return x.InstanceType
	}
	return ""
}

func (x *InstanceQuotas) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DeactivateInstances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string            `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	Quotas         []*InstanceQuotas `protobuf:"bytes,2,rep,name=quotas,proto3" json:"quotas,omitempty"`
}

func (x *DeactivateInstances) Reset() {
	*x = DeactivateInstances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateInstances) ProtoMessage() {}

func (x *DeactivateInstances) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateInstances.ProtoReflect.Descriptor instead.
func (*DeactivateInstances) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{38}
}

func (x *DeactivateInstances) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *DeactivateInstances) GetQuotas() []*InstanceQuotas {
	if x != nil {
		return x.Quotas
	}
	return nil
}

type DeactivateAccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId  string                 `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	Email           string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	CreditsDepleted *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=creditsDepleted,proto3" json:"creditsDepleted,omitempty"`
}

func (x *DeactivateAccounts) Reset() {
	*x = DeactivateAccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateAccounts) ProtoMessage() {}

func (x *DeactivateAccounts) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateAccounts.ProtoReflect.Descriptor instead.
func (*DeactivateAccounts) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{39}
}

func (x *DeactivateAccounts) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *DeactivateAccounts) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeactivateAccounts) GetCreditsDepleted() *timestamppb.Timestamp {
	if x != nil {
		return x.CreditsDepleted
	}
	return nil
}

type DeactivateInstancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeactivationList []*DeactivateInstances `protobuf:"bytes,1,rep,name=deactivationList,proto3" json:"deactivationList,omitempty"`
}

func (x *DeactivateInstancesResponse) Reset() {
	*x = DeactivateInstancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateInstancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateInstancesResponse) ProtoMessage() {}

func (x *DeactivateInstancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateInstancesResponse.ProtoReflect.Descriptor instead.
func (*DeactivateInstancesResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{40}
}

func (x *DeactivateInstancesResponse) GetDeactivationList() []*DeactivateInstances {
	if x != nil {
		return x.DeactivationList
	}
	return nil
}

// The request message for getting payment exausted cloud accounts
type GetDeactivatedAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductFamily    *string `protobuf:"bytes,1,opt,name=productFamily,proto3,oneof" json:"productFamily,omitempty"` // Filter by product family, e.g., "Storage as Service"
	CleanupThreshold *string `protobuf:"bytes,2,opt,name=cleanupThreshold,proto3,oneof" json:"cleanupThreshold,omitempty"`
	TradeRestricted  *bool   `protobuf:"varint,3,opt,name=tradeRestricted,proto3,oneof" json:"tradeRestricted,omitempty"`
}

func (x *GetDeactivatedAccountsRequest) Reset() {
	*x = GetDeactivatedAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeactivatedAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeactivatedAccountsRequest) ProtoMessage() {}

func (x *GetDeactivatedAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeactivatedAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetDeactivatedAccountsRequest) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{41}
}

func (x *GetDeactivatedAccountsRequest) GetProductFamily() string {
	if x != nil && x.ProductFamily != nil {
		return *x.ProductFamily
	}
	return ""
}

func (x *GetDeactivatedAccountsRequest) GetCleanupThreshold() string {
	if x != nil && x.CleanupThreshold != nil {
		return *x.CleanupThreshold
	}
	return ""
}

func (x *GetDeactivatedAccountsRequest) GetTradeRestricted() bool {
	if x != nil && x.TradeRestricted != nil {
		return *x.TradeRestricted
	}
	return false
}

var File_billing_proto protoreflect.FileDescriptor

var file_billing_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x0e, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b,
	0x02, 0x38, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb5, 0x02, 0x0a, 0x13, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b,
	0x02, 0x38, 0x01, 0x48, 0x02, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xb6, 0x03, 0x0a, 0x0d, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x33, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x58, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x74, 0x0a, 0x11, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x74,
	0x0a, 0x0b, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x15, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x2e, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xae, 0x01,
	0x0a, 0x16, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf7,
	0x02, 0x0a, 0x0d, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02,
	0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28,
	0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x64, 0x22, 0x49, 0x0a, 0x1d, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x55, 0x6e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x6e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x75, 0x6e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x13, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b, 0x02, 0x38, 0x01,
	0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0xdb, 0x02, 0x0a, 0x15,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x13, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x08, 0x72, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x64,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5f, 0x0a, 0x13, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x34, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0xaa,
	0xdd, 0x1b, 0x02, 0x38, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x14, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x13, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x55, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x55, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0a, 0x69, 0x73, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x73, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69,
	0x73, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x22, 0xdd, 0x03, 0x0a, 0x0d, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x55, 0x73,
	0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x55, 0x73, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65,
	0x64, 0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x65, 0x6d, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0a, 0x69, 0x73, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x73, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69,
	0x73, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x22, 0xc5, 0x01, 0x0a, 0x17, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0x88, 0x02, 0x0a, 0x14, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b, 0x02, 0x38, 0x01,
	0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x64, 0x22, 0x82, 0x01, 0x0a,
	0x16, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x22, 0xdc, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x12, 0x1f, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xcd, 0x04, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x75, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x12, 0x3c, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x36, 0x0a, 0x08, 0x70, 0x61, 0x69, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x70, 0x61, 0x69, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x6b,
	0x22, 0x5f, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b,
	0x02, 0x38, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x45, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a,
	0x12, 0x50, 0x72, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x55,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x7c, 0x0a, 0x12, 0x50,
	0x6f, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08,
	0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x16, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x6f, 0x22, 0x4b, 0x0a, 0x19, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x1b, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x69, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x9e, 0x02, 0x0a,
	0x12, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xaa, 0xdd, 0x1b,
	0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b, 0x02, 0x38, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x09,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xfd, 0x01,
	0x0a, 0x14, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x2b, 0x0a, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8e, 0x03,
	0x0a, 0x0c, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x52, 0x13, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x22, 0x97,
	0x01, 0x0a, 0x13, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x75, 0x73, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x75, 0x73, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x55, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x0f, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4a, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x74, 0x0a, 0x13, 0x44,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02,
	0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x73, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x44,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x44, 0x65, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x22, 0x65, 0x0a, 0x1b, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x10, 0x64, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x63, 0x6c, 0x65, 0x61,
	0x6e, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x02, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63,
	0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x2a, 0x6a, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x4f, 0x57, 0x4e, 0x47, 0x52,
	0x41, 0x44, 0x45, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x35, 0x0a, 0x31, 0x44, 0x4f, 0x57, 0x4e,
	0x47, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x4d, 0x49, 0x55, 0x4d, 0x5f, 0x54, 0x4f,
	0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x50,
	0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x2a,
	0x52, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x59, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x54, 0x48, 0x45,
	0x52, 0x10, 0x02, 0x2a, 0x6a, 0x0a, 0x13, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x52,
	0x45, 0x44, 0x49, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x49,
	0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54,
	0x5f, 0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x55, 0x50, 0x4f, 0x4e, 0x10, 0x03, 0x2a,
	0xe5, 0x01, 0x0a, 0x13, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c, 0x4c, 0x5f,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x5f, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x43,
	0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x53,
	0x54, 0x41, 0x52, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x49,
	0x52, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x10, 0x04, 0x12, 0x27,
	0x0a, 0x23, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x48, 0x45,
	0x44, 0x55, 0x4c, 0x45, 0x52, 0x10, 0x05, 0x32, 0x83, 0x02, 0x0a, 0x15, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x60, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a,
	0x02, 0x08, 0x01, 0x12, 0x87, 0x01, 0x0a, 0x1a, 0x44, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x64, 0x6f, 0x77, 0x6e, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x32, 0x85, 0x01,
	0x0a, 0x14, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0xaa, 0xdd, 0x1b,
	0x04, 0x0a, 0x02, 0x48, 0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x1a, 0x06, 0xaa,
	0xdd, 0x1b, 0x02, 0x08, 0x01, 0x32, 0x77, 0x0a, 0x12, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x52, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x04, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x52, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x61, 0x74,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x72, 0x61, 0x74, 0x65, 0x73, 0xaa, 0xdd, 0x1b, 0x04,
	0x0a, 0x02, 0x08, 0x01, 0x30, 0x01, 0x1a, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x32, 0x88,
	0x06, 0x0a, 0x14, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x2b, 0x88, 0x02, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x4a, 0x0a, 0x0c,
	0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x22, 0x0b, 0x88, 0x02, 0x01, 0xaa, 0xdd,
	0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x30, 0x01, 0x12, 0x7a, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x88, 0x02, 0x01, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x72, 0x65,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x48, 0x01, 0xaa, 0xdd, 0x1b, 0x04,
	0x0a, 0x02, 0x08, 0x01, 0x12, 0x9d, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x61, 0x64, 0x55, 0x6e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x42, 0x88, 0x02, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x75, 0x6e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x64, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x48, 0x01, 0xaa, 0xdd, 0x1b, 0x04,
	0x0a, 0x02, 0x08, 0x01, 0x12, 0x89, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x6e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x41, 0x88,
	0x02, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x6d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01,
	0x12, 0x96, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x48, 0x88, 0x02, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x22, 0x32, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x64, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x3a, 0x01,
	0x2a, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0x32, 0xe7, 0x03, 0x0a, 0x14, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x68, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x22, 0x2c,
	0x88, 0x02, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x6b, 0x0a, 0x04,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0x88, 0x02, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x06, 0x52, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x43, 0x88, 0x02, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2a, 0x22, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x73, 0x2f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x3a, 0x01, 0x2a, 0xaa, 0xdd, 0x1b,
	0x04, 0x0a, 0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x48, 0x01, 0x12, 0x74, 0x0a,
	0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x34, 0x88,
	0x02, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x3a, 0x01, 0x2a, 0x32, 0xe1, 0x03, 0x0a, 0x15, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x70, 0x0a,
	0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0xaa,
	0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x48, 0x01, 0x12,
	0x6b, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x1a,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02,
	0x08, 0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x48, 0x01, 0x30, 0x01, 0x12, 0x74, 0x0a, 0x0c,
	0x52, 0x65, 0x61, 0x64, 0x55, 0x6e, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x75, 0x6e, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x48, 0x01,
	0x30, 0x01, 0x12, 0x6b, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12,
	0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0xaa,
	0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x48, 0x01, 0x1a,
	0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x32, 0x77, 0x0a, 0x20, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x3a, 0x01, 0x2a,
	0x32, 0x9a, 0x02, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x70, 0x72, 0x65, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0xaa, 0xdd, 0x1b, 0x04,
	0x0a, 0x02, 0x08, 0x01, 0x12, 0x7f, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0xaa, 0xdd, 0x1b,
	0x04, 0x0a, 0x02, 0x08, 0x01, 0x1a, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x32, 0x97, 0x01,
	0x0a, 0x17, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x04, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x69, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x69, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12,
	0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x61, 0x69,
	0x64, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a,
	0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x32, 0x81, 0x01, 0x0a, 0x13, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x55, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6a, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x73, 0xaa, 0xdd, 0x1b, 0x04, 0x0a,
	0x02, 0x08, 0x01, 0xaa, 0xdd, 0x1b, 0x04, 0x0a, 0x02, 0x48, 0x01, 0x32, 0x81, 0x01, 0x0a, 0x17,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x6f, 0x70, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x32,
	0xfa, 0x03, 0x0a, 0x21, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2f, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x30, 0x01, 0x12, 0x8a, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x30, 0x01, 0x12, 0x38, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x55, 0x5a, 0x4d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c,
	0x2d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x65,
	0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x69, 0x64, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0xaa, 0xdd, 0x1b,
	0x02, 0x08, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_billing_proto_rawDescOnce sync.Once
	file_billing_proto_rawDescData = file_billing_proto_rawDesc
)

func file_billing_proto_rawDescGZIP() []byte {
	file_billing_proto_rawDescOnce.Do(func() {
		file_billing_proto_rawDescData = protoimpl.X.CompressGZIP(file_billing_proto_rawDescData)
	})
	return file_billing_proto_rawDescData
}

var file_billing_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_billing_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_billing_proto_goTypes = []interface{}{
	(DowngradeOption)(0),                  // 0: proto.DowngradeOption
	(PaymentType)(0),                      // 1: proto.PaymentType
	(BillingCreditReason)(0),              // 2: proto.BillingCreditReason
	(SchedulerActionType)(0),              // 3: proto.SchedulerActionType
	(*BillingAccount)(nil),                // 4: proto.BillingAccount
	(*BillingAccountDowngrade)(nil),       // 5: proto.BillingAccountDowngrade
	(*BillingOptionFilter)(nil),           // 6: proto.BillingOptionFilter
	(*BillingOption)(nil),                 // 7: proto.BillingOption
	(*CreditCard)(nil),                    // 8: proto.CreditCard
	(*PaymentMethodOther)(nil),            // 9: proto.PaymentMethodOther
	(*BillingRateFilter)(nil),             // 10: proto.BillingRateFilter
	(*BillingRate)(nil),                   // 11: proto.BillingRate
	(*BillingMigratedCredit)(nil),         // 12: proto.BillingMigratedCredit
	(*BillingUnappliedCredit)(nil),        // 13: proto.BillingUnappliedCredit
	(*BillingCredit)(nil),                 // 14: proto.BillingCredit
	(*BillingUnappliedCreditBalance)(nil), // 15: proto.BillingUnappliedCreditBalance
	(*BillingCreditFilter)(nil),           // 16: proto.BillingCreditFilter
	(*BillingCreditResponse)(nil),         // 17: proto.BillingCreditResponse
	(*BillingCouponFilter)(nil),           // 18: proto.BillingCouponFilter
	(*BillingCouponResponse)(nil),         // 19: proto.BillingCouponResponse
	(*BillingCouponRedeem)(nil),           // 20: proto.BillingCouponRedeem
	(*BillingCouponDisable)(nil),          // 21: proto.BillingCouponDisable
	(*BillingCouponCreate)(nil),           // 22: proto.BillingCouponCreate
	(*BillingCoupon)(nil),                 // 23: proto.BillingCoupon
	(*BillingCouponRedemption)(nil),       // 24: proto.BillingCouponRedemption
	(*BillingInvoiceFilter)(nil),          // 25: proto.BillingInvoiceFilter
	(*BillingInvoiceResponse)(nil),        // 26: proto.BillingInvoiceResponse
	(*InvoiceDetail)(nil),                 // 27: proto.InvoiceDetail
	(*Invoice)(nil),                       // 28: proto.Invoice
	(*InvoiceId)(nil),                     // 29: proto.InvoiceId
	(*Statement)(nil),                     // 30: proto.Statement
	(*PrePaymentRequest)(nil),             // 31: proto.PrePaymentRequest
	(*PrePaymentResponse)(nil),            // 32: proto.PrePaymentResponse
	(*PostPaymentRequest)(nil),            // 33: proto.PostPaymentRequest
	(*BillingPaidInstanceFilter)(nil),     // 34: proto.BillingPaidInstanceFilter
	(*BillingPaidInstanceResponse)(nil),   // 35: proto.BillingPaidInstanceResponse
	(*BillingUsageFilter)(nil),            // 36: proto.BillingUsageFilter
	(*BillingUsageResponse)(nil),          // 37: proto.BillingUsageResponse
	(*BillingUsage)(nil),                  // 38: proto.BillingUsage
	(*BillingUsageMetrics)(nil),           // 39: proto.BillingUsageMetrics
	(*SchedulerAction)(nil),               // 40: proto.SchedulerAction
	(*InstanceQuotas)(nil),                // 41: proto.InstanceQuotas
	(*DeactivateInstances)(nil),           // 42: proto.DeactivateInstances
	(*DeactivateAccounts)(nil),            // 43: proto.DeactivateAccounts
	(*DeactivateInstancesResponse)(nil),   // 44: proto.DeactivateInstancesResponse
	(*GetDeactivatedAccountsRequest)(nil), // 45: proto.GetDeactivatedAccountsRequest
	(*timestamppb.Timestamp)(nil),         // 46: google.protobuf.Timestamp
	(*Rate)(nil),                          // 47: proto.Rate
	(*emptypb.Empty)(nil),                 // 48: google.protobuf.Empty
}
var file_billing_proto_depIdxs = []int32{
	0,  // 0: proto.BillingAccountDowngrade.downgradeOption:type_name -> proto.DowngradeOption
	46, // 1: proto.BillingOptionFilter.startTime:type_name -> google.protobuf.Timestamp
	46, // 2: proto.BillingOptionFilter.endTime:type_name -> google.protobuf.Timestamp
	46, // 3: proto.BillingOption.created:type_name -> google.protobuf.Timestamp
	1,  // 4: proto.BillingOption.paymentType:type_name -> proto.PaymentType
	8,  // 5: proto.BillingOption.creditCard:type_name -> proto.CreditCard
	9,  // 6: proto.BillingOption.other:type_name -> proto.PaymentMethodOther
	47, // 7: proto.BillingRate.rate:type_name -> proto.Rate
	46, // 8: proto.BillingUnappliedCredit.expiration:type_name -> google.protobuf.Timestamp
	46, // 9: proto.BillingCredit.created:type_name -> google.protobuf.Timestamp
	46, // 10: proto.BillingCredit.expiration:type_name -> google.protobuf.Timestamp
	2,  // 11: proto.BillingCredit.reason:type_name -> proto.BillingCreditReason
	46, // 12: proto.BillingCreditResponse.lastUpdated:type_name -> google.protobuf.Timestamp
	46, // 13: proto.BillingCreditResponse.expirationDate:type_name -> google.protobuf.Timestamp
	14, // 14: proto.BillingCreditResponse.credits:type_name -> proto.BillingCredit
	46, // 15: proto.BillingCouponFilter.redeemed:type_name -> google.protobuf.Timestamp
	23, // 16: proto.BillingCouponResponse.coupons:type_name -> proto.BillingCoupon
	24, // 17: proto.BillingCouponResponse.redemptions:type_name -> proto.BillingCouponRedemption
	46, // 18: proto.BillingCouponDisable.disabled:type_name -> google.protobuf.Timestamp
	46, // 19: proto.BillingCouponCreate.start:type_name -> google.protobuf.Timestamp
	46, // 20: proto.BillingCouponCreate.expires:type_name -> google.protobuf.Timestamp
	46, // 21: proto.BillingCoupon.created:type_name -> google.protobuf.Timestamp
	46, // 22: proto.BillingCoupon.start:type_name -> google.protobuf.Timestamp
	46, // 23: proto.BillingCoupon.expires:type_name -> google.protobuf.Timestamp
	46, // 24: proto.BillingCoupon.disabled:type_name -> google.protobuf.Timestamp
	24, // 25: proto.BillingCoupon.redemptions:type_name -> proto.BillingCouponRedemption
	46, // 26: proto.BillingCouponRedemption.redeemed:type_name -> google.protobuf.Timestamp
	46, // 27: proto.BillingInvoiceFilter.searchStart:type_name -> google.protobuf.Timestamp
	46, // 28: proto.BillingInvoiceFilter.searchEnd:type_name -> google.protobuf.Timestamp
	46, // 29: proto.BillingInvoiceResponse.lastUpdated:type_name -> google.protobuf.Timestamp
	28, // 30: proto.BillingInvoiceResponse.invoices:type_name -> proto.Invoice
	46, // 31: proto.InvoiceDetail.start:type_name -> google.protobuf.Timestamp
	46, // 32: proto.InvoiceDetail.end:type_name -> google.protobuf.Timestamp
	47, // 33: proto.InvoiceDetail.rate:type_name -> proto.Rate
	46, // 34: proto.Invoice.start:type_name -> google.protobuf.Timestamp
	46, // 35: proto.Invoice.end:type_name -> google.protobuf.Timestamp
	46, // 36: proto.Invoice.invoiceDate:type_name -> google.protobuf.Timestamp
	46, // 37: proto.Invoice.dueDate:type_name -> google.protobuf.Timestamp
	46, // 38: proto.Invoice.notifyDate:type_name -> google.protobuf.Timestamp
	46, // 39: proto.Invoice.paidDate:type_name -> google.protobuf.Timestamp
	46, // 40: proto.BillingUsageFilter.searchStart:type_name -> google.protobuf.Timestamp
	46, // 41: proto.BillingUsageFilter.searchEnd:type_name -> google.protobuf.Timestamp
	46, // 42: proto.BillingUsageResponse.lastUpdated:type_name -> google.protobuf.Timestamp
	38, // 43: proto.BillingUsageResponse.usages:type_name -> proto.BillingUsage
	46, // 44: proto.BillingUsage.start:type_name -> google.protobuf.Timestamp
	46, // 45: proto.BillingUsage.end:type_name -> google.protobuf.Timestamp
	39, // 46: proto.BillingUsage.billingUsageMetrics:type_name -> proto.BillingUsageMetrics
	3,  // 47: proto.SchedulerAction.action:type_name -> proto.SchedulerActionType
	41, // 48: proto.DeactivateInstances.quotas:type_name -> proto.InstanceQuotas
	46, // 49: proto.DeactivateAccounts.creditsDepleted:type_name -> google.protobuf.Timestamp
	42, // 50: proto.DeactivateInstancesResponse.deactivationList:type_name -> proto.DeactivateInstances
	4,  // 51: proto.BillingAccountService.Create:input_type -> proto.BillingAccount
	5,  // 52: proto.BillingAccountService.DowngradePremiumtoStandard:input_type -> proto.BillingAccountDowngrade
	6,  // 53: proto.BillingOptionService.Read:input_type -> proto.BillingOptionFilter
	10, // 54: proto.BillingRateService.Read:input_type -> proto.BillingRateFilter
	14, // 55: proto.BillingCreditService.Create:input_type -> proto.BillingCredit
	4,  // 56: proto.BillingCreditService.ReadInternal:input_type -> proto.BillingAccount
	16, // 57: proto.BillingCreditService.Read:input_type -> proto.BillingCreditFilter
	4,  // 58: proto.BillingCreditService.ReadUnappliedCreditBalance:input_type -> proto.BillingAccount
	13, // 59: proto.BillingCreditService.CreditMigrate:input_type -> proto.BillingUnappliedCredit
	12, // 60: proto.BillingCreditService.DeleteMigratedCredit:input_type -> proto.BillingMigratedCredit
	22, // 61: proto.BillingCouponService.Create:input_type -> proto.BillingCouponCreate
	18, // 62: proto.BillingCouponService.Read:input_type -> proto.BillingCouponFilter
	20, // 63: proto.BillingCouponService.Redeem:input_type -> proto.BillingCouponRedeem
	21, // 64: proto.BillingCouponService.Disable:input_type -> proto.BillingCouponDisable
	25, // 65: proto.BillingInvoiceService.Read:input_type -> proto.BillingInvoiceFilter
	29, // 66: proto.BillingInvoiceService.ReadDetail:input_type -> proto.InvoiceId
	4,  // 67: proto.BillingInvoiceService.ReadUnbilled:input_type -> proto.BillingAccount
	29, // 68: proto.BillingInvoiceService.ReadStatement:input_type -> proto.InvoiceId
	48, // 69: proto.BillingProductCatalogSyncService.Sync:input_type -> google.protobuf.Empty
	31, // 70: proto.PaymentService.AddPaymentPreProcessing:input_type -> proto.PrePaymentRequest
	33, // 71: proto.PaymentService.AddPaymentPostProcessing:input_type -> proto.PostPaymentRequest
	34, // 72: proto.BillingInstancesService.Read:input_type -> proto.BillingPaidInstanceFilter
	36, // 73: proto.BillingUsageService.Read:input_type -> proto.BillingUsageFilter
	40, // 74: proto.BillingOpsActionService.Create:input_type -> proto.SchedulerAction
	48, // 75: proto.BillingDeactivateInstancesService.GetDeactivateInstances:input_type -> google.protobuf.Empty
	48, // 76: proto.BillingDeactivateInstancesService.GetDeactivateInstancesStream:input_type -> google.protobuf.Empty
	45, // 77: proto.BillingDeactivateInstancesService.GetDeactivatedServiceAccounts:input_type -> proto.GetDeactivatedAccountsRequest
	48, // 78: proto.BillingDeactivateInstancesService.Ping:input_type -> google.protobuf.Empty
	48, // 79: proto.BillingAccountService.Create:output_type -> google.protobuf.Empty
	48, // 80: proto.BillingAccountService.DowngradePremiumtoStandard:output_type -> google.protobuf.Empty
	7,  // 81: proto.BillingOptionService.Read:output_type -> proto.BillingOption
	11, // 82: proto.BillingRateService.Read:output_type -> proto.BillingRate
	48, // 83: proto.BillingCreditService.Create:output_type -> google.protobuf.Empty
	14, // 84: proto.BillingCreditService.ReadInternal:output_type -> proto.BillingCredit
	17, // 85: proto.BillingCreditService.Read:output_type -> proto.BillingCreditResponse
	15, // 86: proto.BillingCreditService.ReadUnappliedCreditBalance:output_type -> proto.BillingUnappliedCreditBalance
	48, // 87: proto.BillingCreditService.CreditMigrate:output_type -> google.protobuf.Empty
	48, // 88: proto.BillingCreditService.DeleteMigratedCredit:output_type -> google.protobuf.Empty
	23, // 89: proto.BillingCouponService.Create:output_type -> proto.BillingCoupon
	19, // 90: proto.BillingCouponService.Read:output_type -> proto.BillingCouponResponse
	48, // 91: proto.BillingCouponService.Redeem:output_type -> google.protobuf.Empty
	48, // 92: proto.BillingCouponService.Disable:output_type -> google.protobuf.Empty
	26, // 93: proto.BillingInvoiceService.Read:output_type -> proto.BillingInvoiceResponse
	27, // 94: proto.BillingInvoiceService.ReadDetail:output_type -> proto.InvoiceDetail
	27, // 95: proto.BillingInvoiceService.ReadUnbilled:output_type -> proto.InvoiceDetail
	30, // 96: proto.BillingInvoiceService.ReadStatement:output_type -> proto.Statement
	48, // 97: proto.BillingProductCatalogSyncService.Sync:output_type -> google.protobuf.Empty
	32, // 98: proto.PaymentService.AddPaymentPreProcessing:output_type -> proto.PrePaymentResponse
	48, // 99: proto.PaymentService.AddPaymentPostProcessing:output_type -> google.protobuf.Empty
	35, // 100: proto.BillingInstancesService.Read:output_type -> proto.BillingPaidInstanceResponse
	37, // 101: proto.BillingUsageService.Read:output_type -> proto.BillingUsageResponse
	48, // 102: proto.BillingOpsActionService.Create:output_type -> google.protobuf.Empty
	44, // 103: proto.BillingDeactivateInstancesService.GetDeactivateInstances:output_type -> proto.DeactivateInstancesResponse
	44, // 104: proto.BillingDeactivateInstancesService.GetDeactivateInstancesStream:output_type -> proto.DeactivateInstancesResponse
	43, // 105: proto.BillingDeactivateInstancesService.GetDeactivatedServiceAccounts:output_type -> proto.DeactivateAccounts
	48, // 106: proto.BillingDeactivateInstancesService.Ping:output_type -> google.protobuf.Empty
	79, // [79:107] is the sub-list for method output_type
	51, // [51:79] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_billing_proto_init() }
func file_billing_proto_init() {
	if File_billing_proto != nil {
		return
	}
	file_annotations_proto_init()
	file_productcatalog_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_billing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingAccountDowngrade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingOptionFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreditCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethodOther); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingRateFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingMigratedCredit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingUnappliedCredit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCredit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingUnappliedCreditBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCreditFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCreditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCouponFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCouponResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCouponRedeem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCouponDisable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCouponCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCoupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingCouponRedemption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingInvoiceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingPaidInstanceFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingPaidInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingUsageFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillingUsageMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulerAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceQuotas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateInstances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateAccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateInstancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeactivatedAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_billing_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_billing_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*BillingOption_CreditCard)(nil),
		(*BillingOption_Other)(nil),
	}
	file_billing_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_billing_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_billing_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_billing_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_billing_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_billing_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_billing_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_billing_proto_msgTypes[41].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_billing_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   12,
		},
		GoTypes:           file_billing_proto_goTypes,
		DependencyIndexes: file_billing_proto_depIdxs,
		EnumInfos:         file_billing_proto_enumTypes,
		MessageInfos:      file_billing_proto_msgTypes,
	}.Build()
	File_billing_proto = out.File
	file_billing_proto_rawDesc = nil
	file_billing_proto_goTypes = nil
	file_billing_proto_depIdxs = nil
}
