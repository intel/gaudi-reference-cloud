// After updating this file, run "make generate-go".
//
// See:
//  - https://developers.google.com/protocol-buffers/docs/proto3
//  - https://github.com/googleapis/googleapis/blob/master/google/api/http.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: network_vpc_private.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VPCCreatePrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *VPCMetadataCreatePrivate `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     *VPCSpecPrivate           `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *VPCCreatePrivateRequest) Reset() {
	*x = VPCCreatePrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCCreatePrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCCreatePrivateRequest) ProtoMessage() {}

func (x *VPCCreatePrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCCreatePrivateRequest.ProtoReflect.Descriptor instead.
func (*VPCCreatePrivateRequest) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{0}
}

func (x *VPCCreatePrivateRequest) GetMetadata() *VPCMetadataCreatePrivate {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VPCCreatePrivateRequest) GetSpec() *VPCSpecPrivate {
	if x != nil {
		return x.Spec
	}
	return nil
}

type VPCMetadataCreatePrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	// Name will be generated if empty.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Map of string keys and values that can be used to organize and categorize instances.
	// This is also used by TopologySpreadConstraints.
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Reserved. Added this field to overcome openAPi-same-struct issue.
	//
	// Deprecated: Do not use.
	Reserved1 string `protobuf:"bytes,4,opt,name=reserved1,proto3" json:"reserved1,omitempty"`
}

func (x *VPCMetadataCreatePrivate) Reset() {
	*x = VPCMetadataCreatePrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCMetadataCreatePrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCMetadataCreatePrivate) ProtoMessage() {}

func (x *VPCMetadataCreatePrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCMetadataCreatePrivate.ProtoReflect.Descriptor instead.
func (*VPCMetadataCreatePrivate) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{1}
}

func (x *VPCMetadataCreatePrivate) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *VPCMetadataCreatePrivate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VPCMetadataCreatePrivate) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Deprecated: Do not use.
func (x *VPCMetadataCreatePrivate) GetReserved1() string {
	if x != nil {
		return x.Reserved1
	}
	return ""
}

type VPCGetPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *VPCMetadataReference `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *VPCGetPrivateRequest) Reset() {
	*x = VPCGetPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCGetPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCGetPrivateRequest) ProtoMessage() {}

func (x *VPCGetPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCGetPrivateRequest.ProtoReflect.Descriptor instead.
func (*VPCGetPrivateRequest) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{2}
}

func (x *VPCGetPrivateRequest) GetMetadata() *VPCMetadataReference {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type VPCPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *VPCMetadataPrivate `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     *VPCSpecPrivate     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status   *VPCStatusPrivate   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *VPCPrivate) Reset() {
	*x = VPCPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCPrivate) ProtoMessage() {}

func (x *VPCPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCPrivate.ProtoReflect.Descriptor instead.
func (*VPCPrivate) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{3}
}

func (x *VPCPrivate) GetMetadata() *VPCMetadataPrivate {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VPCPrivate) GetSpec() *VPCSpecPrivate {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *VPCPrivate) GetStatus() *VPCStatusPrivate {
	if x != nil {
		return x.Status
	}
	return nil
}

type VPCPrivateWatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *VPCMetadataPrivate `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     string              `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status   string              `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *VPCPrivateWatchResponse) Reset() {
	*x = VPCPrivateWatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCPrivateWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCPrivateWatchResponse) ProtoMessage() {}

func (x *VPCPrivateWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCPrivateWatchResponse.ProtoReflect.Descriptor instead.
func (*VPCPrivateWatchResponse) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{4}
}

func (x *VPCPrivateWatchResponse) GetMetadata() *VPCMetadataPrivate {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VPCPrivateWatchResponse) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *VPCPrivateWatchResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VPCUpdateStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *VPCIdReference   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status   *VPCStatusPrivate `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *VPCUpdateStatusRequest) Reset() {
	*x = VPCUpdateStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCUpdateStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCUpdateStatusRequest) ProtoMessage() {}

func (x *VPCUpdateStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCUpdateStatusRequest.ProtoReflect.Descriptor instead.
func (*VPCUpdateStatusRequest) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{5}
}

func (x *VPCUpdateStatusRequest) GetMetadata() *VPCIdReference {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VPCUpdateStatusRequest) GetStatus() *VPCStatusPrivate {
	if x != nil {
		return x.Status
	}
	return nil
}

type VPCIdReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	ResourceId     string `protobuf:"bytes,2,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	// If provided, the existing record must have this resourceVersion for the request to succeed.
	ResourceVersion string `protobuf:"bytes,3,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
}

func (x *VPCIdReference) Reset() {
	*x = VPCIdReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCIdReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCIdReference) ProtoMessage() {}

func (x *VPCIdReference) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCIdReference.ProtoReflect.Descriptor instead.
func (*VPCIdReference) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{6}
}

func (x *VPCIdReference) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *VPCIdReference) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *VPCIdReference) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

type VPCMetadataPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ResourceId     string `protobuf:"bytes,3,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	// resourceVersion can be provided with Update and Delete for concurrency control.
	ResourceVersion string `protobuf:"bytes,4,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
	// Map of string keys and values that can be used to organize and categorize vpcs.
	// This can also be used by to evaluate placements for instances.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Not implemented.
	CreationTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	// Timestamp when resource was requested to be deleted.
	DeletionTimestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=deletionTimestamp,proto3" json:"deletionTimestamp,omitempty"`
	// Timestamp when resource was deleted.
	DeletedTimestamp *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=deletedTimestamp,proto3" json:"deletedTimestamp,omitempty"`
}

func (x *VPCMetadataPrivate) Reset() {
	*x = VPCMetadataPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCMetadataPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCMetadataPrivate) ProtoMessage() {}

func (x *VPCMetadataPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCMetadataPrivate.ProtoReflect.Descriptor instead.
func (*VPCMetadataPrivate) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{7}
}

func (x *VPCMetadataPrivate) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *VPCMetadataPrivate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VPCMetadataPrivate) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *VPCMetadataPrivate) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *VPCMetadataPrivate) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *VPCMetadataPrivate) GetCreationTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTimestamp
	}
	return nil
}

func (x *VPCMetadataPrivate) GetDeletionTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletionTimestamp
	}
	return nil
}

func (x *VPCMetadataPrivate) GetDeletedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedTimestamp
	}
	return nil
}

type VPCSpecPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CidrBlock string `protobuf:"bytes,1,opt,name=cidrBlock,proto3" json:"cidrBlock,omitempty"`
}

func (x *VPCSpecPrivate) Reset() {
	*x = VPCSpecPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCSpecPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCSpecPrivate) ProtoMessage() {}

func (x *VPCSpecPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCSpecPrivate.ProtoReflect.Descriptor instead.
func (*VPCSpecPrivate) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{8}
}

func (x *VPCSpecPrivate) GetCidrBlock() string {
	if x != nil {
		return x.CidrBlock
	}
	return ""
}

type VPCStatusPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// VPC phase.
	Phase VPCPhase `protobuf:"varint,1,opt,name=phase,proto3,enum=proto.VPCPhase" json:"phase,omitempty"`
	// Additional details about the state or any error conditions.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *VPCStatusPrivate) Reset() {
	*x = VPCStatusPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCStatusPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCStatusPrivate) ProtoMessage() {}

func (x *VPCStatusPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCStatusPrivate.ProtoReflect.Descriptor instead.
func (*VPCStatusPrivate) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{9}
}

func (x *VPCStatusPrivate) GetPhase() VPCPhase {
	if x != nil {
		return x.Phase
	}
	return VPCPhase_VPCPhase_Provisioning
}

func (x *VPCStatusPrivate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type VPCSearchStreamPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VPCSearchStreamPrivateRequest) Reset() {
	*x = VPCSearchStreamPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCSearchStreamPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCSearchStreamPrivateRequest) ProtoMessage() {}

func (x *VPCSearchStreamPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCSearchStreamPrivateRequest.ProtoReflect.Descriptor instead.
func (*VPCSearchStreamPrivateRequest) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{10}
}

// Private only.
type VPCWatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   WatchDeltaType           `protobuf:"varint,1,opt,name=type,proto3,enum=proto.WatchDeltaType" json:"type,omitempty"`
	Object *VPCPrivateWatchResponse `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *VPCWatchResponse) Reset() {
	*x = VPCWatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCWatchResponse) ProtoMessage() {}

func (x *VPCWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCWatchResponse.ProtoReflect.Descriptor instead.
func (*VPCWatchResponse) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{11}
}

func (x *VPCWatchResponse) GetType() WatchDeltaType {
	if x != nil {
		return x.Type
	}
	return WatchDeltaType_Updated
}

func (x *VPCWatchResponse) GetObject() *VPCPrivateWatchResponse {
	if x != nil {
		return x.Object
	}
	return nil
}

type VPCWatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceVersion string `protobuf:"bytes,1,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
}

func (x *VPCWatchRequest) Reset() {
	*x = VPCWatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_vpc_private_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCWatchRequest) ProtoMessage() {}

func (x *VPCWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_vpc_private_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCWatchRequest.ProtoReflect.Descriptor instead.
func (*VPCWatchRequest) Descriptor() ([]byte, []int) {
	return file_network_vpc_private_proto_rawDescGZIP(), []int{12}
}

func (x *VPCWatchRequest) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

var File_network_vpc_private_proto protoreflect.FileDescriptor

var file_network_vpc_private_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x70, 0x63, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01,
	0x0a, 0x17, 0x56, 0x50, 0x43, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43,
	0x53, 0x70, 0x65, 0x63, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x22, 0xf8, 0x01, 0x0a, 0x18, 0x56, 0x50, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x20, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x31, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x14,
	0x56, 0x50, 0x43, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x50, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f, 0x01,
	0x0a, 0x0a, 0x56, 0x50, 0x43, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x53, 0x70, 0x65,
	0x63, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x7c, 0x0a, 0x17, 0x56, 0x50, 0x43, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7c, 0x0a,
	0x16, 0x56, 0x50, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e,
	0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xf0, 0x03, 0x0a, 0x12, 0x56, 0x50, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x48, 0x0a, 0x11,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x46, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x0e, 0x56, 0x50, 0x43, 0x53, 0x70, 0x65, 0x63, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x69, 0x64, 0x72, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x69, 0x64, 0x72, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x53, 0x0a, 0x10, 0x56, 0x50, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x50, 0x43, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x56, 0x50, 0x43, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x10, 0x56, 0x50, 0x43,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x56, 0x50, 0x43, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x3b, 0x0a, 0x0f, 0x56, 0x50, 0x43, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xc1, 0x03,
	0x0a, 0x11, 0x56, 0x50, 0x43, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x50, 0x43, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x13, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x50, 0x43, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x50, 0x43,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0xaa,
	0xdd, 0x1b, 0x02, 0x10, 0x01, 0x30, 0x01, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x50, 0x43, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x42, 0x6d, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x69, 0x64, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x62, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x02, 0xaa, 0xdd, 0x1b, 0x14, 0x12, 0x12, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_network_vpc_private_proto_rawDescOnce sync.Once
	file_network_vpc_private_proto_rawDescData = file_network_vpc_private_proto_rawDesc
)

func file_network_vpc_private_proto_rawDescGZIP() []byte {
	file_network_vpc_private_proto_rawDescOnce.Do(func() {
		file_network_vpc_private_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_vpc_private_proto_rawDescData)
	})
	return file_network_vpc_private_proto_rawDescData
}

var file_network_vpc_private_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_network_vpc_private_proto_goTypes = []interface{}{
	(*VPCCreatePrivateRequest)(nil),       // 0: proto.VPCCreatePrivateRequest
	(*VPCMetadataCreatePrivate)(nil),      // 1: proto.VPCMetadataCreatePrivate
	(*VPCGetPrivateRequest)(nil),          // 2: proto.VPCGetPrivateRequest
	(*VPCPrivate)(nil),                    // 3: proto.VPCPrivate
	(*VPCPrivateWatchResponse)(nil),       // 4: proto.VPCPrivateWatchResponse
	(*VPCUpdateStatusRequest)(nil),        // 5: proto.VPCUpdateStatusRequest
	(*VPCIdReference)(nil),                // 6: proto.VPCIdReference
	(*VPCMetadataPrivate)(nil),            // 7: proto.VPCMetadataPrivate
	(*VPCSpecPrivate)(nil),                // 8: proto.VPCSpecPrivate
	(*VPCStatusPrivate)(nil),              // 9: proto.VPCStatusPrivate
	(*VPCSearchStreamPrivateRequest)(nil), // 10: proto.VPCSearchStreamPrivateRequest
	(*VPCWatchResponse)(nil),              // 11: proto.VPCWatchResponse
	(*VPCWatchRequest)(nil),               // 12: proto.VPCWatchRequest
	nil,                                   // 13: proto.VPCMetadataCreatePrivate.LabelsEntry
	nil,                                   // 14: proto.VPCMetadataPrivate.LabelsEntry
	(*VPCMetadataReference)(nil),          // 15: proto.VPCMetadataReference
	(*timestamppb.Timestamp)(nil),         // 16: google.protobuf.Timestamp
	(VPCPhase)(0),                         // 17: proto.VPCPhase
	(WatchDeltaType)(0),                   // 18: proto.WatchDeltaType
	(*emptypb.Empty)(nil),                 // 19: google.protobuf.Empty
}
var file_network_vpc_private_proto_depIdxs = []int32{
	1,  // 0: proto.VPCCreatePrivateRequest.metadata:type_name -> proto.VPCMetadataCreatePrivate
	8,  // 1: proto.VPCCreatePrivateRequest.spec:type_name -> proto.VPCSpecPrivate
	13, // 2: proto.VPCMetadataCreatePrivate.labels:type_name -> proto.VPCMetadataCreatePrivate.LabelsEntry
	15, // 3: proto.VPCGetPrivateRequest.metadata:type_name -> proto.VPCMetadataReference
	7,  // 4: proto.VPCPrivate.metadata:type_name -> proto.VPCMetadataPrivate
	8,  // 5: proto.VPCPrivate.spec:type_name -> proto.VPCSpecPrivate
	9,  // 6: proto.VPCPrivate.status:type_name -> proto.VPCStatusPrivate
	7,  // 7: proto.VPCPrivateWatchResponse.metadata:type_name -> proto.VPCMetadataPrivate
	6,  // 8: proto.VPCUpdateStatusRequest.metadata:type_name -> proto.VPCIdReference
	9,  // 9: proto.VPCUpdateStatusRequest.status:type_name -> proto.VPCStatusPrivate
	14, // 10: proto.VPCMetadataPrivate.labels:type_name -> proto.VPCMetadataPrivate.LabelsEntry
	16, // 11: proto.VPCMetadataPrivate.creationTimestamp:type_name -> google.protobuf.Timestamp
	16, // 12: proto.VPCMetadataPrivate.deletionTimestamp:type_name -> google.protobuf.Timestamp
	16, // 13: proto.VPCMetadataPrivate.deletedTimestamp:type_name -> google.protobuf.Timestamp
	17, // 14: proto.VPCStatusPrivate.phase:type_name -> proto.VPCPhase
	18, // 15: proto.VPCWatchResponse.type:type_name -> proto.WatchDeltaType
	4,  // 16: proto.VPCWatchResponse.object:type_name -> proto.VPCPrivateWatchResponse
	0,  // 17: proto.VPCPrivateService.CreatePrivate:input_type -> proto.VPCCreatePrivateRequest
	2,  // 18: proto.VPCPrivateService.GetPrivate:input_type -> proto.VPCGetPrivateRequest
	10, // 19: proto.VPCPrivateService.SearchStreamPrivate:input_type -> proto.VPCSearchStreamPrivateRequest
	12, // 20: proto.VPCPrivateService.Watch:input_type -> proto.VPCWatchRequest
	5,  // 21: proto.VPCPrivateService.UpdateStatus:input_type -> proto.VPCUpdateStatusRequest
	19, // 22: proto.VPCPrivateService.PingPrivate:input_type -> google.protobuf.Empty
	3,  // 23: proto.VPCPrivateService.CreatePrivate:output_type -> proto.VPCPrivate
	3,  // 24: proto.VPCPrivateService.GetPrivate:output_type -> proto.VPCPrivate
	11, // 25: proto.VPCPrivateService.SearchStreamPrivate:output_type -> proto.VPCWatchResponse
	11, // 26: proto.VPCPrivateService.Watch:output_type -> proto.VPCWatchResponse
	19, // 27: proto.VPCPrivateService.UpdateStatus:output_type -> google.protobuf.Empty
	19, // 28: proto.VPCPrivateService.PingPrivate:output_type -> google.protobuf.Empty
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_network_vpc_private_proto_init() }
func file_network_vpc_private_proto_init() {
	if File_network_vpc_private_proto != nil {
		return
	}
	file_annotations_proto_init()
	file_compute_private_proto_init()
	file_network_vpc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_network_vpc_private_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCCreatePrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCMetadataCreatePrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCGetPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCPrivateWatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCUpdateStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCIdReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCMetadataPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCSpecPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCStatusPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCSearchStreamPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCWatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_vpc_private_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCWatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_vpc_private_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_network_vpc_private_proto_goTypes,
		DependencyIndexes: file_network_vpc_private_proto_depIdxs,
		MessageInfos:      file_network_vpc_private_proto_msgTypes,
	}.Build()
	File_network_vpc_private_proto = out.File
	file_network_vpc_private_proto_rawDesc = nil
	file_network_vpc_private_proto_goTypes = nil
	file_network_vpc_private_proto_depIdxs = nil
}
