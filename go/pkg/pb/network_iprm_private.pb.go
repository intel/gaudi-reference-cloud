// After updating this file, run "make generate-go".
//
// See:
//  - https://developers.google.com/protocol-buffers/docs/proto3
//  - https://github.com/googleapis/googleapis/blob/master/google/api/http.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: network_iprm_private.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PortPhase int32

const (
	// The system is creating the Subnet.
	// Default.
	PortPhase_PortPhase_Provisioning PortPhase = 0
	// The port has been created in the IPU
	PortPhase_PortPhase_Ready PortPhase = 1
	// The port is in the process of release.
	PortPhase_PortPhase_Deleting PortPhase = 2
	// The port has been released.
	PortPhase_PortPhase_Deleted PortPhase = 3
)

// Enum value maps for PortPhase.
var (
	PortPhase_name = map[int32]string{
		0: "PortPhase_Provisioning",
		1: "PortPhase_Ready",
		2: "PortPhase_Deleting",
		3: "PortPhase_Deleted",
	}
	PortPhase_value = map[string]int32{
		"PortPhase_Provisioning": 0,
		"PortPhase_Ready":        1,
		"PortPhase_Deleting":     2,
		"PortPhase_Deleted":      3,
	}
)

func (x PortPhase) Enum() *PortPhase {
	p := new(PortPhase)
	*p = x
	return p
}

func (x PortPhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortPhase) Descriptor() protoreflect.EnumDescriptor {
	return file_network_iprm_private_proto_enumTypes[0].Descriptor()
}

func (PortPhase) Type() protoreflect.EnumType {
	return &file_network_iprm_private_proto_enumTypes[0]
}

func (x PortPhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortPhase.Descriptor instead.
func (PortPhase) EnumDescriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{0}
}

type PortSearchStreamPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PortSearchStreamPrivateRequest) Reset() {
	*x = PortSearchStreamPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortSearchStreamPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortSearchStreamPrivateRequest) ProtoMessage() {}

func (x *PortSearchStreamPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortSearchStreamPrivateRequest.ProtoReflect.Descriptor instead.
func (*PortSearchStreamPrivateRequest) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{0}
}

type PortWatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceVersion string `protobuf:"bytes,1,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
}

func (x *PortWatchRequest) Reset() {
	*x = PortWatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortWatchRequest) ProtoMessage() {}

func (x *PortWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortWatchRequest.ProtoReflect.Descriptor instead.
func (*PortWatchRequest) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{1}
}

func (x *PortWatchRequest) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

type PortWatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   WatchDeltaType            `protobuf:"varint,1,opt,name=type,proto3,enum=proto.WatchDeltaType" json:"type,omitempty"`
	Object *PortPrivateWatchResponse `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *PortWatchResponse) Reset() {
	*x = PortWatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortWatchResponse) ProtoMessage() {}

func (x *PortWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortWatchResponse.ProtoReflect.Descriptor instead.
func (*PortWatchResponse) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{2}
}

func (x *PortWatchResponse) GetType() WatchDeltaType {
	if x != nil {
		return x.Type
	}
	return WatchDeltaType_Updated
}

func (x *PortWatchResponse) GetObject() *PortPrivateWatchResponse {
	if x != nil {
		return x.Object
	}
	return nil
}

type PortPrivateWatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *PortMetadataPrivate `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     string               `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status   string               `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PortPrivateWatchResponse) Reset() {
	*x = PortPrivateWatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortPrivateWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortPrivateWatchResponse) ProtoMessage() {}

func (x *PortPrivateWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortPrivateWatchResponse.ProtoReflect.Descriptor instead.
func (*PortPrivateWatchResponse) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{3}
}

func (x *PortPrivateWatchResponse) GetMetadata() *PortMetadataPrivate {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PortPrivateWatchResponse) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *PortPrivateWatchResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ReservePortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *PortMetadataCreatePrivate `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     *PortSpecPrivate           `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *ReservePortRequest) Reset() {
	*x = ReservePortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservePortRequest) ProtoMessage() {}

func (x *ReservePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservePortRequest.ProtoReflect.Descriptor instead.
func (*ReservePortRequest) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{4}
}

func (x *ReservePortRequest) GetMetadata() *PortMetadataCreatePrivate {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ReservePortRequest) GetSpec() *PortSpecPrivate {
	if x != nil {
		return x.Spec
	}
	return nil
}

type PortMetadataCreatePrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	// Name will be generated if empty.
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ResourceId string `protobuf:"bytes,3,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
}

func (x *PortMetadataCreatePrivate) Reset() {
	*x = PortMetadataCreatePrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortMetadataCreatePrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMetadataCreatePrivate) ProtoMessage() {}

func (x *PortMetadataCreatePrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMetadataCreatePrivate.ProtoReflect.Descriptor instead.
func (*PortMetadataCreatePrivate) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{5}
}

func (x *PortMetadataCreatePrivate) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *PortMetadataCreatePrivate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortMetadataCreatePrivate) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type PortSpecPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId        string `protobuf:"bytes,1,opt,name=subnetId,proto3" json:"subnetId,omitempty"`
	IpuSerialNumber string `protobuf:"bytes,2,opt,name=ipuSerialNumber,proto3" json:"ipuSerialNumber,omitempty"`
	ChassisId       string `protobuf:"bytes,3,opt,name=chassisId,proto3" json:"chassisId,omitempty"`
	IpAddress       string `protobuf:"bytes,4,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	MacAddress      string `protobuf:"bytes,5,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	SshEnabled      bool   `protobuf:"varint,6,opt,name=ssh_enabled,json=sshEnabled,proto3" json:"ssh_enabled,omitempty"`
	InternetAccess  bool   `protobuf:"varint,7,opt,name=internet_access,json=internetAccess,proto3" json:"internet_access,omitempty"`
}

func (x *PortSpecPrivate) Reset() {
	*x = PortSpecPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortSpecPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortSpecPrivate) ProtoMessage() {}

func (x *PortSpecPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortSpecPrivate.ProtoReflect.Descriptor instead.
func (*PortSpecPrivate) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{6}
}

func (x *PortSpecPrivate) GetSubnetId() string {
	if x != nil {
		return x.SubnetId
	}
	return ""
}

func (x *PortSpecPrivate) GetIpuSerialNumber() string {
	if x != nil {
		return x.IpuSerialNumber
	}
	return ""
}

func (x *PortSpecPrivate) GetChassisId() string {
	if x != nil {
		return x.ChassisId
	}
	return ""
}

func (x *PortSpecPrivate) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *PortSpecPrivate) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *PortSpecPrivate) GetSshEnabled() bool {
	if x != nil {
		return x.SshEnabled
	}
	return false
}

func (x *PortSpecPrivate) GetInternetAccess() bool {
	if x != nil {
		return x.InternetAccess
	}
	return false
}

type PortMetadataReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	ResourceId     string `protobuf:"bytes,2,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	// If provided, the existing record must have this resourceVersion for the request to succeed.
	ResourceVersion string `protobuf:"bytes,4,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
}

func (x *PortMetadataReference) Reset() {
	*x = PortMetadataReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortMetadataReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMetadataReference) ProtoMessage() {}

func (x *PortMetadataReference) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMetadataReference.ProtoReflect.Descriptor instead.
func (*PortMetadataReference) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{7}
}

func (x *PortMetadataReference) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *PortMetadataReference) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *PortMetadataReference) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

type PortMetadataPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudAccountId string `protobuf:"bytes,1,opt,name=cloudAccountId,proto3" json:"cloudAccountId,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ResourceId     string `protobuf:"bytes,3,opt,name=resourceId,proto3" json:"resourceId,omitempty"`
	// resourceVersion can be provided with Update and Delete for concurrency control.
	ResourceVersion string `protobuf:"bytes,4,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
	// Not implemented.
	CreationTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	// Timestamp when resource was requested to be deleted.
	DeletionTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=deletionTimestamp,proto3" json:"deletionTimestamp,omitempty"`
	// Timestamp when resource was deleted.
	DeletedTimestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=deletedTimestamp,proto3" json:"deletedTimestamp,omitempty"`
}

func (x *PortMetadataPrivate) Reset() {
	*x = PortMetadataPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortMetadataPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMetadataPrivate) ProtoMessage() {}

func (x *PortMetadataPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMetadataPrivate.ProtoReflect.Descriptor instead.
func (*PortMetadataPrivate) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{8}
}

func (x *PortMetadataPrivate) GetCloudAccountId() string {
	if x != nil {
		return x.CloudAccountId
	}
	return ""
}

func (x *PortMetadataPrivate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PortMetadataPrivate) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *PortMetadataPrivate) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *PortMetadataPrivate) GetCreationTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTimestamp
	}
	return nil
}

func (x *PortMetadataPrivate) GetDeletionTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletionTimestamp
	}
	return nil
}

func (x *PortMetadataPrivate) GetDeletedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedTimestamp
	}
	return nil
}

type ReleasePortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *PortMetadataReference `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ReleasePortRequest) Reset() {
	*x = ReleasePortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleasePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleasePortRequest) ProtoMessage() {}

func (x *ReleasePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleasePortRequest.ProtoReflect.Descriptor instead.
func (*ReleasePortRequest) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{9}
}

func (x *ReleasePortRequest) GetMetadata() *PortMetadataReference {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PortStatusPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subnet phase.
	Phase PortPhase `protobuf:"varint,1,opt,name=phase,proto3,enum=proto.PortPhase" json:"phase,omitempty"`
	// Additional details about the state or any error conditions.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PortStatusPrivate) Reset() {
	*x = PortStatusPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortStatusPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortStatusPrivate) ProtoMessage() {}

func (x *PortStatusPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortStatusPrivate.ProtoReflect.Descriptor instead.
func (*PortStatusPrivate) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{10}
}

func (x *PortStatusPrivate) GetPhase() PortPhase {
	if x != nil {
		return x.Phase
	}
	return PortPhase_PortPhase_Provisioning
}

func (x *PortStatusPrivate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PortPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *PortMetadataPrivate `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     *PortSpecPrivate     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status   *PortStatusPrivate   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PortPrivate) Reset() {
	*x = PortPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortPrivate) ProtoMessage() {}

func (x *PortPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortPrivate.ProtoReflect.Descriptor instead.
func (*PortPrivate) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{11}
}

func (x *PortPrivate) GetMetadata() *PortMetadataPrivate {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PortPrivate) GetSpec() *PortSpecPrivate {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *PortPrivate) GetStatus() *PortStatusPrivate {
	if x != nil {
		return x.Status
	}
	return nil
}

type PortUpdateStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *PortMetadataReference `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status   *PortStatusPrivate     `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PortUpdateStatusRequest) Reset() {
	*x = PortUpdateStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortUpdateStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortUpdateStatusRequest) ProtoMessage() {}

func (x *PortUpdateStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortUpdateStatusRequest.ProtoReflect.Descriptor instead.
func (*PortUpdateStatusRequest) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{12}
}

func (x *PortUpdateStatusRequest) GetMetadata() *PortMetadataReference {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PortUpdateStatusRequest) GetStatus() *PortStatusPrivate {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetPortPrivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *PortMetadataReference `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GetPortPrivateRequest) Reset() {
	*x = GetPortPrivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_iprm_private_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortPrivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortPrivateRequest) ProtoMessage() {}

func (x *GetPortPrivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_iprm_private_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortPrivateRequest.ProtoReflect.Descriptor instead.
func (*GetPortPrivateRequest) Descriptor() ([]byte, []int) {
	return file_network_iprm_private_proto_rawDescGZIP(), []int{13}
}

func (x *GetPortPrivateRequest) GetMetadata() *PortMetadataReference {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_network_iprm_private_proto protoreflect.FileDescriptor

var file_network_iprm_private_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x70, 0x72, 0x6d, 0x5f, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x1e, 0x50, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x10, 0x50,
	0x6f, 0x72, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x11, 0x50, 0x6f, 0x72,
	0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x7e, 0x0a, 0x18, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x7e, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x22, 0x7f, 0x0a, 0x19, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x70, 0x75, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x70,
	0x75, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x73, 0x68,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x73, 0x73, 0x68, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a,
	0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x01, 0x52, 0x0e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xf7, 0x02, 0x0a, 0x13, 0x50, 0x6f, 0x72, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x48, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x46, 0x0a, 0x10, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x4e, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x55, 0x0a, 0x11, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x72,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x2a, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x70, 0x65, 0x63, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x30, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x85,
	0x01, 0x0a, 0x17, 0x50, 0x6f, 0x72, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x51, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x6b, 0x0a, 0x09, 0x50, 0x6f, 0x72,
	0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x5f,
	0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x6f, 0x72, 0x74, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x10, 0x03, 0x32, 0x8b, 0x04, 0x0a, 0x12, 0x49, 0x50, 0x52, 0x4d, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a,
	0x0b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x0b, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x5a, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x44, 0x0a,
	0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0xaa, 0xdd, 0x1b, 0x02, 0x10,
	0x01, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x6d, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x69, 0x64, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x62, 0xaa, 0xdd, 0x1b, 0x02, 0x08, 0x02, 0xaa, 0xdd, 0x1b, 0x14, 0x12,
	0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_network_iprm_private_proto_rawDescOnce sync.Once
	file_network_iprm_private_proto_rawDescData = file_network_iprm_private_proto_rawDesc
)

func file_network_iprm_private_proto_rawDescGZIP() []byte {
	file_network_iprm_private_proto_rawDescOnce.Do(func() {
		file_network_iprm_private_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_iprm_private_proto_rawDescData)
	})
	return file_network_iprm_private_proto_rawDescData
}

var file_network_iprm_private_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_network_iprm_private_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_network_iprm_private_proto_goTypes = []interface{}{
	(PortPhase)(0),                         // 0: proto.PortPhase
	(*PortSearchStreamPrivateRequest)(nil), // 1: proto.PortSearchStreamPrivateRequest
	(*PortWatchRequest)(nil),               // 2: proto.PortWatchRequest
	(*PortWatchResponse)(nil),              // 3: proto.PortWatchResponse
	(*PortPrivateWatchResponse)(nil),       // 4: proto.PortPrivateWatchResponse
	(*ReservePortRequest)(nil),             // 5: proto.ReservePortRequest
	(*PortMetadataCreatePrivate)(nil),      // 6: proto.PortMetadataCreatePrivate
	(*PortSpecPrivate)(nil),                // 7: proto.PortSpecPrivate
	(*PortMetadataReference)(nil),          // 8: proto.PortMetadataReference
	(*PortMetadataPrivate)(nil),            // 9: proto.PortMetadataPrivate
	(*ReleasePortRequest)(nil),             // 10: proto.ReleasePortRequest
	(*PortStatusPrivate)(nil),              // 11: proto.PortStatusPrivate
	(*PortPrivate)(nil),                    // 12: proto.PortPrivate
	(*PortUpdateStatusRequest)(nil),        // 13: proto.PortUpdateStatusRequest
	(*GetPortPrivateRequest)(nil),          // 14: proto.GetPortPrivateRequest
	(WatchDeltaType)(0),                    // 15: proto.WatchDeltaType
	(*timestamppb.Timestamp)(nil),          // 16: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                  // 17: google.protobuf.Empty
}
var file_network_iprm_private_proto_depIdxs = []int32{
	15, // 0: proto.PortWatchResponse.type:type_name -> proto.WatchDeltaType
	4,  // 1: proto.PortWatchResponse.object:type_name -> proto.PortPrivateWatchResponse
	9,  // 2: proto.PortPrivateWatchResponse.metadata:type_name -> proto.PortMetadataPrivate
	6,  // 3: proto.ReservePortRequest.metadata:type_name -> proto.PortMetadataCreatePrivate
	7,  // 4: proto.ReservePortRequest.spec:type_name -> proto.PortSpecPrivate
	16, // 5: proto.PortMetadataPrivate.creationTimestamp:type_name -> google.protobuf.Timestamp
	16, // 6: proto.PortMetadataPrivate.deletionTimestamp:type_name -> google.protobuf.Timestamp
	16, // 7: proto.PortMetadataPrivate.deletedTimestamp:type_name -> google.protobuf.Timestamp
	8,  // 8: proto.ReleasePortRequest.metadata:type_name -> proto.PortMetadataReference
	0,  // 9: proto.PortStatusPrivate.phase:type_name -> proto.PortPhase
	9,  // 10: proto.PortPrivate.metadata:type_name -> proto.PortMetadataPrivate
	7,  // 11: proto.PortPrivate.spec:type_name -> proto.PortSpecPrivate
	11, // 12: proto.PortPrivate.status:type_name -> proto.PortStatusPrivate
	8,  // 13: proto.PortUpdateStatusRequest.metadata:type_name -> proto.PortMetadataReference
	11, // 14: proto.PortUpdateStatusRequest.status:type_name -> proto.PortStatusPrivate
	8,  // 15: proto.GetPortPrivateRequest.metadata:type_name -> proto.PortMetadataReference
	5,  // 16: proto.IPRMPrivateService.ReservePort:input_type -> proto.ReservePortRequest
	10, // 17: proto.IPRMPrivateService.ReleasePort:input_type -> proto.ReleasePortRequest
	1,  // 18: proto.IPRMPrivateService.SearchStreamPrivate:input_type -> proto.PortSearchStreamPrivateRequest
	2,  // 19: proto.IPRMPrivateService.Watch:input_type -> proto.PortWatchRequest
	13, // 20: proto.IPRMPrivateService.UpdateStatus:input_type -> proto.PortUpdateStatusRequest
	14, // 21: proto.IPRMPrivateService.GetPortPrivate:input_type -> proto.GetPortPrivateRequest
	17, // 22: proto.IPRMPrivateService.PingPrivate:input_type -> google.protobuf.Empty
	12, // 23: proto.IPRMPrivateService.ReservePort:output_type -> proto.PortPrivate
	17, // 24: proto.IPRMPrivateService.ReleasePort:output_type -> google.protobuf.Empty
	3,  // 25: proto.IPRMPrivateService.SearchStreamPrivate:output_type -> proto.PortWatchResponse
	3,  // 26: proto.IPRMPrivateService.Watch:output_type -> proto.PortWatchResponse
	17, // 27: proto.IPRMPrivateService.UpdateStatus:output_type -> google.protobuf.Empty
	12, // 28: proto.IPRMPrivateService.GetPortPrivate:output_type -> proto.PortPrivate
	17, // 29: proto.IPRMPrivateService.PingPrivate:output_type -> google.protobuf.Empty
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_network_iprm_private_proto_init() }
func file_network_iprm_private_proto_init() {
	if File_network_iprm_private_proto != nil {
		return
	}
	file_annotations_proto_init()
	file_compute_private_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_network_iprm_private_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortSearchStreamPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortWatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortWatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortPrivateWatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservePortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortMetadataCreatePrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortSpecPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortMetadataReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortMetadataPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleasePortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortStatusPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortUpdateStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_iprm_private_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortPrivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_iprm_private_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_network_iprm_private_proto_goTypes,
		DependencyIndexes: file_network_iprm_private_proto_depIdxs,
		EnumInfos:         file_network_iprm_private_proto_enumTypes,
		MessageInfos:      file_network_iprm_private_proto_msgTypes,
	}.Build()
	File_network_iprm_private_proto = out.File
	file_network_iprm_private_proto_rawDesc = nil
	file_network_iprm_private_proto_goTypes = nil
	file_network_iprm_private_proto_depIdxs = nil
}
