# INTEL CONFIDENTIAL
# Copyright (C) 2023 Intel Corporation
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "server",
    srcs = [
        "grpc_server.go",
        "scheduling_server.go",
        "scheduling_service.go",
    ],
    importpath = "github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/instance_scheduler/vm/server",
    visibility = ["//visibility:public"],
    deps = [
        "//go/pkg/grpcutil",
        "//go/pkg/instance_scheduler/vm/apis/config",
        "//go/pkg/instance_scheduler/vm/framework",
        "//go/pkg/instance_scheduler/vm/framework/plugins/names",
        "//go/pkg/instance_scheduler/vm/scheduler",
        "//go/pkg/instance_scheduler/vm/util",
        "//go/pkg/k8s/apis/private.cloud/v1alpha1",
        "//go/pkg/k8s/generated/metal3client/clientset/versioned",
        "//go/pkg/log",
        "//go/pkg/log/logkeys",
        "//go/pkg/observability",
        "//go/pkg/pb",
        "//go/pkg/tools/k8s",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_apimachinery//pkg/util/runtime",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//rest",
        "@io_k8s_sigs_controller_runtime//:controller-runtime",
        "@io_k8s_sigs_controller_runtime//pkg/manager",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//keepalive",
        "@org_golang_google_grpc//reflection",
        "@org_golang_google_protobuf//types/known/emptypb",
    ],
)
