// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: api/sdn/v1/ovnnet.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol int32

const (
	Protocol_TCP  Protocol = 0
	Protocol_UDP  Protocol = 1
	Protocol_ICMP Protocol = 2
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "TCP",
		1: "UDP",
		2: "ICMP",
	}
	Protocol_value = map[string]int32{
		"TCP":  0,
		"UDP":  1,
		"ICMP": 2,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sdn_v1_ovnnet_proto_enumTypes[0].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_api_sdn_v1_ovnnet_proto_enumTypes[0]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{0}
}

type Direction int32

const (
	Direction_DIR_UNSPECIFIED Direction = 0
	Direction_INGRESS         Direction = 1
	Direction_EGRESS          Direction = 2
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "DIR_UNSPECIFIED",
		1: "INGRESS",
		2: "EGRESS",
	}
	Direction_value = map[string]int32{
		"DIR_UNSPECIFIED": 0,
		"INGRESS":         1,
		"EGRESS":          2,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sdn_v1_ovnnet_proto_enumTypes[1].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_api_sdn_v1_ovnnet_proto_enumTypes[1]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{1}
}

type SecurityAction int32

const (
	SecurityAction_ACTION_UNSPECIFIED SecurityAction = 0
	SecurityAction_ALLOW              SecurityAction = 1
	SecurityAction_DENY               SecurityAction = 2
)

// Enum value maps for SecurityAction.
var (
	SecurityAction_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ALLOW",
		2: "DENY",
	}
	SecurityAction_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"ALLOW":              1,
		"DENY":               2,
	}
)

func (x SecurityAction) Enum() *SecurityAction {
	p := new(SecurityAction)
	*p = x
	return p
}

func (x SecurityAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecurityAction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sdn_v1_ovnnet_proto_enumTypes[2].Descriptor()
}

func (SecurityAction) Type() protoreflect.EnumType {
	return &file_api_sdn_v1_ovnnet_proto_enumTypes[2]
}

func (x SecurityAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecurityAction.Descriptor instead.
func (SecurityAction) EnumDescriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{2}
}

type ListVPCsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVPCsRequest) Reset() {
	*x = ListVPCsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVPCsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVPCsRequest) ProtoMessage() {}

func (x *ListVPCsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVPCsRequest.ProtoReflect.Descriptor instead.
func (*ListVPCsRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{0}
}

type ListVPCsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcIds []*VPCId `protobuf:"bytes,1,rep,name=vpc_ids,json=vpcIds,proto3" json:"vpc_ids,omitempty"`
}

func (x *ListVPCsResponse) Reset() {
	*x = ListVPCsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVPCsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVPCsResponse) ProtoMessage() {}

func (x *ListVPCsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVPCsResponse.ProtoReflect.Descriptor instead.
func (*ListVPCsResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{1}
}

func (x *ListVPCsResponse) GetVpcIds() []*VPCId {
	if x != nil {
		return x.VpcIds
	}
	return nil
}

type CreateVPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcId    *VPCId `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TenantId string `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // Uniquely identifes a consumer of VPC
	RegionId string `protobuf:"bytes,4,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"` // Identifies the region. Must be same as the region of controller instance.
}

func (x *CreateVPCRequest) Reset() {
	*x = CreateVPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVPCRequest) ProtoMessage() {}

func (x *CreateVPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVPCRequest.ProtoReflect.Descriptor instead.
func (*CreateVPCRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{2}
}

func (x *CreateVPCRequest) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

func (x *CreateVPCRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVPCRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CreateVPCRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type CreateVPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcId *VPCId `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *CreateVPCResponse) Reset() {
	*x = CreateVPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVPCResponse) ProtoMessage() {}

func (x *CreateVPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVPCResponse.ProtoReflect.Descriptor instead.
func (*CreateVPCResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{3}
}

func (x *CreateVPCResponse) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

type GetVPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcId *VPCId `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *GetVPCRequest) Reset() {
	*x = GetVPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVPCRequest) ProtoMessage() {}

func (x *GetVPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVPCRequest.ProtoReflect.Descriptor instead.
func (*GetVPCRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{4}
}

func (x *GetVPCRequest) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

type GetVPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vpc *VPC `protobuf:"bytes,1,opt,name=vpc,proto3" json:"vpc,omitempty"`
}

func (x *GetVPCResponse) Reset() {
	*x = GetVPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVPCResponse) ProtoMessage() {}

func (x *GetVPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVPCResponse.ProtoReflect.Descriptor instead.
func (*GetVPCResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{5}
}

func (x *GetVPCResponse) GetVpc() *VPC {
	if x != nil {
		return x.Vpc
	}
	return nil
}

type DeleteVPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcId *VPCId `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *DeleteVPCRequest) Reset() {
	*x = DeleteVPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVPCRequest) ProtoMessage() {}

func (x *DeleteVPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVPCRequest.ProtoReflect.Descriptor instead.
func (*DeleteVPCRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteVPCRequest) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

type DeleteVPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VpcId *VPCId `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *DeleteVPCResponse) Reset() {
	*x = DeleteVPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVPCResponse) ProtoMessage() {}

func (x *DeleteVPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVPCResponse.ProtoReflect.Descriptor instead.
func (*DeleteVPCResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteVPCResponse) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

type ListSubnetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSubnetsRequest) Reset() {
	*x = ListSubnetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubnetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubnetsRequest) ProtoMessage() {}

func (x *ListSubnetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubnetsRequest.ProtoReflect.Descriptor instead.
func (*ListSubnetsRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{8}
}

type ListSubnetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetIds []*SubnetId `protobuf:"bytes,1,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
}

func (x *ListSubnetsResponse) Reset() {
	*x = ListSubnetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubnetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubnetsResponse) ProtoMessage() {}

func (x *ListSubnetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubnetsResponse.ProtoReflect.Descriptor instead.
func (*ListSubnetsResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{9}
}

func (x *ListSubnetsResponse) GetSubnetIds() []*SubnetId {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

type CreateSubnetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId         *SubnetId `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	Name             string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // TODO [(buf.validate.field).string.min_len = 1];
	Cidr             string    `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"`
	AvailabilityZone string    `protobuf:"bytes,4,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
	VpcId            *VPCId    `protobuf:"bytes,5,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *CreateSubnetRequest) Reset() {
	*x = CreateSubnetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubnetRequest) ProtoMessage() {}

func (x *CreateSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubnetRequest.ProtoReflect.Descriptor instead.
func (*CreateSubnetRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSubnetRequest) GetSubnetId() *SubnetId {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

func (x *CreateSubnetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSubnetRequest) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *CreateSubnetRequest) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

func (x *CreateSubnetRequest) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

type CreateSubnetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId *SubnetId `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
}

func (x *CreateSubnetResponse) Reset() {
	*x = CreateSubnetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubnetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubnetResponse) ProtoMessage() {}

func (x *CreateSubnetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubnetResponse.ProtoReflect.Descriptor instead.
func (*CreateSubnetResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSubnetResponse) GetSubnetId() *SubnetId {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

type GetSubnetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId *SubnetId `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
}

func (x *GetSubnetRequest) Reset() {
	*x = GetSubnetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubnetRequest) ProtoMessage() {}

func (x *GetSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubnetRequest.ProtoReflect.Descriptor instead.
func (*GetSubnetRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{12}
}

func (x *GetSubnetRequest) GetSubnetId() *SubnetId {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

type GetSubnetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subnet *Subnet `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
}

func (x *GetSubnetResponse) Reset() {
	*x = GetSubnetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubnetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubnetResponse) ProtoMessage() {}

func (x *GetSubnetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubnetResponse.ProtoReflect.Descriptor instead.
func (*GetSubnetResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{13}
}

func (x *GetSubnetResponse) GetSubnet() *Subnet {
	if x != nil {
		return x.Subnet
	}
	return nil
}

type DeleteSubnetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId *SubnetId `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
}

func (x *DeleteSubnetRequest) Reset() {
	*x = DeleteSubnetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubnetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubnetRequest) ProtoMessage() {}

func (x *DeleteSubnetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubnetRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubnetRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteSubnetRequest) GetSubnetId() *SubnetId {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

type DeleteSubnetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubnetId *SubnetId `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
}

func (x *DeleteSubnetResponse) Reset() {
	*x = DeleteSubnetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubnetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubnetResponse) ProtoMessage() {}

func (x *DeleteSubnetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubnetResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubnetResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteSubnetResponse) GetSubnetId() *SubnetId {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

type ListRoutersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRoutersRequest) Reset() {
	*x = ListRoutersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutersRequest) ProtoMessage() {}

func (x *ListRoutersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutersRequest.ProtoReflect.Descriptor instead.
func (*ListRoutersRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{16}
}

type ListRoutersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterIds []*RouterId `protobuf:"bytes,1,rep,name=router_ids,json=routerIds,proto3" json:"router_ids,omitempty"`
}

func (x *ListRoutersResponse) Reset() {
	*x = ListRoutersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoutersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoutersResponse) ProtoMessage() {}

func (x *ListRoutersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoutersResponse.ProtoReflect.Descriptor instead.
func (*ListRoutersResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{17}
}

func (x *ListRoutersResponse) GetRouterIds() []*RouterId {
	if x != nil {
		return x.RouterIds
	}
	return nil
}

type CreateRouterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterId         *RouterId `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	Name             string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // TODO [(buf.validate.field).string.min_len = 1];
	VpcId            *VPCId    `protobuf:"bytes,3,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	AvailabilityZone string    `protobuf:"bytes,4,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
}

func (x *CreateRouterRequest) Reset() {
	*x = CreateRouterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouterRequest) ProtoMessage() {}

func (x *CreateRouterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouterRequest.ProtoReflect.Descriptor instead.
func (*CreateRouterRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{18}
}

func (x *CreateRouterRequest) GetRouterId() *RouterId {
	if x != nil {
		return x.RouterId
	}
	return nil
}

func (x *CreateRouterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRouterRequest) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

func (x *CreateRouterRequest) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

type CreateRouterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterId *RouterId `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
}

func (x *CreateRouterResponse) Reset() {
	*x = CreateRouterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouterResponse) ProtoMessage() {}

func (x *CreateRouterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouterResponse.ProtoReflect.Descriptor instead.
func (*CreateRouterResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{19}
}

func (x *CreateRouterResponse) GetRouterId() *RouterId {
	if x != nil {
		return x.RouterId
	}
	return nil
}

type GetRouterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterId *RouterId `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
}

func (x *GetRouterRequest) Reset() {
	*x = GetRouterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouterRequest) ProtoMessage() {}

func (x *GetRouterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouterRequest.ProtoReflect.Descriptor instead.
func (*GetRouterRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{20}
}

func (x *GetRouterRequest) GetRouterId() *RouterId {
	if x != nil {
		return x.RouterId
	}
	return nil
}

type GetRouterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router *Router `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
}

func (x *GetRouterResponse) Reset() {
	*x = GetRouterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouterResponse) ProtoMessage() {}

func (x *GetRouterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouterResponse.ProtoReflect.Descriptor instead.
func (*GetRouterResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{21}
}

func (x *GetRouterResponse) GetRouter() *Router {
	if x != nil {
		return x.Router
	}
	return nil
}

type DeleteRouterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterId *RouterId `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
}

func (x *DeleteRouterRequest) Reset() {
	*x = DeleteRouterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRouterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouterRequest) ProtoMessage() {}

func (x *DeleteRouterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouterRequest.ProtoReflect.Descriptor instead.
func (*DeleteRouterRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteRouterRequest) GetRouterId() *RouterId {
	if x != nil {
		return x.RouterId
	}
	return nil
}

type DeleteRouterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterId *RouterId `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
}

func (x *DeleteRouterResponse) Reset() {
	*x = DeleteRouterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRouterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouterResponse) ProtoMessage() {}

func (x *DeleteRouterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouterResponse.ProtoReflect.Descriptor instead.
func (*DeleteRouterResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteRouterResponse) GetRouterId() *RouterId {
	if x != nil {
		return x.RouterId
	}
	return nil
}

type ListRouterInterfacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRouterInterfacesRequest) Reset() {
	*x = ListRouterInterfacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRouterInterfacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRouterInterfacesRequest) ProtoMessage() {}

func (x *ListRouterInterfacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRouterInterfacesRequest.ProtoReflect.Descriptor instead.
func (*ListRouterInterfacesRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{24}
}

type ListRouterInterfacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterInterfaceIds []*RouterInterfaceId `protobuf:"bytes,1,rep,name=router_interface_ids,json=routerInterfaceIds,proto3" json:"router_interface_ids,omitempty"`
}

func (x *ListRouterInterfacesResponse) Reset() {
	*x = ListRouterInterfacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRouterInterfacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRouterInterfacesResponse) ProtoMessage() {}

func (x *ListRouterInterfacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRouterInterfacesResponse.ProtoReflect.Descriptor instead.
func (*ListRouterInterfacesResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{25}
}

func (x *ListRouterInterfacesResponse) GetRouterInterfaceIds() []*RouterInterfaceId {
	if x != nil {
		return x.RouterInterfaceIds
	}
	return nil
}

type CreateRouterInterfaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterInterfaceId *RouterInterfaceId `protobuf:"bytes,1,opt,name=router_interface_id,json=routerInterfaceId,proto3" json:"router_interface_id,omitempty"`
	RouterId          *RouterId          `protobuf:"bytes,2,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	SubnetId          *SubnetId          `protobuf:"bytes,3,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	Interface_IP      string             `protobuf:"bytes,4,opt,name=interface_IP,json=interfaceIP,proto3" json:"interface_IP,omitempty"`
	Interface_MAC     string             `protobuf:"bytes,5,opt,name=interface_MAC,json=interfaceMAC,proto3" json:"interface_MAC,omitempty"`
}

func (x *CreateRouterInterfaceRequest) Reset() {
	*x = CreateRouterInterfaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouterInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouterInterfaceRequest) ProtoMessage() {}

func (x *CreateRouterInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouterInterfaceRequest.ProtoReflect.Descriptor instead.
func (*CreateRouterInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{26}
}

func (x *CreateRouterInterfaceRequest) GetRouterInterfaceId() *RouterInterfaceId {
	if x != nil {
		return x.RouterInterfaceId
	}
	return nil
}

func (x *CreateRouterInterfaceRequest) GetRouterId() *RouterId {
	if x != nil {
		return x.RouterId
	}
	return nil
}

func (x *CreateRouterInterfaceRequest) GetSubnetId() *SubnetId {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

func (x *CreateRouterInterfaceRequest) GetInterface_IP() string {
	if x != nil {
		return x.Interface_IP
	}
	return ""
}

func (x *CreateRouterInterfaceRequest) GetInterface_MAC() string {
	if x != nil {
		return x.Interface_MAC
	}
	return ""
}

type GetRouterInterfaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterInterfaceId *RouterInterfaceId `protobuf:"bytes,1,opt,name=router_interface_id,json=routerInterfaceId,proto3" json:"router_interface_id,omitempty"`
}

func (x *GetRouterInterfaceRequest) Reset() {
	*x = GetRouterInterfaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouterInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouterInterfaceRequest) ProtoMessage() {}

func (x *GetRouterInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouterInterfaceRequest.ProtoReflect.Descriptor instead.
func (*GetRouterInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{27}
}

func (x *GetRouterInterfaceRequest) GetRouterInterfaceId() *RouterInterfaceId {
	if x != nil {
		return x.RouterInterfaceId
	}
	return nil
}

type GetRouterInterfaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterInterface *RouterInterface `protobuf:"bytes,1,opt,name=router_interface,json=routerInterface,proto3" json:"router_interface,omitempty"`
}

func (x *GetRouterInterfaceResponse) Reset() {
	*x = GetRouterInterfaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRouterInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRouterInterfaceResponse) ProtoMessage() {}

func (x *GetRouterInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRouterInterfaceResponse.ProtoReflect.Descriptor instead.
func (*GetRouterInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{28}
}

func (x *GetRouterInterfaceResponse) GetRouterInterface() *RouterInterface {
	if x != nil {
		return x.RouterInterface
	}
	return nil
}

type CreateRouterInterfaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterInterfaceId *RouterInterfaceId `protobuf:"bytes,1,opt,name=router_interface_id,json=routerInterfaceId,proto3" json:"router_interface_id,omitempty"`
}

func (x *CreateRouterInterfaceResponse) Reset() {
	*x = CreateRouterInterfaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRouterInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouterInterfaceResponse) ProtoMessage() {}

func (x *CreateRouterInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouterInterfaceResponse.ProtoReflect.Descriptor instead.
func (*CreateRouterInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{29}
}

func (x *CreateRouterInterfaceResponse) GetRouterInterfaceId() *RouterInterfaceId {
	if x != nil {
		return x.RouterInterfaceId
	}
	return nil
}

type DeleteRouterInterfaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterInterfaceId *RouterInterfaceId `protobuf:"bytes,1,opt,name=router_interface_id,json=routerInterfaceId,proto3" json:"router_interface_id,omitempty"`
}

func (x *DeleteRouterInterfaceRequest) Reset() {
	*x = DeleteRouterInterfaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRouterInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouterInterfaceRequest) ProtoMessage() {}

func (x *DeleteRouterInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouterInterfaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteRouterInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteRouterInterfaceRequest) GetRouterInterfaceId() *RouterInterfaceId {
	if x != nil {
		return x.RouterInterfaceId
	}
	return nil
}

type DeleteRouterInterfaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouterInterfaceId *RouterInterfaceId `protobuf:"bytes,1,opt,name=router_interface_id,json=routerInterfaceId,proto3" json:"router_interface_id,omitempty"`
}

func (x *DeleteRouterInterfaceResponse) Reset() {
	*x = DeleteRouterInterfaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRouterInterfaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRouterInterfaceResponse) ProtoMessage() {}

func (x *DeleteRouterInterfaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRouterInterfaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteRouterInterfaceResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteRouterInterfaceResponse) GetRouterInterfaceId() *RouterInterfaceId {
	if x != nil {
		return x.RouterInterfaceId
	}
	return nil
}

type ListStaticRoutesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStaticRoutesRequest) Reset() {
	*x = ListStaticRoutesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStaticRoutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStaticRoutesRequest) ProtoMessage() {}

func (x *ListStaticRoutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStaticRoutesRequest.ProtoReflect.Descriptor instead.
func (*ListStaticRoutesRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{32}
}

type ListStaticRoutesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticRouteIds []*StaticRouteId `protobuf:"bytes,1,rep,name=static_route_ids,json=staticRouteIds,proto3" json:"static_route_ids,omitempty"`
}

func (x *ListStaticRoutesResponse) Reset() {
	*x = ListStaticRoutesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStaticRoutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStaticRoutesResponse) ProtoMessage() {}

func (x *ListStaticRoutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStaticRoutesResponse.ProtoReflect.Descriptor instead.
func (*ListStaticRoutesResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{33}
}

func (x *ListStaticRoutesResponse) GetStaticRouteIds() []*StaticRouteId {
	if x != nil {
		return x.StaticRouteIds
	}
	return nil
}

type CreateStaticRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticRouteId *StaticRouteId `protobuf:"bytes,1,opt,name=static_route_id,json=staticRouteId,proto3" json:"static_route_id,omitempty"`
	RouterId      *RouterId      `protobuf:"bytes,2,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	Prefix        string         `protobuf:"bytes,3,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Nexthop       string         `protobuf:"bytes,4,opt,name=nexthop,proto3" json:"nexthop,omitempty"`
}

func (x *CreateStaticRouteRequest) Reset() {
	*x = CreateStaticRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaticRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaticRouteRequest) ProtoMessage() {}

func (x *CreateStaticRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaticRouteRequest.ProtoReflect.Descriptor instead.
func (*CreateStaticRouteRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{34}
}

func (x *CreateStaticRouteRequest) GetStaticRouteId() *StaticRouteId {
	if x != nil {
		return x.StaticRouteId
	}
	return nil
}

func (x *CreateStaticRouteRequest) GetRouterId() *RouterId {
	if x != nil {
		return x.RouterId
	}
	return nil
}

func (x *CreateStaticRouteRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *CreateStaticRouteRequest) GetNexthop() string {
	if x != nil {
		return x.Nexthop
	}
	return ""
}

type CreateStaticRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticRouteId *StaticRouteId `protobuf:"bytes,1,opt,name=static_route_id,json=staticRouteId,proto3" json:"static_route_id,omitempty"`
}

func (x *CreateStaticRouteResponse) Reset() {
	*x = CreateStaticRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStaticRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStaticRouteResponse) ProtoMessage() {}

func (x *CreateStaticRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStaticRouteResponse.ProtoReflect.Descriptor instead.
func (*CreateStaticRouteResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{35}
}

func (x *CreateStaticRouteResponse) GetStaticRouteId() *StaticRouteId {
	if x != nil {
		return x.StaticRouteId
	}
	return nil
}

type GetStaticRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticRouteId *StaticRouteId `protobuf:"bytes,1,opt,name=static_route_id,json=staticRouteId,proto3" json:"static_route_id,omitempty"`
}

func (x *GetStaticRouteRequest) Reset() {
	*x = GetStaticRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaticRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaticRouteRequest) ProtoMessage() {}

func (x *GetStaticRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaticRouteRequest.ProtoReflect.Descriptor instead.
func (*GetStaticRouteRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{36}
}

func (x *GetStaticRouteRequest) GetStaticRouteId() *StaticRouteId {
	if x != nil {
		return x.StaticRouteId
	}
	return nil
}

type GetStaticRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticRoute *StaticRoute `protobuf:"bytes,1,opt,name=static_route,json=staticRoute,proto3" json:"static_route,omitempty"`
}

func (x *GetStaticRouteResponse) Reset() {
	*x = GetStaticRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaticRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaticRouteResponse) ProtoMessage() {}

func (x *GetStaticRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaticRouteResponse.ProtoReflect.Descriptor instead.
func (*GetStaticRouteResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{37}
}

func (x *GetStaticRouteResponse) GetStaticRoute() *StaticRoute {
	if x != nil {
		return x.StaticRoute
	}
	return nil
}

type DeleteStaticRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticRouteId *StaticRouteId `protobuf:"bytes,1,opt,name=static_route_id,json=staticRouteId,proto3" json:"static_route_id,omitempty"`
}

func (x *DeleteStaticRouteRequest) Reset() {
	*x = DeleteStaticRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStaticRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStaticRouteRequest) ProtoMessage() {}

func (x *DeleteStaticRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStaticRouteRequest.ProtoReflect.Descriptor instead.
func (*DeleteStaticRouteRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteStaticRouteRequest) GetStaticRouteId() *StaticRouteId {
	if x != nil {
		return x.StaticRouteId
	}
	return nil
}

type DeleteStaticRouteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StaticRouteId *StaticRouteId `protobuf:"bytes,1,opt,name=static_route_id,json=staticRouteId,proto3" json:"static_route_id,omitempty"`
}

func (x *DeleteStaticRouteResponse) Reset() {
	*x = DeleteStaticRouteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStaticRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStaticRouteResponse) ProtoMessage() {}

func (x *DeleteStaticRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStaticRouteResponse.ProtoReflect.Descriptor instead.
func (*DeleteStaticRouteResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteStaticRouteResponse) GetStaticRouteId() *StaticRouteId {
	if x != nil {
		return x.StaticRouteId
	}
	return nil
}

type ListPortsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPortsRequest) Reset() {
	*x = ListPortsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPortsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortsRequest) ProtoMessage() {}

func (x *ListPortsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortsRequest.ProtoReflect.Descriptor instead.
func (*ListPortsRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{40}
}

type ListPortsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortIds []*PortId `protobuf:"bytes,1,rep,name=port_ids,json=portIds,proto3" json:"port_ids,omitempty"`
}

func (x *ListPortsResponse) Reset() {
	*x = ListPortsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPortsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPortsResponse) ProtoMessage() {}

func (x *ListPortsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPortsResponse.ProtoReflect.Descriptor instead.
func (*ListPortsResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{41}
}

func (x *ListPortsResponse) GetPortIds() []*PortId {
	if x != nil {
		return x.PortIds
	}
	return nil
}

type CreatePortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId             *PortId   `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	SubnetId           *SubnetId `protobuf:"bytes,2,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	ChassisId          uint32    `protobuf:"varint,3,opt,name=chassis_id,json=chassisId,proto3" json:"chassis_id,omitempty"`
	DeviceId           uint32    `protobuf:"varint,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	MACAddress         string    `protobuf:"bytes,5,opt,name=MAC_address,json=MACAddress,proto3" json:"MAC_address,omitempty"`
	Internal_IPAddress string    `protobuf:"bytes,6,opt,name=internal_IP_address,json=internalIPAddress,proto3" json:"internal_IP_address,omitempty"`
	IsEnabled          bool      `protobuf:"varint,7,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	IsNAT              bool      `protobuf:"varint,8,opt,name=isNAT,proto3" json:"isNAT,omitempty"`
	External_IPAddress *string   `protobuf:"bytes,9,opt,name=external_IP_address,json=externalIPAddress,proto3,oneof" json:"external_IP_address,omitempty"`
	External_MAC       *string   `protobuf:"bytes,10,opt,name=External_MAC,json=ExternalMAC,proto3,oneof" json:"External_MAC,omitempty"`
}

func (x *CreatePortRequest) Reset() {
	*x = CreatePortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePortRequest) ProtoMessage() {}

func (x *CreatePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePortRequest.ProtoReflect.Descriptor instead.
func (*CreatePortRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{42}
}

func (x *CreatePortRequest) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

func (x *CreatePortRequest) GetSubnetId() *SubnetId {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

func (x *CreatePortRequest) GetChassisId() uint32 {
	if x != nil {
		return x.ChassisId
	}
	return 0
}

func (x *CreatePortRequest) GetDeviceId() uint32 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *CreatePortRequest) GetMACAddress() string {
	if x != nil {
		return x.MACAddress
	}
	return ""
}

func (x *CreatePortRequest) GetInternal_IPAddress() string {
	if x != nil {
		return x.Internal_IPAddress
	}
	return ""
}

func (x *CreatePortRequest) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *CreatePortRequest) GetIsNAT() bool {
	if x != nil {
		return x.IsNAT
	}
	return false
}

func (x *CreatePortRequest) GetExternal_IPAddress() string {
	if x != nil && x.External_IPAddress != nil {
		return *x.External_IPAddress
	}
	return ""
}

func (x *CreatePortRequest) GetExternal_MAC() string {
	if x != nil && x.External_MAC != nil {
		return *x.External_MAC
	}
	return ""
}

type CreatePortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId *PortId `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
}

func (x *CreatePortResponse) Reset() {
	*x = CreatePortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePortResponse) ProtoMessage() {}

func (x *CreatePortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePortResponse.ProtoReflect.Descriptor instead.
func (*CreatePortResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{43}
}

func (x *CreatePortResponse) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

type GetPortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId *PortId `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
}

func (x *GetPortRequest) Reset() {
	*x = GetPortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortRequest) ProtoMessage() {}

func (x *GetPortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortRequest.ProtoReflect.Descriptor instead.
func (*GetPortRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{44}
}

func (x *GetPortRequest) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

type GetPortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port *Port `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *GetPortResponse) Reset() {
	*x = GetPortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPortResponse) ProtoMessage() {}

func (x *GetPortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPortResponse.ProtoReflect.Descriptor instead.
func (*GetPortResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{45}
}

func (x *GetPortResponse) GetPort() *Port {
	if x != nil {
		return x.Port
	}
	return nil
}

type UpdatePortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId             *PortId `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	IsNAT              *bool   `protobuf:"varint,2,opt,name=isNAT,proto3,oneof" json:"isNAT,omitempty"`
	External_IPAddress *string `protobuf:"bytes,3,opt,name=external_IP_address,json=externalIPAddress,proto3,oneof" json:"external_IP_address,omitempty"`
	External_MAC       *string `protobuf:"bytes,4,opt,name=External_MAC,json=ExternalMAC,proto3,oneof" json:"External_MAC,omitempty"`
	IsEnabled          *bool   `protobuf:"varint,5,opt,name=isEnabled,proto3,oneof" json:"isEnabled,omitempty"`
}

func (x *UpdatePortRequest) Reset() {
	*x = UpdatePortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortRequest) ProtoMessage() {}

func (x *UpdatePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortRequest.ProtoReflect.Descriptor instead.
func (*UpdatePortRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{46}
}

func (x *UpdatePortRequest) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

func (x *UpdatePortRequest) GetIsNAT() bool {
	if x != nil && x.IsNAT != nil {
		return *x.IsNAT
	}
	return false
}

func (x *UpdatePortRequest) GetExternal_IPAddress() string {
	if x != nil && x.External_IPAddress != nil {
		return *x.External_IPAddress
	}
	return ""
}

func (x *UpdatePortRequest) GetExternal_MAC() string {
	if x != nil && x.External_MAC != nil {
		return *x.External_MAC
	}
	return ""
}

func (x *UpdatePortRequest) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

type UpdatePortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId         *PortId `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
	Snat_IPAddress *string `protobuf:"bytes,2,opt,name=snat_IP_address,json=snatIPAddress,proto3,oneof" json:"snat_IP_address,omitempty"`
}

func (x *UpdatePortResponse) Reset() {
	*x = UpdatePortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortResponse) ProtoMessage() {}

func (x *UpdatePortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortResponse.ProtoReflect.Descriptor instead.
func (*UpdatePortResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{47}
}

func (x *UpdatePortResponse) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

func (x *UpdatePortResponse) GetSnat_IPAddress() string {
	if x != nil && x.Snat_IPAddress != nil {
		return *x.Snat_IPAddress
	}
	return ""
}

type DeletePortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId *PortId `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
}

func (x *DeletePortRequest) Reset() {
	*x = DeletePortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortRequest) ProtoMessage() {}

func (x *DeletePortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortRequest.ProtoReflect.Descriptor instead.
func (*DeletePortRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{48}
}

func (x *DeletePortRequest) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

type DeletePortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortId *PortId `protobuf:"bytes,1,opt,name=port_id,json=portId,proto3" json:"port_id,omitempty"`
}

func (x *DeletePortResponse) Reset() {
	*x = DeletePortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortResponse) ProtoMessage() {}

func (x *DeletePortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortResponse.ProtoReflect.Descriptor instead.
func (*DeletePortResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{49}
}

func (x *DeletePortResponse) GetPortId() *PortId {
	if x != nil {
		return x.PortId
	}
	return nil
}

type ListSecurityGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSecurityGroupsRequest) Reset() {
	*x = ListSecurityGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecurityGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecurityGroupsRequest) ProtoMessage() {}

func (x *ListSecurityGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecurityGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListSecurityGroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{50}
}

type ListSecurityGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupIds []*SecurityGroupId `protobuf:"bytes,1,rep,name=security_group_ids,json=securityGroupIds,proto3" json:"security_group_ids,omitempty"`
}

func (x *ListSecurityGroupsResponse) Reset() {
	*x = ListSecurityGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecurityGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecurityGroupsResponse) ProtoMessage() {}

func (x *ListSecurityGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecurityGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListSecurityGroupsResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{51}
}

func (x *ListSecurityGroupsResponse) GetSecurityGroupIds() []*SecurityGroupId {
	if x != nil {
		return x.SecurityGroupIds
	}
	return nil
}

type CreateSecurityGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupId *SecurityGroupId  `protobuf:"bytes,1,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
	Name            string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SecurityRules   []*SecurityRuleId `protobuf:"bytes,3,rep,name=security_rules,json=securityRules,proto3" json:"security_rules,omitempty"`
	PortIds         []*PortId         `protobuf:"bytes,4,rep,name=port_ids,json=portIds,proto3" json:"port_ids,omitempty"`
	SubnetIds       []*SubnetId       `protobuf:"bytes,5,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
	VpcId           *VPCId            `protobuf:"bytes,6,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *CreateSecurityGroupRequest) Reset() {
	*x = CreateSecurityGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSecurityGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecurityGroupRequest) ProtoMessage() {}

func (x *CreateSecurityGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecurityGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateSecurityGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{52}
}

func (x *CreateSecurityGroupRequest) GetSecurityGroupId() *SecurityGroupId {
	if x != nil {
		return x.SecurityGroupId
	}
	return nil
}

func (x *CreateSecurityGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSecurityGroupRequest) GetSecurityRules() []*SecurityRuleId {
	if x != nil {
		return x.SecurityRules
	}
	return nil
}

func (x *CreateSecurityGroupRequest) GetPortIds() []*PortId {
	if x != nil {
		return x.PortIds
	}
	return nil
}

func (x *CreateSecurityGroupRequest) GetSubnetIds() []*SubnetId {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

func (x *CreateSecurityGroupRequest) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

type CreateSecurityGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupId *SecurityGroupId `protobuf:"bytes,1,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
}

func (x *CreateSecurityGroupResponse) Reset() {
	*x = CreateSecurityGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSecurityGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecurityGroupResponse) ProtoMessage() {}

func (x *CreateSecurityGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecurityGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateSecurityGroupResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{53}
}

func (x *CreateSecurityGroupResponse) GetSecurityGroupId() *SecurityGroupId {
	if x != nil {
		return x.SecurityGroupId
	}
	return nil
}

type GetSecurityGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupId *SecurityGroupId `protobuf:"bytes,1,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
}

func (x *GetSecurityGroupRequest) Reset() {
	*x = GetSecurityGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityGroupRequest) ProtoMessage() {}

func (x *GetSecurityGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityGroupRequest.ProtoReflect.Descriptor instead.
func (*GetSecurityGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{54}
}

func (x *GetSecurityGroupRequest) GetSecurityGroupId() *SecurityGroupId {
	if x != nil {
		return x.SecurityGroupId
	}
	return nil
}

type GetSecurityGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroup *SecurityGroup `protobuf:"bytes,1,opt,name=security_group,json=securityGroup,proto3" json:"security_group,omitempty"`
}

func (x *GetSecurityGroupResponse) Reset() {
	*x = GetSecurityGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityGroupResponse) ProtoMessage() {}

func (x *GetSecurityGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityGroupResponse.ProtoReflect.Descriptor instead.
func (*GetSecurityGroupResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{55}
}

func (x *GetSecurityGroupResponse) GetSecurityGroup() *SecurityGroup {
	if x != nil {
		return x.SecurityGroup
	}
	return nil
}

type UpdateSecurityGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupId *SecurityGroupId  `protobuf:"bytes,1,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
	SecurityRules   []*SecurityRuleId `protobuf:"bytes,2,rep,name=security_rules,json=securityRules,proto3" json:"security_rules,omitempty"` // This list should contain all the rules expected to be part of the Security Group once the update has taken effect.
	PortIds         []*PortId         `protobuf:"bytes,3,rep,name=port_ids,json=portIds,proto3" json:"port_ids,omitempty"`                   // This list should contain all the Ports expected to be part of the Security Group once the update has taken effect.
	SubnetIds       []*SubnetId       `protobuf:"bytes,4,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`             // This list should contain all the Subnets expected to be part of the Security Group once the update has taken effect.
}

func (x *UpdateSecurityGroupRequest) Reset() {
	*x = UpdateSecurityGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSecurityGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecurityGroupRequest) ProtoMessage() {}

func (x *UpdateSecurityGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecurityGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateSecurityGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateSecurityGroupRequest) GetSecurityGroupId() *SecurityGroupId {
	if x != nil {
		return x.SecurityGroupId
	}
	return nil
}

func (x *UpdateSecurityGroupRequest) GetSecurityRules() []*SecurityRuleId {
	if x != nil {
		return x.SecurityRules
	}
	return nil
}

func (x *UpdateSecurityGroupRequest) GetPortIds() []*PortId {
	if x != nil {
		return x.PortIds
	}
	return nil
}

func (x *UpdateSecurityGroupRequest) GetSubnetIds() []*SubnetId {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

type UpdateSecurityGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupId *SecurityGroupId `protobuf:"bytes,1,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
}

func (x *UpdateSecurityGroupResponse) Reset() {
	*x = UpdateSecurityGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSecurityGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSecurityGroupResponse) ProtoMessage() {}

func (x *UpdateSecurityGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSecurityGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateSecurityGroupResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateSecurityGroupResponse) GetSecurityGroupId() *SecurityGroupId {
	if x != nil {
		return x.SecurityGroupId
	}
	return nil
}

type DeleteSecurityGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupId *SecurityGroupId `protobuf:"bytes,1,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
}

func (x *DeleteSecurityGroupRequest) Reset() {
	*x = DeleteSecurityGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSecurityGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecurityGroupRequest) ProtoMessage() {}

func (x *DeleteSecurityGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecurityGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteSecurityGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteSecurityGroupRequest) GetSecurityGroupId() *SecurityGroupId {
	if x != nil {
		return x.SecurityGroupId
	}
	return nil
}

type DeleteSecurityGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityGroupId *SecurityGroupId `protobuf:"bytes,1,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
}

func (x *DeleteSecurityGroupResponse) Reset() {
	*x = DeleteSecurityGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSecurityGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecurityGroupResponse) ProtoMessage() {}

func (x *DeleteSecurityGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecurityGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteSecurityGroupResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteSecurityGroupResponse) GetSecurityGroupId() *SecurityGroupId {
	if x != nil {
		return x.SecurityGroupId
	}
	return nil
}

type ListSecurityRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSecurityRulesRequest) Reset() {
	*x = ListSecurityRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecurityRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecurityRulesRequest) ProtoMessage() {}

func (x *ListSecurityRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecurityRulesRequest.ProtoReflect.Descriptor instead.
func (*ListSecurityRulesRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{60}
}

type ListSecurityRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityRuleIds []*SecurityRuleId `protobuf:"bytes,1,rep,name=security_rule_ids,json=securityRuleIds,proto3" json:"security_rule_ids,omitempty"`
}

func (x *ListSecurityRulesResponse) Reset() {
	*x = ListSecurityRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecurityRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecurityRulesResponse) ProtoMessage() {}

func (x *ListSecurityRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecurityRulesResponse.ProtoReflect.Descriptor instead.
func (*ListSecurityRulesResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{61}
}

func (x *ListSecurityRulesResponse) GetSecurityRuleIds() []*SecurityRuleId {
	if x != nil {
		return x.SecurityRuleIds
	}
	return nil
}

type CreateSecurityRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityRuleId          *SecurityRuleId `protobuf:"bytes,1,opt,name=security_rule_id,json=securityRuleId,proto3" json:"security_rule_id,omitempty"`
	Name                    string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Priority                uint32          `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Direction               Direction       `protobuf:"varint,4,opt,name=direction,proto3,enum=sdn.v1.Direction" json:"direction,omitempty"`
	Source_IPAddresses      []string        `protobuf:"bytes,5,rep,name=source_IP_addresses,json=sourceIPAddresses,proto3" json:"source_IP_addresses,omitempty"`
	Destination_IPAddresses []string        `protobuf:"bytes,6,rep,name=destination_IP_addresses,json=destinationIPAddresses,proto3" json:"destination_IP_addresses,omitempty"`
	Protocol                *Protocol       `protobuf:"varint,7,opt,name=protocol,proto3,enum=sdn.v1.Protocol,oneof" json:"protocol,omitempty"`
	SourcePortRange         *PortRange      `protobuf:"bytes,8,opt,name=source_port_range,json=sourcePortRange,proto3,oneof" json:"source_port_range,omitempty"`
	DestinationPortRange    *PortRange      `protobuf:"bytes,9,opt,name=destination_port_range,json=destinationPortRange,proto3,oneof" json:"destination_port_range,omitempty"`
	Action                  SecurityAction  `protobuf:"varint,10,opt,name=action,proto3,enum=sdn.v1.SecurityAction" json:"action,omitempty"`
	VpcId                   *VPCId          `protobuf:"bytes,11,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
}

func (x *CreateSecurityRuleRequest) Reset() {
	*x = CreateSecurityRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSecurityRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecurityRuleRequest) ProtoMessage() {}

func (x *CreateSecurityRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecurityRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateSecurityRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{62}
}

func (x *CreateSecurityRuleRequest) GetSecurityRuleId() *SecurityRuleId {
	if x != nil {
		return x.SecurityRuleId
	}
	return nil
}

func (x *CreateSecurityRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSecurityRuleRequest) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateSecurityRuleRequest) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIR_UNSPECIFIED
}

func (x *CreateSecurityRuleRequest) GetSource_IPAddresses() []string {
	if x != nil {
		return x.Source_IPAddresses
	}
	return nil
}

func (x *CreateSecurityRuleRequest) GetDestination_IPAddresses() []string {
	if x != nil {
		return x.Destination_IPAddresses
	}
	return nil
}

func (x *CreateSecurityRuleRequest) GetProtocol() Protocol {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return Protocol_TCP
}

func (x *CreateSecurityRuleRequest) GetSourcePortRange() *PortRange {
	if x != nil {
		return x.SourcePortRange
	}
	return nil
}

func (x *CreateSecurityRuleRequest) GetDestinationPortRange() *PortRange {
	if x != nil {
		return x.DestinationPortRange
	}
	return nil
}

func (x *CreateSecurityRuleRequest) GetAction() SecurityAction {
	if x != nil {
		return x.Action
	}
	return SecurityAction_ACTION_UNSPECIFIED
}

func (x *CreateSecurityRuleRequest) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

type CreateSecurityRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityRuleId *SecurityRuleId `protobuf:"bytes,1,opt,name=security_rule_id,json=securityRuleId,proto3" json:"security_rule_id,omitempty"`
}

func (x *CreateSecurityRuleResponse) Reset() {
	*x = CreateSecurityRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSecurityRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSecurityRuleResponse) ProtoMessage() {}

func (x *CreateSecurityRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSecurityRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateSecurityRuleResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{63}
}

func (x *CreateSecurityRuleResponse) GetSecurityRuleId() *SecurityRuleId {
	if x != nil {
		return x.SecurityRuleId
	}
	return nil
}

type GetSecurityRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityRuleId *SecurityRuleId `protobuf:"bytes,1,opt,name=security_rule_id,json=securityRuleId,proto3" json:"security_rule_id,omitempty"`
}

func (x *GetSecurityRuleRequest) Reset() {
	*x = GetSecurityRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityRuleRequest) ProtoMessage() {}

func (x *GetSecurityRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityRuleRequest.ProtoReflect.Descriptor instead.
func (*GetSecurityRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{64}
}

func (x *GetSecurityRuleRequest) GetSecurityRuleId() *SecurityRuleId {
	if x != nil {
		return x.SecurityRuleId
	}
	return nil
}

type GetSecurityRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityRule *SecurityRule `protobuf:"bytes,1,opt,name=security_rule,json=securityRule,proto3" json:"security_rule,omitempty"`
}

func (x *GetSecurityRuleResponse) Reset() {
	*x = GetSecurityRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityRuleResponse) ProtoMessage() {}

func (x *GetSecurityRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityRuleResponse.ProtoReflect.Descriptor instead.
func (*GetSecurityRuleResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{65}
}

func (x *GetSecurityRuleResponse) GetSecurityRule() *SecurityRule {
	if x != nil {
		return x.SecurityRule
	}
	return nil
}

type DeleteSecurityRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityRuleId *SecurityRuleId `protobuf:"bytes,1,opt,name=security_rule_id,json=securityRuleId,proto3" json:"security_rule_id,omitempty"`
}

func (x *DeleteSecurityRuleRequest) Reset() {
	*x = DeleteSecurityRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSecurityRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecurityRuleRequest) ProtoMessage() {}

func (x *DeleteSecurityRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecurityRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteSecurityRuleRequest) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{66}
}

func (x *DeleteSecurityRuleRequest) GetSecurityRuleId() *SecurityRuleId {
	if x != nil {
		return x.SecurityRuleId
	}
	return nil
}

type DeleteSecurityRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecurityRuleId *SecurityRuleId `protobuf:"bytes,1,opt,name=security_rule_id,json=securityRuleId,proto3" json:"security_rule_id,omitempty"`
}

func (x *DeleteSecurityRuleResponse) Reset() {
	*x = DeleteSecurityRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSecurityRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSecurityRuleResponse) ProtoMessage() {}

func (x *DeleteSecurityRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSecurityRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteSecurityRuleResponse) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{67}
}

func (x *DeleteSecurityRuleResponse) GetSecurityRuleId() *SecurityRuleId {
	if x != nil {
		return x.SecurityRuleId
	}
	return nil
}

type ObjStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ObjStatus) Reset() {
	*x = ObjStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjStatus) ProtoMessage() {}

func (x *ObjStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjStatus.ProtoReflect.Descriptor instead.
func (*ObjStatus) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{68}
}

func (x *ObjStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VPCId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *VPCId) Reset() {
	*x = VPCId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPCId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPCId) ProtoMessage() {}

func (x *VPCId) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPCId.ProtoReflect.Descriptor instead.
func (*VPCId) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{69}
}

func (x *VPCId) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type VPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *VPCId      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TenantId string      `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // Uniquely identifes a consumer of VPC
	RegionId string      `protobuf:"bytes,4,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"` // Identifies the region. Must be same as the region of controller instance.
	Routers  []*RouterId `protobuf:"bytes,5,rep,name=routers,proto3" json:"routers,omitempty"`
	Subnets  []*SubnetId `protobuf:"bytes,6,rep,name=subnets,proto3" json:"subnets,omitempty"`
	Status   *ObjStatus  `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *VPC) Reset() {
	*x = VPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VPC) ProtoMessage() {}

func (x *VPC) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VPC.ProtoReflect.Descriptor instead.
func (*VPC) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{70}
}

func (x *VPC) GetId() *VPCId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *VPC) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VPC) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *VPC) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *VPC) GetRouters() []*RouterId {
	if x != nil {
		return x.Routers
	}
	return nil
}

func (x *VPC) GetSubnets() []*SubnetId {
	if x != nil {
		return x.Subnets
	}
	return nil
}

func (x *VPC) GetStatus() *ObjStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type SubnetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SubnetId) Reset() {
	*x = SubnetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubnetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubnetId) ProtoMessage() {}

func (x *SubnetId) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubnetId.ProtoReflect.Descriptor instead.
func (*SubnetId) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{71}
}

func (x *SubnetId) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Subnet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *SubnetId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // TODO [(buf.validate.field).string.min_len = 1];
	Cidr             string     `protobuf:"bytes,3,opt,name=cidr,proto3" json:"cidr,omitempty"` // Should be specified in a.b.c.d/xy format
	AvailabilityZone string     `protobuf:"bytes,4,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
	VpcId            *VPCId     `protobuf:"bytes,5,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Status           *ObjStatus `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Subnet) Reset() {
	*x = Subnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subnet) ProtoMessage() {}

func (x *Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subnet.ProtoReflect.Descriptor instead.
func (*Subnet) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{72}
}

func (x *Subnet) GetId() *SubnetId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Subnet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subnet) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Subnet) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

func (x *Subnet) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

func (x *Subnet) GetStatus() *ObjStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type RouterId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *RouterId) Reset() {
	*x = RouterId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouterId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterId) ProtoMessage() {}

func (x *RouterId) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterId.ProtoReflect.Descriptor instead.
func (*RouterId) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{73}
}

func (x *RouterId) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Router struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               *RouterId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // TODO [(buf.validate.field).string.min_len = 1];
	AvailabilityZone string     `protobuf:"bytes,3,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
	VpcId            *VPCId     `protobuf:"bytes,4,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Status           *ObjStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Router) Reset() {
	*x = Router{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Router) ProtoMessage() {}

func (x *Router) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Router.ProtoReflect.Descriptor instead.
func (*Router) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{74}
}

func (x *Router) GetId() *RouterId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Router) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Router) GetAvailabilityZone() string {
	if x != nil {
		return x.AvailabilityZone
	}
	return ""
}

func (x *Router) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

func (x *Router) GetStatus() *ObjStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type RouterInterfaceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *RouterInterfaceId) Reset() {
	*x = RouterInterfaceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouterInterfaceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterInterfaceId) ProtoMessage() {}

func (x *RouterInterfaceId) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterInterfaceId.ProtoReflect.Descriptor instead.
func (*RouterInterfaceId) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{75}
}

func (x *RouterInterfaceId) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type RouterInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *RouterInterfaceId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RouterId      *RouterId          `protobuf:"bytes,2,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	SubnetId      *SubnetId          `protobuf:"bytes,3,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	Interface_IP  string             `protobuf:"bytes,4,opt,name=interface_IP,json=interfaceIP,proto3" json:"interface_IP,omitempty"`
	Interface_MAC string             `protobuf:"bytes,5,opt,name=interface_MAC,json=interfaceMAC,proto3" json:"interface_MAC,omitempty"`
	Status        *ObjStatus         `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RouterInterface) Reset() {
	*x = RouterInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouterInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterInterface) ProtoMessage() {}

func (x *RouterInterface) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterInterface.ProtoReflect.Descriptor instead.
func (*RouterInterface) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{76}
}

func (x *RouterInterface) GetId() *RouterInterfaceId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RouterInterface) GetRouterId() *RouterId {
	if x != nil {
		return x.RouterId
	}
	return nil
}

func (x *RouterInterface) GetSubnetId() *SubnetId {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

func (x *RouterInterface) GetInterface_IP() string {
	if x != nil {
		return x.Interface_IP
	}
	return ""
}

func (x *RouterInterface) GetInterface_MAC() string {
	if x != nil {
		return x.Interface_MAC
	}
	return ""
}

func (x *RouterInterface) GetStatus() *ObjStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type StaticRouteId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *StaticRouteId) Reset() {
	*x = StaticRouteId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticRouteId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticRouteId) ProtoMessage() {}

func (x *StaticRouteId) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticRouteId.ProtoReflect.Descriptor instead.
func (*StaticRouteId) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{77}
}

func (x *StaticRouteId) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type StaticRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *StaticRouteId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Prefix   string         `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`   // This is the destination IP prefix to be routed to
	Nexthop  string         `protobuf:"bytes,3,opt,name=nexthop,proto3" json:"nexthop,omitempty"` // This is the IP Address of the device traffic is to be directed to
	RouterId *RouterId      `protobuf:"bytes,4,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	Status   *ObjStatus     `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StaticRoute) Reset() {
	*x = StaticRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StaticRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticRoute) ProtoMessage() {}

func (x *StaticRoute) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticRoute.ProtoReflect.Descriptor instead.
func (*StaticRoute) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{78}
}

func (x *StaticRoute) GetId() *StaticRouteId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StaticRoute) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *StaticRoute) GetNexthop() string {
	if x != nil {
		return x.Nexthop
	}
	return ""
}

func (x *StaticRoute) GetRouterId() *RouterId {
	if x != nil {
		return x.RouterId
	}
	return nil
}

func (x *StaticRoute) GetStatus() *ObjStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type PortId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *PortId) Reset() {
	*x = PortId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortId) ProtoMessage() {}

func (x *PortId) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortId.ProtoReflect.Descriptor instead.
func (*PortId) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{79}
}

func (x *PortId) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *PortId    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	SubnetId           *SubnetId  `protobuf:"bytes,3,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	IPAddress          string     `protobuf:"bytes,4,opt,name=IP_address,json=IPAddress,proto3" json:"IP_address,omitempty"`
	MACAddress         *string    `protobuf:"bytes,5,opt,name=MAC_address,json=MACAddress,proto3,oneof" json:"MAC_address,omitempty"` // The preferred approach is for the caller to provide the MAC address. It is TBD whether the system can internally generate one.
	ChassisId          uint32     `protobuf:"varint,6,opt,name=chassis_id,json=chassisId,proto3" json:"chassis_id,omitempty"`
	DeviceId           uint32     `protobuf:"varint,7,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	IsEnabled          bool       `protobuf:"varint,8,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	IsNAT              *string    `protobuf:"bytes,9,opt,name=isNAT,proto3,oneof" json:"isNAT,omitempty"`
	External_IPAddress *string    `protobuf:"bytes,10,opt,name=external_IP_address,json=externalIPAddress,proto3,oneof" json:"external_IP_address,omitempty"`
	External_MAC       *string    `protobuf:"bytes,11,opt,name=external_MAC,json=externalMAC,proto3,oneof" json:"external_MAC,omitempty"`
	Status             *ObjStatus `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Port) Reset() {
	*x = Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Port) ProtoMessage() {}

func (x *Port) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Port.ProtoReflect.Descriptor instead.
func (*Port) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{80}
}

func (x *Port) GetId() *PortId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Port) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Port) GetSubnetId() *SubnetId {
	if x != nil {
		return x.SubnetId
	}
	return nil
}

func (x *Port) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

func (x *Port) GetMACAddress() string {
	if x != nil && x.MACAddress != nil {
		return *x.MACAddress
	}
	return ""
}

func (x *Port) GetChassisId() uint32 {
	if x != nil {
		return x.ChassisId
	}
	return 0
}

func (x *Port) GetDeviceId() uint32 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *Port) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *Port) GetIsNAT() string {
	if x != nil && x.IsNAT != nil {
		return *x.IsNAT
	}
	return ""
}

func (x *Port) GetExternal_IPAddress() string {
	if x != nil && x.External_IPAddress != nil {
		return *x.External_IPAddress
	}
	return ""
}

func (x *Port) GetExternal_MAC() string {
	if x != nil && x.External_MAC != nil {
		return *x.External_MAC
	}
	return ""
}

func (x *Port) GetStatus() *ObjStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type SecurityGroupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SecurityGroupId) Reset() {
	*x = SecurityGroupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityGroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityGroupId) ProtoMessage() {}

func (x *SecurityGroupId) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityGroupId.ProtoReflect.Descriptor instead.
func (*SecurityGroupId) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{81}
}

func (x *SecurityGroupId) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SecurityGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *SecurityGroupId  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SecurityRuleIds []*SecurityRuleId `protobuf:"bytes,3,rep,name=security_rule_ids,json=securityRuleIds,proto3" json:"security_rule_ids,omitempty"`
	PortIds         []*PortId         `protobuf:"bytes,4,rep,name=port_ids,json=portIds,proto3" json:"port_ids,omitempty"`
	SubnetIds       []*SubnetId       `protobuf:"bytes,5,rep,name=subnet_ids,json=subnetIds,proto3" json:"subnet_ids,omitempty"`
	VpcId           *VPCId            `protobuf:"bytes,6,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	Status          *ObjStatus        `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SecurityGroup) Reset() {
	*x = SecurityGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityGroup) ProtoMessage() {}

func (x *SecurityGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityGroup.ProtoReflect.Descriptor instead.
func (*SecurityGroup) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{82}
}

func (x *SecurityGroup) GetId() *SecurityGroupId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SecurityGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SecurityGroup) GetSecurityRuleIds() []*SecurityRuleId {
	if x != nil {
		return x.SecurityRuleIds
	}
	return nil
}

func (x *SecurityGroup) GetPortIds() []*PortId {
	if x != nil {
		return x.PortIds
	}
	return nil
}

func (x *SecurityGroup) GetSubnetIds() []*SubnetId {
	if x != nil {
		return x.SubnetIds
	}
	return nil
}

func (x *SecurityGroup) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

func (x *SecurityGroup) GetStatus() *ObjStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type SecurityRuleId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SecurityRuleId) Reset() {
	*x = SecurityRuleId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityRuleId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityRuleId) ProtoMessage() {}

func (x *SecurityRuleId) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityRuleId.ProtoReflect.Descriptor instead.
func (*SecurityRuleId) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{83}
}

func (x *SecurityRuleId) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SecurityRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   *SecurityRuleId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Priority             uint32          `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"` // The priority should be unique within the SG the SR is included in otherwise behavior is unknown
	Direction            Direction       `protobuf:"varint,4,opt,name=direction,proto3,enum=sdn.v1.Direction" json:"direction,omitempty"`
	Source_IPs           []string        `protobuf:"bytes,7,rep,name=source_IPs,json=sourceIPs,proto3" json:"source_IPs,omitempty"`
	Destination_IPs      []string        `protobuf:"bytes,8,rep,name=destination_IPs,json=destinationIPs,proto3" json:"destination_IPs,omitempty"`
	Protocol             *Protocol       `protobuf:"varint,9,opt,name=protocol,proto3,enum=sdn.v1.Protocol,oneof" json:"protocol,omitempty"`
	SourcePortRange      *PortRange      `protobuf:"bytes,10,opt,name=source_port_range,json=sourcePortRange,proto3,oneof" json:"source_port_range,omitempty"`
	DestinationPortRange *PortRange      `protobuf:"bytes,11,opt,name=destination_port_range,json=destinationPortRange,proto3,oneof" json:"destination_port_range,omitempty"`
	Action               SecurityAction  `protobuf:"varint,12,opt,name=action,proto3,enum=sdn.v1.SecurityAction" json:"action,omitempty"`
	VpcId                *VPCId          `protobuf:"bytes,13,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	LoggingParametersTbd string          `protobuf:"bytes,14,opt,name=logging_parameters_tbd,json=loggingParametersTbd,proto3" json:"logging_parameters_tbd,omitempty"` // When implemented, add an Update API too.
	Status               *ObjStatus      `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SecurityRule) Reset() {
	*x = SecurityRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityRule) ProtoMessage() {}

func (x *SecurityRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityRule.ProtoReflect.Descriptor instead.
func (*SecurityRule) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{84}
}

func (x *SecurityRule) GetId() *SecurityRuleId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SecurityRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SecurityRule) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *SecurityRule) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_DIR_UNSPECIFIED
}

func (x *SecurityRule) GetSource_IPs() []string {
	if x != nil {
		return x.Source_IPs
	}
	return nil
}

func (x *SecurityRule) GetDestination_IPs() []string {
	if x != nil {
		return x.Destination_IPs
	}
	return nil
}

func (x *SecurityRule) GetProtocol() Protocol {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return Protocol_TCP
}

func (x *SecurityRule) GetSourcePortRange() *PortRange {
	if x != nil {
		return x.SourcePortRange
	}
	return nil
}

func (x *SecurityRule) GetDestinationPortRange() *PortRange {
	if x != nil {
		return x.DestinationPortRange
	}
	return nil
}

func (x *SecurityRule) GetAction() SecurityAction {
	if x != nil {
		return x.Action
	}
	return SecurityAction_ACTION_UNSPECIFIED
}

func (x *SecurityRule) GetVpcId() *VPCId {
	if x != nil {
		return x.VpcId
	}
	return nil
}

func (x *SecurityRule) GetLoggingParametersTbd() string {
	if x != nil {
		return x.LoggingParametersTbd
	}
	return ""
}

func (x *SecurityRule) GetStatus() *ObjStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type PortRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min uint32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max uint32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *PortRange) Reset() {
	*x = PortRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortRange) ProtoMessage() {}

func (x *PortRange) ProtoReflect() protoreflect.Message {
	mi := &file_api_sdn_v1_ovnnet_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortRange.ProtoReflect.Descriptor instead.
func (*PortRange) Descriptor() ([]byte, []int) {
	return file_api_sdn_v1_ovnnet_proto_rawDescGZIP(), []int{85}
}

func (x *PortRange) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *PortRange) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

var File_api_sdn_v1_ovnnet_proto protoreflect.FileDescriptor

var file_api_sdn_v1_ovnnet_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x64, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x76, 0x6e,
	0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x76, 0x70, 0x63, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x06, 0x76, 0x70, 0x63, 0x49, 0x64, 0x73,
	0x22, 0x86, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x50, 0x43, 0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x05, 0x76,
	0x70, 0x63, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56, 0x50, 0x43, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x50, 0x43, 0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x03, 0x76, 0x70, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x52, 0x03, 0x76, 0x70, 0x63, 0x22, 0x38, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52,
	0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x76,
	0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49,
	0x64, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x49, 0x64, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x22,
	0xbf, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x2b,
	0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x76,
	0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49,
	0x64, 0x22, 0x45, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49,
	0x64, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x22, 0x45,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x05, 0x76,
	0x70, 0x63, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a, 0x6f, 0x6e,
	0x65, 0x22, 0x45, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x12, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x22, 0x8f, 0x02, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x49, 0x0a, 0x13, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x11, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49,
	0x64, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x50, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x4d, 0x41, 0x43, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x4d, 0x41, 0x43, 0x22, 0x66, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x49, 0x0a, 0x13, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x11, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x6a, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x13, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x11, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x1c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x13, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x52, 0x11, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x11, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x49, 0x64, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x78, 0x74, 0x68, 0x6f, 0x70, 0x22, 0x5a, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x49, 0x64, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x59, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x49, 0x64, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x07, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x22, 0xb3, 0x03, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x07,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x4d, 0x41, 0x43, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x49, 0x50,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x41, 0x54, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x4e, 0x41, 0x54, 0x12, 0x33, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x49, 0x50, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x4d, 0x41, 0x43, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x41, 0x43,
	0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x49, 0x50, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x4d, 0x41, 0x43, 0x22, 0x3d, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x98, 0x02, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x49, 0x64, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x73,
	0x4e, 0x41, 0x54, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x69, 0x73, 0x4e,
	0x41, 0x54, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x49, 0x50, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x4d, 0x41, 0x43, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4d, 0x41, 0x43, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x73, 0x4e, 0x41, 0x54, 0x42,
	0x16, 0x0a, 0x14, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x49, 0x50, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x4d, 0x41, 0x43, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x7e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x74, 0x5f, 0x49, 0x50,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0d, 0x73, 0x6e, 0x61, 0x74, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88,
	0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x6e, 0x61, 0x74, 0x5f, 0x49, 0x50, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x07, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x06, 0x70, 0x6f, 0x72,
	0x74, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x63, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x73, 0x22, 0xb6, 0x02, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x0d, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x08,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x07,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x52, 0x09, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x5e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a,
	0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x58, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xfc, 0x01, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x11, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52,
	0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64,
	0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x29, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x52, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x22, 0x62, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x11, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x0f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22,
	0x61, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a,
	0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x5f, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x22, 0x81, 0x05, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x40, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x49,
	0x50, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x50, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x31,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48,
	0x01, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x16, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x02, 0x52, 0x14, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43,
	0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x19, 0x0a, 0x17,
	0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x40, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x5d, 0x0a, 0x19, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x4f, 0x62, 0x6a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1b, 0x0a,
	0x05, 0x56, 0x50, 0x43, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xf5, 0x01, 0x0a, 0x03, 0x56,
	0x50, 0x43, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x1e, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x20, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50,
	0x43, 0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1e, 0x0a, 0x08, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5a,
	0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43,
	0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x8d, 0x02,
	0x0a, 0x0f, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x09,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x50, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x4d, 0x41, 0x43, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4d,
	0x41, 0x43, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x23, 0x0a,
	0x0d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0xc0, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x25, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x12, 0x2d, 0x0a, 0x09, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1c, 0x0a, 0x06, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0xef, 0x03, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x49, 0x64, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x49, 0x50, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x0a, 0x0b, 0x4d, 0x41, 0x43, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x4d, 0x41, 0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x73, 0x73, 0x69,
	0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x19, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x41, 0x54, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x05, 0x69, 0x73, 0x4e, 0x41, 0x54, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x49, 0x50, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x26, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x4d, 0x41, 0x43, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4d, 0x41, 0x43, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x62, 0x6a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4d, 0x41, 0x43, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x73, 0x4e, 0x41, 0x54, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x49, 0x50, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x4d, 0x41, 0x43, 0x22, 0x25, 0x0a, 0x0f, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xbd, 0x02, 0x0a,
	0x0d, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x27,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x11, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x0f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x29, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x52, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64,
	0x52, 0x09, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x76,
	0x70, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49,
	0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x0e,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x99, 0x05, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x49, 0x50, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x50, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x50, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x50, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x01, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x16, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x02,
	0x52, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x70, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x50, 0x43, 0x49, 0x64, 0x52, 0x05, 0x76, 0x70, 0x63, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x16, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x74, 0x62, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x54, 0x62, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x2f,
	0x0a, 0x09, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x2a,
	0x26, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x54,
	0x43, 0x50, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x49, 0x43, 0x4d, 0x50, 0x10, 0x02, 0x2a, 0x39, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x49, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x47,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53,
	0x10, 0x02, 0x2a, 0x3d, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x4e, 0x59, 0x10,
	0x02, 0x32, 0xf9, 0x15, 0x0a, 0x06, 0x4f, 0x76, 0x6e, 0x6e, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x08,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x73, 0x12, 0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x50, 0x43, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x50, 0x43, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x50, 0x43, 0x12, 0x18, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x56, 0x50, 0x43, 0x12, 0x15, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x50, 0x43, 0x12, 0x18, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x12,
	0x1a, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x6e, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x12, 0x1b, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x63, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x24,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x20, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x64, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x22, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x22, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x21, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x64,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x14, 0x5a,
	0x12, 0x6f, 0x76, 0x6e, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x64, 0x6e,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_sdn_v1_ovnnet_proto_rawDescOnce sync.Once
	file_api_sdn_v1_ovnnet_proto_rawDescData = file_api_sdn_v1_ovnnet_proto_rawDesc
)

func file_api_sdn_v1_ovnnet_proto_rawDescGZIP() []byte {
	file_api_sdn_v1_ovnnet_proto_rawDescOnce.Do(func() {
		file_api_sdn_v1_ovnnet_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_sdn_v1_ovnnet_proto_rawDescData)
	})
	return file_api_sdn_v1_ovnnet_proto_rawDescData
}

var file_api_sdn_v1_ovnnet_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_sdn_v1_ovnnet_proto_msgTypes = make([]protoimpl.MessageInfo, 86)
var file_api_sdn_v1_ovnnet_proto_goTypes = []interface{}{
	(Protocol)(0),                         // 0: sdn.v1.Protocol
	(Direction)(0),                        // 1: sdn.v1.Direction
	(SecurityAction)(0),                   // 2: sdn.v1.SecurityAction
	(*ListVPCsRequest)(nil),               // 3: sdn.v1.ListVPCsRequest
	(*ListVPCsResponse)(nil),              // 4: sdn.v1.ListVPCsResponse
	(*CreateVPCRequest)(nil),              // 5: sdn.v1.CreateVPCRequest
	(*CreateVPCResponse)(nil),             // 6: sdn.v1.CreateVPCResponse
	(*GetVPCRequest)(nil),                 // 7: sdn.v1.GetVPCRequest
	(*GetVPCResponse)(nil),                // 8: sdn.v1.GetVPCResponse
	(*DeleteVPCRequest)(nil),              // 9: sdn.v1.DeleteVPCRequest
	(*DeleteVPCResponse)(nil),             // 10: sdn.v1.DeleteVPCResponse
	(*ListSubnetsRequest)(nil),            // 11: sdn.v1.ListSubnetsRequest
	(*ListSubnetsResponse)(nil),           // 12: sdn.v1.ListSubnetsResponse
	(*CreateSubnetRequest)(nil),           // 13: sdn.v1.CreateSubnetRequest
	(*CreateSubnetResponse)(nil),          // 14: sdn.v1.CreateSubnetResponse
	(*GetSubnetRequest)(nil),              // 15: sdn.v1.GetSubnetRequest
	(*GetSubnetResponse)(nil),             // 16: sdn.v1.GetSubnetResponse
	(*DeleteSubnetRequest)(nil),           // 17: sdn.v1.DeleteSubnetRequest
	(*DeleteSubnetResponse)(nil),          // 18: sdn.v1.DeleteSubnetResponse
	(*ListRoutersRequest)(nil),            // 19: sdn.v1.ListRoutersRequest
	(*ListRoutersResponse)(nil),           // 20: sdn.v1.ListRoutersResponse
	(*CreateRouterRequest)(nil),           // 21: sdn.v1.CreateRouterRequest
	(*CreateRouterResponse)(nil),          // 22: sdn.v1.CreateRouterResponse
	(*GetRouterRequest)(nil),              // 23: sdn.v1.GetRouterRequest
	(*GetRouterResponse)(nil),             // 24: sdn.v1.GetRouterResponse
	(*DeleteRouterRequest)(nil),           // 25: sdn.v1.DeleteRouterRequest
	(*DeleteRouterResponse)(nil),          // 26: sdn.v1.DeleteRouterResponse
	(*ListRouterInterfacesRequest)(nil),   // 27: sdn.v1.ListRouterInterfacesRequest
	(*ListRouterInterfacesResponse)(nil),  // 28: sdn.v1.ListRouterInterfacesResponse
	(*CreateRouterInterfaceRequest)(nil),  // 29: sdn.v1.CreateRouterInterfaceRequest
	(*GetRouterInterfaceRequest)(nil),     // 30: sdn.v1.GetRouterInterfaceRequest
	(*GetRouterInterfaceResponse)(nil),    // 31: sdn.v1.GetRouterInterfaceResponse
	(*CreateRouterInterfaceResponse)(nil), // 32: sdn.v1.CreateRouterInterfaceResponse
	(*DeleteRouterInterfaceRequest)(nil),  // 33: sdn.v1.DeleteRouterInterfaceRequest
	(*DeleteRouterInterfaceResponse)(nil), // 34: sdn.v1.DeleteRouterInterfaceResponse
	(*ListStaticRoutesRequest)(nil),       // 35: sdn.v1.ListStaticRoutesRequest
	(*ListStaticRoutesResponse)(nil),      // 36: sdn.v1.ListStaticRoutesResponse
	(*CreateStaticRouteRequest)(nil),      // 37: sdn.v1.CreateStaticRouteRequest
	(*CreateStaticRouteResponse)(nil),     // 38: sdn.v1.CreateStaticRouteResponse
	(*GetStaticRouteRequest)(nil),         // 39: sdn.v1.GetStaticRouteRequest
	(*GetStaticRouteResponse)(nil),        // 40: sdn.v1.GetStaticRouteResponse
	(*DeleteStaticRouteRequest)(nil),      // 41: sdn.v1.DeleteStaticRouteRequest
	(*DeleteStaticRouteResponse)(nil),     // 42: sdn.v1.DeleteStaticRouteResponse
	(*ListPortsRequest)(nil),              // 43: sdn.v1.ListPortsRequest
	(*ListPortsResponse)(nil),             // 44: sdn.v1.ListPortsResponse
	(*CreatePortRequest)(nil),             // 45: sdn.v1.CreatePortRequest
	(*CreatePortResponse)(nil),            // 46: sdn.v1.CreatePortResponse
	(*GetPortRequest)(nil),                // 47: sdn.v1.GetPortRequest
	(*GetPortResponse)(nil),               // 48: sdn.v1.GetPortResponse
	(*UpdatePortRequest)(nil),             // 49: sdn.v1.UpdatePortRequest
	(*UpdatePortResponse)(nil),            // 50: sdn.v1.UpdatePortResponse
	(*DeletePortRequest)(nil),             // 51: sdn.v1.DeletePortRequest
	(*DeletePortResponse)(nil),            // 52: sdn.v1.DeletePortResponse
	(*ListSecurityGroupsRequest)(nil),     // 53: sdn.v1.ListSecurityGroupsRequest
	(*ListSecurityGroupsResponse)(nil),    // 54: sdn.v1.ListSecurityGroupsResponse
	(*CreateSecurityGroupRequest)(nil),    // 55: sdn.v1.CreateSecurityGroupRequest
	(*CreateSecurityGroupResponse)(nil),   // 56: sdn.v1.CreateSecurityGroupResponse
	(*GetSecurityGroupRequest)(nil),       // 57: sdn.v1.GetSecurityGroupRequest
	(*GetSecurityGroupResponse)(nil),      // 58: sdn.v1.GetSecurityGroupResponse
	(*UpdateSecurityGroupRequest)(nil),    // 59: sdn.v1.UpdateSecurityGroupRequest
	(*UpdateSecurityGroupResponse)(nil),   // 60: sdn.v1.UpdateSecurityGroupResponse
	(*DeleteSecurityGroupRequest)(nil),    // 61: sdn.v1.DeleteSecurityGroupRequest
	(*DeleteSecurityGroupResponse)(nil),   // 62: sdn.v1.DeleteSecurityGroupResponse
	(*ListSecurityRulesRequest)(nil),      // 63: sdn.v1.ListSecurityRulesRequest
	(*ListSecurityRulesResponse)(nil),     // 64: sdn.v1.ListSecurityRulesResponse
	(*CreateSecurityRuleRequest)(nil),     // 65: sdn.v1.CreateSecurityRuleRequest
	(*CreateSecurityRuleResponse)(nil),    // 66: sdn.v1.CreateSecurityRuleResponse
	(*GetSecurityRuleRequest)(nil),        // 67: sdn.v1.GetSecurityRuleRequest
	(*GetSecurityRuleResponse)(nil),       // 68: sdn.v1.GetSecurityRuleResponse
	(*DeleteSecurityRuleRequest)(nil),     // 69: sdn.v1.DeleteSecurityRuleRequest
	(*DeleteSecurityRuleResponse)(nil),    // 70: sdn.v1.DeleteSecurityRuleResponse
	(*ObjStatus)(nil),                     // 71: sdn.v1.ObjStatus
	(*VPCId)(nil),                         // 72: sdn.v1.VPCId
	(*VPC)(nil),                           // 73: sdn.v1.VPC
	(*SubnetId)(nil),                      // 74: sdn.v1.SubnetId
	(*Subnet)(nil),                        // 75: sdn.v1.Subnet
	(*RouterId)(nil),                      // 76: sdn.v1.RouterId
	(*Router)(nil),                        // 77: sdn.v1.Router
	(*RouterInterfaceId)(nil),             // 78: sdn.v1.RouterInterfaceId
	(*RouterInterface)(nil),               // 79: sdn.v1.RouterInterface
	(*StaticRouteId)(nil),                 // 80: sdn.v1.StaticRouteId
	(*StaticRoute)(nil),                   // 81: sdn.v1.StaticRoute
	(*PortId)(nil),                        // 82: sdn.v1.PortId
	(*Port)(nil),                          // 83: sdn.v1.Port
	(*SecurityGroupId)(nil),               // 84: sdn.v1.SecurityGroupId
	(*SecurityGroup)(nil),                 // 85: sdn.v1.SecurityGroup
	(*SecurityRuleId)(nil),                // 86: sdn.v1.SecurityRuleId
	(*SecurityRule)(nil),                  // 87: sdn.v1.SecurityRule
	(*PortRange)(nil),                     // 88: sdn.v1.PortRange
}
var file_api_sdn_v1_ovnnet_proto_depIdxs = []int32{
	72,  // 0: sdn.v1.ListVPCsResponse.vpc_ids:type_name -> sdn.v1.VPCId
	72,  // 1: sdn.v1.CreateVPCRequest.vpc_id:type_name -> sdn.v1.VPCId
	72,  // 2: sdn.v1.CreateVPCResponse.vpc_id:type_name -> sdn.v1.VPCId
	72,  // 3: sdn.v1.GetVPCRequest.vpc_id:type_name -> sdn.v1.VPCId
	73,  // 4: sdn.v1.GetVPCResponse.vpc:type_name -> sdn.v1.VPC
	72,  // 5: sdn.v1.DeleteVPCRequest.vpc_id:type_name -> sdn.v1.VPCId
	72,  // 6: sdn.v1.DeleteVPCResponse.vpc_id:type_name -> sdn.v1.VPCId
	74,  // 7: sdn.v1.ListSubnetsResponse.subnet_ids:type_name -> sdn.v1.SubnetId
	74,  // 8: sdn.v1.CreateSubnetRequest.subnet_id:type_name -> sdn.v1.SubnetId
	72,  // 9: sdn.v1.CreateSubnetRequest.vpc_id:type_name -> sdn.v1.VPCId
	74,  // 10: sdn.v1.CreateSubnetResponse.subnet_id:type_name -> sdn.v1.SubnetId
	74,  // 11: sdn.v1.GetSubnetRequest.subnet_id:type_name -> sdn.v1.SubnetId
	75,  // 12: sdn.v1.GetSubnetResponse.subnet:type_name -> sdn.v1.Subnet
	74,  // 13: sdn.v1.DeleteSubnetRequest.subnet_id:type_name -> sdn.v1.SubnetId
	74,  // 14: sdn.v1.DeleteSubnetResponse.subnet_id:type_name -> sdn.v1.SubnetId
	76,  // 15: sdn.v1.ListRoutersResponse.router_ids:type_name -> sdn.v1.RouterId
	76,  // 16: sdn.v1.CreateRouterRequest.router_id:type_name -> sdn.v1.RouterId
	72,  // 17: sdn.v1.CreateRouterRequest.vpc_id:type_name -> sdn.v1.VPCId
	76,  // 18: sdn.v1.CreateRouterResponse.router_id:type_name -> sdn.v1.RouterId
	76,  // 19: sdn.v1.GetRouterRequest.router_id:type_name -> sdn.v1.RouterId
	77,  // 20: sdn.v1.GetRouterResponse.router:type_name -> sdn.v1.Router
	76,  // 21: sdn.v1.DeleteRouterRequest.router_id:type_name -> sdn.v1.RouterId
	76,  // 22: sdn.v1.DeleteRouterResponse.router_id:type_name -> sdn.v1.RouterId
	78,  // 23: sdn.v1.ListRouterInterfacesResponse.router_interface_ids:type_name -> sdn.v1.RouterInterfaceId
	78,  // 24: sdn.v1.CreateRouterInterfaceRequest.router_interface_id:type_name -> sdn.v1.RouterInterfaceId
	76,  // 25: sdn.v1.CreateRouterInterfaceRequest.router_id:type_name -> sdn.v1.RouterId
	74,  // 26: sdn.v1.CreateRouterInterfaceRequest.subnet_id:type_name -> sdn.v1.SubnetId
	78,  // 27: sdn.v1.GetRouterInterfaceRequest.router_interface_id:type_name -> sdn.v1.RouterInterfaceId
	79,  // 28: sdn.v1.GetRouterInterfaceResponse.router_interface:type_name -> sdn.v1.RouterInterface
	78,  // 29: sdn.v1.CreateRouterInterfaceResponse.router_interface_id:type_name -> sdn.v1.RouterInterfaceId
	78,  // 30: sdn.v1.DeleteRouterInterfaceRequest.router_interface_id:type_name -> sdn.v1.RouterInterfaceId
	78,  // 31: sdn.v1.DeleteRouterInterfaceResponse.router_interface_id:type_name -> sdn.v1.RouterInterfaceId
	80,  // 32: sdn.v1.ListStaticRoutesResponse.static_route_ids:type_name -> sdn.v1.StaticRouteId
	80,  // 33: sdn.v1.CreateStaticRouteRequest.static_route_id:type_name -> sdn.v1.StaticRouteId
	76,  // 34: sdn.v1.CreateStaticRouteRequest.router_id:type_name -> sdn.v1.RouterId
	80,  // 35: sdn.v1.CreateStaticRouteResponse.static_route_id:type_name -> sdn.v1.StaticRouteId
	80,  // 36: sdn.v1.GetStaticRouteRequest.static_route_id:type_name -> sdn.v1.StaticRouteId
	81,  // 37: sdn.v1.GetStaticRouteResponse.static_route:type_name -> sdn.v1.StaticRoute
	80,  // 38: sdn.v1.DeleteStaticRouteRequest.static_route_id:type_name -> sdn.v1.StaticRouteId
	80,  // 39: sdn.v1.DeleteStaticRouteResponse.static_route_id:type_name -> sdn.v1.StaticRouteId
	82,  // 40: sdn.v1.ListPortsResponse.port_ids:type_name -> sdn.v1.PortId
	82,  // 41: sdn.v1.CreatePortRequest.port_id:type_name -> sdn.v1.PortId
	74,  // 42: sdn.v1.CreatePortRequest.subnet_id:type_name -> sdn.v1.SubnetId
	82,  // 43: sdn.v1.CreatePortResponse.port_id:type_name -> sdn.v1.PortId
	82,  // 44: sdn.v1.GetPortRequest.port_id:type_name -> sdn.v1.PortId
	83,  // 45: sdn.v1.GetPortResponse.port:type_name -> sdn.v1.Port
	82,  // 46: sdn.v1.UpdatePortRequest.port_id:type_name -> sdn.v1.PortId
	82,  // 47: sdn.v1.UpdatePortResponse.port_id:type_name -> sdn.v1.PortId
	82,  // 48: sdn.v1.DeletePortRequest.port_id:type_name -> sdn.v1.PortId
	82,  // 49: sdn.v1.DeletePortResponse.port_id:type_name -> sdn.v1.PortId
	84,  // 50: sdn.v1.ListSecurityGroupsResponse.security_group_ids:type_name -> sdn.v1.SecurityGroupId
	84,  // 51: sdn.v1.CreateSecurityGroupRequest.security_group_id:type_name -> sdn.v1.SecurityGroupId
	86,  // 52: sdn.v1.CreateSecurityGroupRequest.security_rules:type_name -> sdn.v1.SecurityRuleId
	82,  // 53: sdn.v1.CreateSecurityGroupRequest.port_ids:type_name -> sdn.v1.PortId
	74,  // 54: sdn.v1.CreateSecurityGroupRequest.subnet_ids:type_name -> sdn.v1.SubnetId
	72,  // 55: sdn.v1.CreateSecurityGroupRequest.vpc_id:type_name -> sdn.v1.VPCId
	84,  // 56: sdn.v1.CreateSecurityGroupResponse.security_group_id:type_name -> sdn.v1.SecurityGroupId
	84,  // 57: sdn.v1.GetSecurityGroupRequest.security_group_id:type_name -> sdn.v1.SecurityGroupId
	85,  // 58: sdn.v1.GetSecurityGroupResponse.security_group:type_name -> sdn.v1.SecurityGroup
	84,  // 59: sdn.v1.UpdateSecurityGroupRequest.security_group_id:type_name -> sdn.v1.SecurityGroupId
	86,  // 60: sdn.v1.UpdateSecurityGroupRequest.security_rules:type_name -> sdn.v1.SecurityRuleId
	82,  // 61: sdn.v1.UpdateSecurityGroupRequest.port_ids:type_name -> sdn.v1.PortId
	74,  // 62: sdn.v1.UpdateSecurityGroupRequest.subnet_ids:type_name -> sdn.v1.SubnetId
	84,  // 63: sdn.v1.UpdateSecurityGroupResponse.security_group_id:type_name -> sdn.v1.SecurityGroupId
	84,  // 64: sdn.v1.DeleteSecurityGroupRequest.security_group_id:type_name -> sdn.v1.SecurityGroupId
	84,  // 65: sdn.v1.DeleteSecurityGroupResponse.security_group_id:type_name -> sdn.v1.SecurityGroupId
	86,  // 66: sdn.v1.ListSecurityRulesResponse.security_rule_ids:type_name -> sdn.v1.SecurityRuleId
	86,  // 67: sdn.v1.CreateSecurityRuleRequest.security_rule_id:type_name -> sdn.v1.SecurityRuleId
	1,   // 68: sdn.v1.CreateSecurityRuleRequest.direction:type_name -> sdn.v1.Direction
	0,   // 69: sdn.v1.CreateSecurityRuleRequest.protocol:type_name -> sdn.v1.Protocol
	88,  // 70: sdn.v1.CreateSecurityRuleRequest.source_port_range:type_name -> sdn.v1.PortRange
	88,  // 71: sdn.v1.CreateSecurityRuleRequest.destination_port_range:type_name -> sdn.v1.PortRange
	2,   // 72: sdn.v1.CreateSecurityRuleRequest.action:type_name -> sdn.v1.SecurityAction
	72,  // 73: sdn.v1.CreateSecurityRuleRequest.vpc_id:type_name -> sdn.v1.VPCId
	86,  // 74: sdn.v1.CreateSecurityRuleResponse.security_rule_id:type_name -> sdn.v1.SecurityRuleId
	86,  // 75: sdn.v1.GetSecurityRuleRequest.security_rule_id:type_name -> sdn.v1.SecurityRuleId
	87,  // 76: sdn.v1.GetSecurityRuleResponse.security_rule:type_name -> sdn.v1.SecurityRule
	86,  // 77: sdn.v1.DeleteSecurityRuleRequest.security_rule_id:type_name -> sdn.v1.SecurityRuleId
	86,  // 78: sdn.v1.DeleteSecurityRuleResponse.security_rule_id:type_name -> sdn.v1.SecurityRuleId
	72,  // 79: sdn.v1.VPC.id:type_name -> sdn.v1.VPCId
	76,  // 80: sdn.v1.VPC.routers:type_name -> sdn.v1.RouterId
	74,  // 81: sdn.v1.VPC.subnets:type_name -> sdn.v1.SubnetId
	71,  // 82: sdn.v1.VPC.status:type_name -> sdn.v1.ObjStatus
	74,  // 83: sdn.v1.Subnet.id:type_name -> sdn.v1.SubnetId
	72,  // 84: sdn.v1.Subnet.vpc_id:type_name -> sdn.v1.VPCId
	71,  // 85: sdn.v1.Subnet.status:type_name -> sdn.v1.ObjStatus
	76,  // 86: sdn.v1.Router.id:type_name -> sdn.v1.RouterId
	72,  // 87: sdn.v1.Router.vpc_id:type_name -> sdn.v1.VPCId
	71,  // 88: sdn.v1.Router.status:type_name -> sdn.v1.ObjStatus
	78,  // 89: sdn.v1.RouterInterface.id:type_name -> sdn.v1.RouterInterfaceId
	76,  // 90: sdn.v1.RouterInterface.router_id:type_name -> sdn.v1.RouterId
	74,  // 91: sdn.v1.RouterInterface.subnet_id:type_name -> sdn.v1.SubnetId
	71,  // 92: sdn.v1.RouterInterface.status:type_name -> sdn.v1.ObjStatus
	80,  // 93: sdn.v1.StaticRoute.id:type_name -> sdn.v1.StaticRouteId
	76,  // 94: sdn.v1.StaticRoute.router_id:type_name -> sdn.v1.RouterId
	71,  // 95: sdn.v1.StaticRoute.status:type_name -> sdn.v1.ObjStatus
	82,  // 96: sdn.v1.Port.id:type_name -> sdn.v1.PortId
	74,  // 97: sdn.v1.Port.subnet_id:type_name -> sdn.v1.SubnetId
	71,  // 98: sdn.v1.Port.status:type_name -> sdn.v1.ObjStatus
	84,  // 99: sdn.v1.SecurityGroup.id:type_name -> sdn.v1.SecurityGroupId
	86,  // 100: sdn.v1.SecurityGroup.security_rule_ids:type_name -> sdn.v1.SecurityRuleId
	82,  // 101: sdn.v1.SecurityGroup.port_ids:type_name -> sdn.v1.PortId
	74,  // 102: sdn.v1.SecurityGroup.subnet_ids:type_name -> sdn.v1.SubnetId
	72,  // 103: sdn.v1.SecurityGroup.vpc_id:type_name -> sdn.v1.VPCId
	71,  // 104: sdn.v1.SecurityGroup.status:type_name -> sdn.v1.ObjStatus
	86,  // 105: sdn.v1.SecurityRule.id:type_name -> sdn.v1.SecurityRuleId
	1,   // 106: sdn.v1.SecurityRule.direction:type_name -> sdn.v1.Direction
	0,   // 107: sdn.v1.SecurityRule.protocol:type_name -> sdn.v1.Protocol
	88,  // 108: sdn.v1.SecurityRule.source_port_range:type_name -> sdn.v1.PortRange
	88,  // 109: sdn.v1.SecurityRule.destination_port_range:type_name -> sdn.v1.PortRange
	2,   // 110: sdn.v1.SecurityRule.action:type_name -> sdn.v1.SecurityAction
	72,  // 111: sdn.v1.SecurityRule.vpc_id:type_name -> sdn.v1.VPCId
	71,  // 112: sdn.v1.SecurityRule.status:type_name -> sdn.v1.ObjStatus
	3,   // 113: sdn.v1.Ovnnet.ListVPCs:input_type -> sdn.v1.ListVPCsRequest
	5,   // 114: sdn.v1.Ovnnet.CreateVPC:input_type -> sdn.v1.CreateVPCRequest
	7,   // 115: sdn.v1.Ovnnet.GetVPC:input_type -> sdn.v1.GetVPCRequest
	9,   // 116: sdn.v1.Ovnnet.DeleteVPC:input_type -> sdn.v1.DeleteVPCRequest
	11,  // 117: sdn.v1.Ovnnet.ListSubnets:input_type -> sdn.v1.ListSubnetsRequest
	13,  // 118: sdn.v1.Ovnnet.CreateSubnet:input_type -> sdn.v1.CreateSubnetRequest
	15,  // 119: sdn.v1.Ovnnet.GetSubnet:input_type -> sdn.v1.GetSubnetRequest
	17,  // 120: sdn.v1.Ovnnet.DeleteSubnet:input_type -> sdn.v1.DeleteSubnetRequest
	19,  // 121: sdn.v1.Ovnnet.ListRouters:input_type -> sdn.v1.ListRoutersRequest
	21,  // 122: sdn.v1.Ovnnet.CreateRouter:input_type -> sdn.v1.CreateRouterRequest
	23,  // 123: sdn.v1.Ovnnet.GetRouter:input_type -> sdn.v1.GetRouterRequest
	25,  // 124: sdn.v1.Ovnnet.DeleteRouter:input_type -> sdn.v1.DeleteRouterRequest
	27,  // 125: sdn.v1.Ovnnet.ListRouterInterfaces:input_type -> sdn.v1.ListRouterInterfacesRequest
	29,  // 126: sdn.v1.Ovnnet.CreateRouterInterface:input_type -> sdn.v1.CreateRouterInterfaceRequest
	30,  // 127: sdn.v1.Ovnnet.GetRouterInterface:input_type -> sdn.v1.GetRouterInterfaceRequest
	33,  // 128: sdn.v1.Ovnnet.DeleteRouterInterface:input_type -> sdn.v1.DeleteRouterInterfaceRequest
	35,  // 129: sdn.v1.Ovnnet.ListStaticRoutes:input_type -> sdn.v1.ListStaticRoutesRequest
	37,  // 130: sdn.v1.Ovnnet.CreateStaticRoute:input_type -> sdn.v1.CreateStaticRouteRequest
	39,  // 131: sdn.v1.Ovnnet.GetStaticRoute:input_type -> sdn.v1.GetStaticRouteRequest
	41,  // 132: sdn.v1.Ovnnet.DeleteStaticRoute:input_type -> sdn.v1.DeleteStaticRouteRequest
	43,  // 133: sdn.v1.Ovnnet.ListPorts:input_type -> sdn.v1.ListPortsRequest
	45,  // 134: sdn.v1.Ovnnet.CreatePort:input_type -> sdn.v1.CreatePortRequest
	47,  // 135: sdn.v1.Ovnnet.GetPort:input_type -> sdn.v1.GetPortRequest
	49,  // 136: sdn.v1.Ovnnet.UpdatePort:input_type -> sdn.v1.UpdatePortRequest
	51,  // 137: sdn.v1.Ovnnet.DeletePort:input_type -> sdn.v1.DeletePortRequest
	53,  // 138: sdn.v1.Ovnnet.ListSecurityGroups:input_type -> sdn.v1.ListSecurityGroupsRequest
	55,  // 139: sdn.v1.Ovnnet.CreateSecurityGroup:input_type -> sdn.v1.CreateSecurityGroupRequest
	57,  // 140: sdn.v1.Ovnnet.GetSecurityGroup:input_type -> sdn.v1.GetSecurityGroupRequest
	59,  // 141: sdn.v1.Ovnnet.UpdateSecurityGroup:input_type -> sdn.v1.UpdateSecurityGroupRequest
	61,  // 142: sdn.v1.Ovnnet.DeleteSecurityGroup:input_type -> sdn.v1.DeleteSecurityGroupRequest
	63,  // 143: sdn.v1.Ovnnet.ListSecurityRules:input_type -> sdn.v1.ListSecurityRulesRequest
	65,  // 144: sdn.v1.Ovnnet.CreateSecurityRule:input_type -> sdn.v1.CreateSecurityRuleRequest
	67,  // 145: sdn.v1.Ovnnet.GetSecurityRule:input_type -> sdn.v1.GetSecurityRuleRequest
	69,  // 146: sdn.v1.Ovnnet.DeleteSecurityRule:input_type -> sdn.v1.DeleteSecurityRuleRequest
	4,   // 147: sdn.v1.Ovnnet.ListVPCs:output_type -> sdn.v1.ListVPCsResponse
	6,   // 148: sdn.v1.Ovnnet.CreateVPC:output_type -> sdn.v1.CreateVPCResponse
	8,   // 149: sdn.v1.Ovnnet.GetVPC:output_type -> sdn.v1.GetVPCResponse
	10,  // 150: sdn.v1.Ovnnet.DeleteVPC:output_type -> sdn.v1.DeleteVPCResponse
	12,  // 151: sdn.v1.Ovnnet.ListSubnets:output_type -> sdn.v1.ListSubnetsResponse
	14,  // 152: sdn.v1.Ovnnet.CreateSubnet:output_type -> sdn.v1.CreateSubnetResponse
	16,  // 153: sdn.v1.Ovnnet.GetSubnet:output_type -> sdn.v1.GetSubnetResponse
	18,  // 154: sdn.v1.Ovnnet.DeleteSubnet:output_type -> sdn.v1.DeleteSubnetResponse
	20,  // 155: sdn.v1.Ovnnet.ListRouters:output_type -> sdn.v1.ListRoutersResponse
	22,  // 156: sdn.v1.Ovnnet.CreateRouter:output_type -> sdn.v1.CreateRouterResponse
	24,  // 157: sdn.v1.Ovnnet.GetRouter:output_type -> sdn.v1.GetRouterResponse
	26,  // 158: sdn.v1.Ovnnet.DeleteRouter:output_type -> sdn.v1.DeleteRouterResponse
	28,  // 159: sdn.v1.Ovnnet.ListRouterInterfaces:output_type -> sdn.v1.ListRouterInterfacesResponse
	32,  // 160: sdn.v1.Ovnnet.CreateRouterInterface:output_type -> sdn.v1.CreateRouterInterfaceResponse
	31,  // 161: sdn.v1.Ovnnet.GetRouterInterface:output_type -> sdn.v1.GetRouterInterfaceResponse
	34,  // 162: sdn.v1.Ovnnet.DeleteRouterInterface:output_type -> sdn.v1.DeleteRouterInterfaceResponse
	36,  // 163: sdn.v1.Ovnnet.ListStaticRoutes:output_type -> sdn.v1.ListStaticRoutesResponse
	38,  // 164: sdn.v1.Ovnnet.CreateStaticRoute:output_type -> sdn.v1.CreateStaticRouteResponse
	40,  // 165: sdn.v1.Ovnnet.GetStaticRoute:output_type -> sdn.v1.GetStaticRouteResponse
	42,  // 166: sdn.v1.Ovnnet.DeleteStaticRoute:output_type -> sdn.v1.DeleteStaticRouteResponse
	44,  // 167: sdn.v1.Ovnnet.ListPorts:output_type -> sdn.v1.ListPortsResponse
	46,  // 168: sdn.v1.Ovnnet.CreatePort:output_type -> sdn.v1.CreatePortResponse
	48,  // 169: sdn.v1.Ovnnet.GetPort:output_type -> sdn.v1.GetPortResponse
	50,  // 170: sdn.v1.Ovnnet.UpdatePort:output_type -> sdn.v1.UpdatePortResponse
	52,  // 171: sdn.v1.Ovnnet.DeletePort:output_type -> sdn.v1.DeletePortResponse
	54,  // 172: sdn.v1.Ovnnet.ListSecurityGroups:output_type -> sdn.v1.ListSecurityGroupsResponse
	56,  // 173: sdn.v1.Ovnnet.CreateSecurityGroup:output_type -> sdn.v1.CreateSecurityGroupResponse
	58,  // 174: sdn.v1.Ovnnet.GetSecurityGroup:output_type -> sdn.v1.GetSecurityGroupResponse
	60,  // 175: sdn.v1.Ovnnet.UpdateSecurityGroup:output_type -> sdn.v1.UpdateSecurityGroupResponse
	62,  // 176: sdn.v1.Ovnnet.DeleteSecurityGroup:output_type -> sdn.v1.DeleteSecurityGroupResponse
	64,  // 177: sdn.v1.Ovnnet.ListSecurityRules:output_type -> sdn.v1.ListSecurityRulesResponse
	66,  // 178: sdn.v1.Ovnnet.CreateSecurityRule:output_type -> sdn.v1.CreateSecurityRuleResponse
	68,  // 179: sdn.v1.Ovnnet.GetSecurityRule:output_type -> sdn.v1.GetSecurityRuleResponse
	70,  // 180: sdn.v1.Ovnnet.DeleteSecurityRule:output_type -> sdn.v1.DeleteSecurityRuleResponse
	147, // [147:181] is the sub-list for method output_type
	113, // [113:147] is the sub-list for method input_type
	113, // [113:113] is the sub-list for extension type_name
	113, // [113:113] is the sub-list for extension extendee
	0,   // [0:113] is the sub-list for field type_name
}

func init() { file_api_sdn_v1_ovnnet_proto_init() }
func file_api_sdn_v1_ovnnet_proto_init() {
	if File_api_sdn_v1_ovnnet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_sdn_v1_ovnnet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVPCsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVPCsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubnetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubnetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubnetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubnetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubnetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubnetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubnetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubnetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoutersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRouterInterfacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRouterInterfacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouterInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouterInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRouterInterfaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRouterInterfaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouterInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRouterInterfaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStaticRoutesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStaticRoutesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaticRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStaticRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaticRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaticRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStaticRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStaticRouteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPortsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPortsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecurityGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecurityGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSecurityGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSecurityGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSecurityGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSecurityGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSecurityGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSecurityGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecurityRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecurityRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSecurityRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSecurityRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSecurityRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSecurityRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPCId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubnetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouterId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Router); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouterInterfaceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouterInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticRouteId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StaticRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityGroupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityRuleId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sdn_v1_ovnnet_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_sdn_v1_ovnnet_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_api_sdn_v1_ovnnet_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_api_sdn_v1_ovnnet_proto_msgTypes[47].OneofWrappers = []interface{}{}
	file_api_sdn_v1_ovnnet_proto_msgTypes[62].OneofWrappers = []interface{}{}
	file_api_sdn_v1_ovnnet_proto_msgTypes[80].OneofWrappers = []interface{}{}
	file_api_sdn_v1_ovnnet_proto_msgTypes[84].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_sdn_v1_ovnnet_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   86,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_sdn_v1_ovnnet_proto_goTypes,
		DependencyIndexes: file_api_sdn_v1_ovnnet_proto_depIdxs,
		EnumInfos:         file_api_sdn_v1_ovnnet_proto_enumTypes,
		MessageInfos:      file_api_sdn_v1_ovnnet_proto_msgTypes,
	}.Build()
	File_api_sdn_v1_ovnnet_proto = out.File
	file_api_sdn_v1_ovnnet_proto_rawDesc = nil
	file_api_sdn_v1_ovnnet_proto_goTypes = nil
	file_api_sdn_v1_ovnnet_proto_depIdxs = nil
}
