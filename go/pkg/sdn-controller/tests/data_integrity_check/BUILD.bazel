# INTEL CONFIDENTIAL
# Copyright (C) 2023 Intel Corporation
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("//build/docker:docker.bzl", "idc_go_image")

go_library(
    name = "data_integrity_check_lib",
    srcs = ["dataintegritycheck.go"],
    importpath = "github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/sdn-controller/tests/data_integrity_check",
    visibility = ["//visibility:private"],
    deps = [
        "//go/pkg/k8s/apis/metal3.io/v1alpha1",
        "//go/pkg/k8s/apis/private.cloud/v1alpha1",
        "//go/pkg/log",
        "//go/pkg/sdn-controller/api/v1alpha1",
        "//go/pkg/sdn-controller/pkg/switch-clients",
        "//go/pkg/sdn-controller/pkg/utils",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/util/runtime",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//plugin/pkg/client/auth",
        "@io_k8s_sigs_controller_runtime//pkg/client",
    ],
)

go_binary(
    name = "data_integrity_check",
    embed = [":data_integrity_check_lib"],
    visibility = ["//visibility:public"],
)

idc_go_image(
    name = "sdn-integrity-checker_image_1",
    embed = [":data_integrity_check_lib"],
    visibility = ["//visibility:public"],
)

# Add the intel-certs layer to the generated image.
container_image(
    name = "sdn-integrity-checker_image",
    base = ":sdn-integrity-checker_image_1",
    layers = ["//go/certs:intel_certs"],
    visibility = ["//visibility:public"],
)
