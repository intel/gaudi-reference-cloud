# INTEL CONFIDENTIAL
# Copyright (C) 2023 Intel Corporation
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "controller",
    srcs = [
        "addon_controller.go",
        "addon_provider.go",
        "cluster_controller.go",
        "config.go",
        "kubernetes_provider.go",
        "node_provider.go",
        "nodegroup_controller.go",
        "utils.go",
    ],
    importpath = "github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/kubernetes_operator/internal/controller",
    visibility = ["//go/pkg/kubernetes_operator:__subpackages__"],
    deps = [
        "//go/pkg/firewall_operator/api/v1alpha1",
        "//go/pkg/grpcutil",
        "//go/pkg/grpcutil/grpclog",
        "//go/pkg/ilb_operator/api/v1alpha1",
        "//go/pkg/kubernetes_operator/addon_provider/helm",
        "//go/pkg/kubernetes_operator/addon_provider/kubectl",
        "//go/pkg/kubernetes_operator/api/v1alpha1",
        "//go/pkg/kubernetes_operator/errgroup",
        "//go/pkg/kubernetes_operator/etcd",
        "//go/pkg/kubernetes_operator/kubernetes_provider/iks",
        "//go/pkg/kubernetes_operator/node_provider/compute",
        "//go/pkg/kubernetes_operator/node_provider/harvester",
        "//go/pkg/kubernetes_operator/utils",
        "//go/pkg/log",
        "//go/pkg/log/logkeys",
        "//go/pkg/pb",
        "@com_github_google_uuid//:uuid",
        "@com_github_minio_minio_go_v7//:minio-go",
        "@com_github_minio_minio_go_v7//pkg/credentials",
        "@com_github_pkg_errors//:errors",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/equality",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_apimachinery//pkg/util/validation",
        "@io_k8s_apiserver//pkg/apis/config/v1:config",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//rest",
        "@io_k8s_client_go//util/retry",
        "@io_k8s_sigs_controller_runtime//:controller-runtime",
        "@io_k8s_sigs_controller_runtime//pkg/builder",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@io_k8s_sigs_controller_runtime//pkg/controller",
        "@io_k8s_sigs_controller_runtime//pkg/controller/controllerutil",
        "@io_k8s_sigs_controller_runtime//pkg/log",
        "@io_k8s_sigs_controller_runtime//pkg/predicate",
        "@io_k8s_sigs_yaml//:yaml",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
    ],
)

go_test(
    name = "controller_test",
    srcs = [
        "cluster_controller_test.go",
        "nodegroup_controller_test.go",
        "suite_test.go",
    ],
    embed = [":controller"],
    deps = [
        "//go/pkg/kubernetes_operator/api/v1alpha1",
        "//go/pkg/pb",
        "@com_github_golang_mock//gomock",
        "@com_github_onsi_ginkgo_v2//:ginkgo",
        "@com_github_onsi_gomega//:gomega",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apiserver//pkg/apis/config/v1:config",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//rest",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@io_k8s_sigs_controller_runtime//pkg/envtest",
        "@io_k8s_sigs_controller_runtime//pkg/log",
        "@io_k8s_sigs_controller_runtime//pkg/log/zap",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@tools_gotest_v3//assert",
        "@tools_gotest_v3//assert/cmp",
    ],
)
