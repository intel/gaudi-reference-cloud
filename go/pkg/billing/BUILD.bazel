# INTEL CONFIDENTIAL
# Copyright (C) 2023 Intel Corporation
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "billing",
    srcs = [
        "account.go",
        "billing.go",
        "billing_test_util.go",
        "cloud_credit_expiry.go",
        "cloud_credit_usage.go",
        "cloud_credit_usage_report.go",
        "config.go",
        "coupon.go",
        "credit.go",
        "credits_installer.go",
        "data_validators.go",
        "driverclient.go",
        "driverproxy.go",
        "instances_deactivation.go",
        "mapped_errors.go",
        "notification_client.go",
        "scheduler_ops.go",
        "services_termination.go",
        "sync.go",
        "testing.go",
        "usage.go",
        "util.go",
    ],
    importpath = "github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/billing",
    visibility = ["//visibility:public"],
    deps = [
        "//go/pkg/billing_common",
        "//go/pkg/billing_driver_aria",
        "//go/pkg/billing_driver_intel",
        "//go/pkg/billing_driver_standard",
        "//go/pkg/cloudaccount",
        "//go/pkg/grpcutil",
        "//go/pkg/log",
        "//go/pkg/manageddb",
        "//go/pkg/metering/tests",
        "//go/pkg/notification_gateway",
        "//go/pkg/observability",
        "//go/pkg/pb",
        "//go/pkg/protodb",
        "//go/pkg/usage",
        "@com_github_go_logr_logr//:logr",
        "@com_github_golang_protobuf//ptypes/empty",
        "@com_github_google_uuid//:uuid",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//reflection",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_golang_x_exp//slices",
    ],
)

go_test(
    name = "billing_test",
    srcs = [
        "account_test.go",
        "billing_test.go",
        "cloud_credit_expiry_test.go",
        "cloud_credit_usage_report_test.go",
        "cloud_credit_usage_test.go",
        "coupon_test.go",
        "credit_test.go",
        "credits_installer_test.go",
        "notifications_test.go",
        "option_test.go",
        "payment_test.go",
        "scheduler_ops_test.go",
        "services_termination_test.go",
        "sync_test.go",
        "usage_test.go",
    ],
    data = ["//go/svc/billing_driver_aria:billing-aria-conf"],
    embed = [":billing"],
    env = {
        "IDC_TEST_CONFIG_DIR": "$(location //go/svc/billing_driver_aria:billing-aria-conf)",
    },
    deps = [
        "//go/pkg/billing_common",
        "//go/pkg/billing_driver_aria",
        "//go/pkg/billing_driver_aria/config",
        "//go/pkg/billing_driver_intel",
        "//go/pkg/billing_driver_standard",
        "//go/pkg/cloudaccount",
        "//go/pkg/log",
        "//go/pkg/metering/db/query",
        "//go/pkg/metering/server",
        "//go/pkg/notification_gateway",
        "//go/pkg/pb",
        "//go/pkg/usage",
        "@com_github_data_dog_go_sqlmock//:go-sqlmock",
        "@com_github_golang_mock//gomock",
        "@com_github_google_uuid//:uuid",
        "@com_github_stretchr_testify//assert",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@tools_gotest//assert",
    ],
)
