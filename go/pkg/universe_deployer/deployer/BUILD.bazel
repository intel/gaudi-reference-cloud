# INTEL CONFIDENTIAL
# Copyright (C) 2023 Intel Corporation
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "deployer",
    srcs = [
        "argo_cd.go",
        "builder_pusher.go",
        "deployer.go",
        "git.go",
        "gitea.go",
        "helmfile.go",
        "k8s.go",
        "manifests.go",
        "secrets.go",
        "util.go",
        "vault.go",
    ],
    data = [
        "collect_k8s_logs.sh",
        "//build/environments:vault-jwk-validation-public-keys",
        "//deployment:argo-cd-resources_chart_version",
        "//deployment:debug-tools_chart_version",
        "//deployment:universe_deployer_common",
        "//deployment/argocd:universe_deployer_common",
        "//deployment/helmfile:universe_deployer_common",
        "//go/pkg/cloudaccount_enroll:configdata",
        "//go/pkg/observability:configdata",
        "//hack:generate-vault-pki-cert",
        "@helm3_linux_amd64//:helm",
        "@helmfile_linux_amd64//:helmfile",
        "@jq_linux_amd64_file//file",
        "@kind_linux_amd64//file",
        "@kubectl_linux_amd64//file",
        "@vault_linux_amd64//:vault",
        "@yq_linux_amd64_file//file",
    ],
    importpath = "github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/universe_deployer/deployer",
    visibility = ["//visibility:public"],
    deps = [
        "//go/pkg/log",
        "//go/pkg/tools/k8s",
        "//go/pkg/universe_deployer/artifactory",
        "//go/pkg/universe_deployer/builder",
        "//go/pkg/universe_deployer/env_config/types",
        "//go/pkg/universe_deployer/filepaths",
        "//go/pkg/universe_deployer/git_pusher",
        "//go/pkg/universe_deployer/k8s_provisioner/kind",
        "//go/pkg/universe_deployer/manifests_generator",
        "//go/pkg/universe_deployer/multi_version_manifests_generator",
        "//go/pkg/universe_deployer/pusher",
        "//go/pkg/universe_deployer/universe_config",
        "//go/pkg/universe_deployer/util",
        "@com_github_phayes_freeport//:freeport",
        "@com_github_sethvargo_go_retry//:go-retry",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//batch/v1:batch",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//rest",
        "@io_k8s_client_go//util/retry",
        "@io_k8s_sigs_controller_runtime//pkg/client",
    ],
)
