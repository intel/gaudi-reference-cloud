/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoNetworkInterface struct for ProtoNetworkInterface
type ProtoNetworkInterface struct {
	// Name of the network interface as known by the operating system. Not implemented.
	Name *string `json:"name,omitempty"`
	// Name of the VNet that the network interface connects to.
	VNet *string `json:"vNet,omitempty"`
}

// NewProtoNetworkInterface instantiates a new ProtoNetworkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoNetworkInterface() *ProtoNetworkInterface {
	this := ProtoNetworkInterface{}
	return &this
}

// NewProtoNetworkInterfaceWithDefaults instantiates a new ProtoNetworkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoNetworkInterfaceWithDefaults() *ProtoNetworkInterface {
	this := ProtoNetworkInterface{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProtoNetworkInterface) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoNetworkInterface) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProtoNetworkInterface) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProtoNetworkInterface) SetName(v string) {
	o.Name = &v
}

// GetVNet returns the VNet field value if set, zero value otherwise.
func (o *ProtoNetworkInterface) GetVNet() string {
	if o == nil || isNil(o.VNet) {
		var ret string
		return ret
	}
	return *o.VNet
}

// GetVNetOk returns a tuple with the VNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoNetworkInterface) GetVNetOk() (*string, bool) {
	if o == nil || isNil(o.VNet) {
		return nil, false
	}
	return o.VNet, true
}

// HasVNet returns a boolean if a field has been set.
func (o *ProtoNetworkInterface) HasVNet() bool {
	if o != nil && !isNil(o.VNet) {
		return true
	}

	return false
}

// SetVNet gets a reference to the given string and assigns it to the VNet field.
func (o *ProtoNetworkInterface) SetVNet(v string) {
	o.VNet = &v
}

func (o ProtoNetworkInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.VNet) {
		toSerialize["vNet"] = o.VNet
	}
	return json.Marshal(toSerialize)
}

type NullableProtoNetworkInterface struct {
	value *ProtoNetworkInterface
	isSet bool
}

func (v NullableProtoNetworkInterface) Get() *ProtoNetworkInterface {
	return v.value
}

func (v *NullableProtoNetworkInterface) Set(val *ProtoNetworkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoNetworkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoNetworkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoNetworkInterface(val *ProtoNetworkInterface) *NullableProtoNetworkInterface {
	return &NullableProtoNetworkInterface{value: val, isSet: true}
}

func (v NullableProtoNetworkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoNetworkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
