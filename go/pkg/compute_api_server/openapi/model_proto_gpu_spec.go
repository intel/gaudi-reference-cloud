/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoGpuSpec struct for ProtoGpuSpec
type ProtoGpuSpec struct {
	ModelName *string `json:"modelName,omitempty"`
	Count     *int32  `json:"count,omitempty"`
}

// NewProtoGpuSpec instantiates a new ProtoGpuSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoGpuSpec() *ProtoGpuSpec {
	this := ProtoGpuSpec{}
	return &this
}

// NewProtoGpuSpecWithDefaults instantiates a new ProtoGpuSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoGpuSpecWithDefaults() *ProtoGpuSpec {
	this := ProtoGpuSpec{}
	return &this
}

// GetModelName returns the ModelName field value if set, zero value otherwise.
func (o *ProtoGpuSpec) GetModelName() string {
	if o == nil || isNil(o.ModelName) {
		var ret string
		return ret
	}
	return *o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoGpuSpec) GetModelNameOk() (*string, bool) {
	if o == nil || isNil(o.ModelName) {
		return nil, false
	}
	return o.ModelName, true
}

// HasModelName returns a boolean if a field has been set.
func (o *ProtoGpuSpec) HasModelName() bool {
	if o != nil && !isNil(o.ModelName) {
		return true
	}

	return false
}

// SetModelName gets a reference to the given string and assigns it to the ModelName field.
func (o *ProtoGpuSpec) SetModelName(v string) {
	o.ModelName = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ProtoGpuSpec) GetCount() int32 {
	if o == nil || isNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoGpuSpec) GetCountOk() (*int32, bool) {
	if o == nil || isNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ProtoGpuSpec) HasCount() bool {
	if o != nil && !isNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ProtoGpuSpec) SetCount(v int32) {
	o.Count = &v
}

func (o ProtoGpuSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ModelName) {
		toSerialize["modelName"] = o.ModelName
	}
	if !isNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableProtoGpuSpec struct {
	value *ProtoGpuSpec
	isSet bool
}

func (v NullableProtoGpuSpec) Get() *ProtoGpuSpec {
	return v.value
}

func (v *NullableProtoGpuSpec) Set(val *ProtoGpuSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoGpuSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoGpuSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoGpuSpec(val *ProtoGpuSpec) *NullableProtoGpuSpec {
	return &NullableProtoGpuSpec{value: val, isSet: true}
}

func (v NullableProtoGpuSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoGpuSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
