/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoLoadBalancer struct for ProtoLoadBalancer
type ProtoLoadBalancer struct {
	Metadata *ProtoLoadBalancerMetadata `json:"metadata,omitempty"`
	Spec     *ProtoLoadBalancerSpec     `json:"spec,omitempty"`
	Status   *ProtoLoadBalancerStatus   `json:"status,omitempty"`
}

// NewProtoLoadBalancer instantiates a new ProtoLoadBalancer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoLoadBalancer() *ProtoLoadBalancer {
	this := ProtoLoadBalancer{}
	return &this
}

// NewProtoLoadBalancerWithDefaults instantiates a new ProtoLoadBalancer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoLoadBalancerWithDefaults() *ProtoLoadBalancer {
	this := ProtoLoadBalancer{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ProtoLoadBalancer) GetMetadata() ProtoLoadBalancerMetadata {
	if o == nil || isNil(o.Metadata) {
		var ret ProtoLoadBalancerMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoLoadBalancer) GetMetadataOk() (*ProtoLoadBalancerMetadata, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ProtoLoadBalancer) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ProtoLoadBalancerMetadata and assigns it to the Metadata field.
func (o *ProtoLoadBalancer) SetMetadata(v ProtoLoadBalancerMetadata) {
	o.Metadata = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *ProtoLoadBalancer) GetSpec() ProtoLoadBalancerSpec {
	if o == nil || isNil(o.Spec) {
		var ret ProtoLoadBalancerSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoLoadBalancer) GetSpecOk() (*ProtoLoadBalancerSpec, bool) {
	if o == nil || isNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *ProtoLoadBalancer) HasSpec() bool {
	if o != nil && !isNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given ProtoLoadBalancerSpec and assigns it to the Spec field.
func (o *ProtoLoadBalancer) SetSpec(v ProtoLoadBalancerSpec) {
	o.Spec = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProtoLoadBalancer) GetStatus() ProtoLoadBalancerStatus {
	if o == nil || isNil(o.Status) {
		var ret ProtoLoadBalancerStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoLoadBalancer) GetStatusOk() (*ProtoLoadBalancerStatus, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProtoLoadBalancer) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ProtoLoadBalancerStatus and assigns it to the Status field.
func (o *ProtoLoadBalancer) SetStatus(v ProtoLoadBalancerStatus) {
	o.Status = &v
}

func (o ProtoLoadBalancer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableProtoLoadBalancer struct {
	value *ProtoLoadBalancer
	isSet bool
}

func (v NullableProtoLoadBalancer) Get() *ProtoLoadBalancer {
	return v.value
}

func (v *NullableProtoLoadBalancer) Set(val *ProtoLoadBalancer) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoLoadBalancer) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoLoadBalancer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoLoadBalancer(val *ProtoLoadBalancer) *NullableProtoLoadBalancer {
	return &NullableProtoLoadBalancer{value: val, isSet: true}
}

func (v NullableProtoLoadBalancer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoLoadBalancer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
