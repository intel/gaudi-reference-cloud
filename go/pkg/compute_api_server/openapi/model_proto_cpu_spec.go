/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoCpuSpec struct for ProtoCpuSpec
type ProtoCpuSpec struct {
	Cores     *int32  `json:"cores,omitempty"`
	Id        *string `json:"id,omitempty"`
	ModelName *string `json:"modelName,omitempty"`
	Sockets   *int32  `json:"sockets,omitempty"`
	Threads   *int32  `json:"threads,omitempty"`
}

// NewProtoCpuSpec instantiates a new ProtoCpuSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoCpuSpec() *ProtoCpuSpec {
	this := ProtoCpuSpec{}
	return &this
}

// NewProtoCpuSpecWithDefaults instantiates a new ProtoCpuSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoCpuSpecWithDefaults() *ProtoCpuSpec {
	this := ProtoCpuSpec{}
	return &this
}

// GetCores returns the Cores field value if set, zero value otherwise.
func (o *ProtoCpuSpec) GetCores() int32 {
	if o == nil || isNil(o.Cores) {
		var ret int32
		return ret
	}
	return *o.Cores
}

// GetCoresOk returns a tuple with the Cores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoCpuSpec) GetCoresOk() (*int32, bool) {
	if o == nil || isNil(o.Cores) {
		return nil, false
	}
	return o.Cores, true
}

// HasCores returns a boolean if a field has been set.
func (o *ProtoCpuSpec) HasCores() bool {
	if o != nil && !isNil(o.Cores) {
		return true
	}

	return false
}

// SetCores gets a reference to the given int32 and assigns it to the Cores field.
func (o *ProtoCpuSpec) SetCores(v int32) {
	o.Cores = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProtoCpuSpec) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoCpuSpec) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProtoCpuSpec) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProtoCpuSpec) SetId(v string) {
	o.Id = &v
}

// GetModelName returns the ModelName field value if set, zero value otherwise.
func (o *ProtoCpuSpec) GetModelName() string {
	if o == nil || isNil(o.ModelName) {
		var ret string
		return ret
	}
	return *o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoCpuSpec) GetModelNameOk() (*string, bool) {
	if o == nil || isNil(o.ModelName) {
		return nil, false
	}
	return o.ModelName, true
}

// HasModelName returns a boolean if a field has been set.
func (o *ProtoCpuSpec) HasModelName() bool {
	if o != nil && !isNil(o.ModelName) {
		return true
	}

	return false
}

// SetModelName gets a reference to the given string and assigns it to the ModelName field.
func (o *ProtoCpuSpec) SetModelName(v string) {
	o.ModelName = &v
}

// GetSockets returns the Sockets field value if set, zero value otherwise.
func (o *ProtoCpuSpec) GetSockets() int32 {
	if o == nil || isNil(o.Sockets) {
		var ret int32
		return ret
	}
	return *o.Sockets
}

// GetSocketsOk returns a tuple with the Sockets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoCpuSpec) GetSocketsOk() (*int32, bool) {
	if o == nil || isNil(o.Sockets) {
		return nil, false
	}
	return o.Sockets, true
}

// HasSockets returns a boolean if a field has been set.
func (o *ProtoCpuSpec) HasSockets() bool {
	if o != nil && !isNil(o.Sockets) {
		return true
	}

	return false
}

// SetSockets gets a reference to the given int32 and assigns it to the Sockets field.
func (o *ProtoCpuSpec) SetSockets(v int32) {
	o.Sockets = &v
}

// GetThreads returns the Threads field value if set, zero value otherwise.
func (o *ProtoCpuSpec) GetThreads() int32 {
	if o == nil || isNil(o.Threads) {
		var ret int32
		return ret
	}
	return *o.Threads
}

// GetThreadsOk returns a tuple with the Threads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoCpuSpec) GetThreadsOk() (*int32, bool) {
	if o == nil || isNil(o.Threads) {
		return nil, false
	}
	return o.Threads, true
}

// HasThreads returns a boolean if a field has been set.
func (o *ProtoCpuSpec) HasThreads() bool {
	if o != nil && !isNil(o.Threads) {
		return true
	}

	return false
}

// SetThreads gets a reference to the given int32 and assigns it to the Threads field.
func (o *ProtoCpuSpec) SetThreads(v int32) {
	o.Threads = &v
}

func (o ProtoCpuSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Cores) {
		toSerialize["cores"] = o.Cores
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ModelName) {
		toSerialize["modelName"] = o.ModelName
	}
	if !isNil(o.Sockets) {
		toSerialize["sockets"] = o.Sockets
	}
	if !isNil(o.Threads) {
		toSerialize["threads"] = o.Threads
	}
	return json.Marshal(toSerialize)
}

type NullableProtoCpuSpec struct {
	value *ProtoCpuSpec
	isSet bool
}

func (v NullableProtoCpuSpec) Get() *ProtoCpuSpec {
	return v.value
}

func (v *NullableProtoCpuSpec) Set(val *ProtoCpuSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoCpuSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoCpuSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoCpuSpec(val *ProtoCpuSpec) *NullableProtoCpuSpec {
	return &NullableProtoCpuSpec{value: val, isSet: true}
}

func (v NullableProtoCpuSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoCpuSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
