/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StreamResultOfProtoSshPublicKey struct for StreamResultOfProtoSshPublicKey
type StreamResultOfProtoSshPublicKey struct {
	Result *ProtoSshPublicKey `json:"result,omitempty"`
	Error  *RpcStatus         `json:"error,omitempty"`
}

// NewStreamResultOfProtoSshPublicKey instantiates a new StreamResultOfProtoSshPublicKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamResultOfProtoSshPublicKey() *StreamResultOfProtoSshPublicKey {
	this := StreamResultOfProtoSshPublicKey{}
	return &this
}

// NewStreamResultOfProtoSshPublicKeyWithDefaults instantiates a new StreamResultOfProtoSshPublicKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamResultOfProtoSshPublicKeyWithDefaults() *StreamResultOfProtoSshPublicKey {
	this := StreamResultOfProtoSshPublicKey{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *StreamResultOfProtoSshPublicKey) GetResult() ProtoSshPublicKey {
	if o == nil || isNil(o.Result) {
		var ret ProtoSshPublicKey
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamResultOfProtoSshPublicKey) GetResultOk() (*ProtoSshPublicKey, bool) {
	if o == nil || isNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *StreamResultOfProtoSshPublicKey) HasResult() bool {
	if o != nil && !isNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given ProtoSshPublicKey and assigns it to the Result field.
func (o *StreamResultOfProtoSshPublicKey) SetResult(v ProtoSshPublicKey) {
	o.Result = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *StreamResultOfProtoSshPublicKey) GetError() RpcStatus {
	if o == nil || isNil(o.Error) {
		var ret RpcStatus
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamResultOfProtoSshPublicKey) GetErrorOk() (*RpcStatus, bool) {
	if o == nil || isNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *StreamResultOfProtoSshPublicKey) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given RpcStatus and assigns it to the Error field.
func (o *StreamResultOfProtoSshPublicKey) SetError(v RpcStatus) {
	o.Error = &v
}

func (o StreamResultOfProtoSshPublicKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableStreamResultOfProtoSshPublicKey struct {
	value *StreamResultOfProtoSshPublicKey
	isSet bool
}

func (v NullableStreamResultOfProtoSshPublicKey) Get() *StreamResultOfProtoSshPublicKey {
	return v.value
}

func (v *NullableStreamResultOfProtoSshPublicKey) Set(val *StreamResultOfProtoSshPublicKey) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamResultOfProtoSshPublicKey) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamResultOfProtoSshPublicKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamResultOfProtoSshPublicKey(val *StreamResultOfProtoSshPublicKey) *NullableStreamResultOfProtoSshPublicKey {
	return &NullableStreamResultOfProtoSshPublicKey{value: val, isSet: true}
}

func (v NullableStreamResultOfProtoSshPublicKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamResultOfProtoSshPublicKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
