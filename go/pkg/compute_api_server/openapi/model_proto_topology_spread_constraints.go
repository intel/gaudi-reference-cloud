/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoTopologySpreadConstraints struct for ProtoTopologySpreadConstraints
type ProtoTopologySpreadConstraints struct {
	LabelSelector *ProtoLabelSelector `json:"labelSelector,omitempty"`
}

// NewProtoTopologySpreadConstraints instantiates a new ProtoTopologySpreadConstraints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoTopologySpreadConstraints() *ProtoTopologySpreadConstraints {
	this := ProtoTopologySpreadConstraints{}
	return &this
}

// NewProtoTopologySpreadConstraintsWithDefaults instantiates a new ProtoTopologySpreadConstraints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoTopologySpreadConstraintsWithDefaults() *ProtoTopologySpreadConstraints {
	this := ProtoTopologySpreadConstraints{}
	return &this
}

// GetLabelSelector returns the LabelSelector field value if set, zero value otherwise.
func (o *ProtoTopologySpreadConstraints) GetLabelSelector() ProtoLabelSelector {
	if o == nil || isNil(o.LabelSelector) {
		var ret ProtoLabelSelector
		return ret
	}
	return *o.LabelSelector
}

// GetLabelSelectorOk returns a tuple with the LabelSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoTopologySpreadConstraints) GetLabelSelectorOk() (*ProtoLabelSelector, bool) {
	if o == nil || isNil(o.LabelSelector) {
		return nil, false
	}
	return o.LabelSelector, true
}

// HasLabelSelector returns a boolean if a field has been set.
func (o *ProtoTopologySpreadConstraints) HasLabelSelector() bool {
	if o != nil && !isNil(o.LabelSelector) {
		return true
	}

	return false
}

// SetLabelSelector gets a reference to the given ProtoLabelSelector and assigns it to the LabelSelector field.
func (o *ProtoTopologySpreadConstraints) SetLabelSelector(v ProtoLabelSelector) {
	o.LabelSelector = &v
}

func (o ProtoTopologySpreadConstraints) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.LabelSelector) {
		toSerialize["labelSelector"] = o.LabelSelector
	}
	return json.Marshal(toSerialize)
}

type NullableProtoTopologySpreadConstraints struct {
	value *ProtoTopologySpreadConstraints
	isSet bool
}

func (v NullableProtoTopologySpreadConstraints) Get() *ProtoTopologySpreadConstraints {
	return v.value
}

func (v *NullableProtoTopologySpreadConstraints) Set(val *ProtoTopologySpreadConstraints) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoTopologySpreadConstraints) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoTopologySpreadConstraints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoTopologySpreadConstraints(val *ProtoTopologySpreadConstraints) *NullableProtoTopologySpreadConstraints {
	return &NullableProtoTopologySpreadConstraints{value: val, isSet: true}
}

func (v NullableProtoTopologySpreadConstraints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoTopologySpreadConstraints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
