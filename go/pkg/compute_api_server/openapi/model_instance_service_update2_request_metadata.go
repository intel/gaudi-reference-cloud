/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InstanceServiceUpdate2RequestMetadata struct for InstanceServiceUpdate2RequestMetadata
type InstanceServiceUpdate2RequestMetadata struct {
	ResourceId *string `json:"resourceId,omitempty"`
	// If provided, the existing record must have this resourceVersion for the request to succeed.
	ResourceVersion *string `json:"resourceVersion,omitempty"`
	// The entire set of labels will be replaced with these labels. Not implemented.
	Labels *map[string]string `json:"labels,omitempty"`
	// Reserved. Added this field to overcome openAPi-same-struct issue.
	Reserved1 *string `json:"reserved1,omitempty"`
}

// NewInstanceServiceUpdate2RequestMetadata instantiates a new InstanceServiceUpdate2RequestMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceServiceUpdate2RequestMetadata() *InstanceServiceUpdate2RequestMetadata {
	this := InstanceServiceUpdate2RequestMetadata{}
	return &this
}

// NewInstanceServiceUpdate2RequestMetadataWithDefaults instantiates a new InstanceServiceUpdate2RequestMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceServiceUpdate2RequestMetadataWithDefaults() *InstanceServiceUpdate2RequestMetadata {
	this := InstanceServiceUpdate2RequestMetadata{}
	return &this
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *InstanceServiceUpdate2RequestMetadata) GetResourceId() string {
	if o == nil || isNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceServiceUpdate2RequestMetadata) GetResourceIdOk() (*string, bool) {
	if o == nil || isNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *InstanceServiceUpdate2RequestMetadata) HasResourceId() bool {
	if o != nil && !isNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *InstanceServiceUpdate2RequestMetadata) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetResourceVersion returns the ResourceVersion field value if set, zero value otherwise.
func (o *InstanceServiceUpdate2RequestMetadata) GetResourceVersion() string {
	if o == nil || isNil(o.ResourceVersion) {
		var ret string
		return ret
	}
	return *o.ResourceVersion
}

// GetResourceVersionOk returns a tuple with the ResourceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceServiceUpdate2RequestMetadata) GetResourceVersionOk() (*string, bool) {
	if o == nil || isNil(o.ResourceVersion) {
		return nil, false
	}
	return o.ResourceVersion, true
}

// HasResourceVersion returns a boolean if a field has been set.
func (o *InstanceServiceUpdate2RequestMetadata) HasResourceVersion() bool {
	if o != nil && !isNil(o.ResourceVersion) {
		return true
	}

	return false
}

// SetResourceVersion gets a reference to the given string and assigns it to the ResourceVersion field.
func (o *InstanceServiceUpdate2RequestMetadata) SetResourceVersion(v string) {
	o.ResourceVersion = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *InstanceServiceUpdate2RequestMetadata) GetLabels() map[string]string {
	if o == nil || isNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceServiceUpdate2RequestMetadata) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *InstanceServiceUpdate2RequestMetadata) HasLabels() bool {
	if o != nil && !isNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *InstanceServiceUpdate2RequestMetadata) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetReserved1 returns the Reserved1 field value if set, zero value otherwise.
func (o *InstanceServiceUpdate2RequestMetadata) GetReserved1() string {
	if o == nil || isNil(o.Reserved1) {
		var ret string
		return ret
	}
	return *o.Reserved1
}

// GetReserved1Ok returns a tuple with the Reserved1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceServiceUpdate2RequestMetadata) GetReserved1Ok() (*string, bool) {
	if o == nil || isNil(o.Reserved1) {
		return nil, false
	}
	return o.Reserved1, true
}

// HasReserved1 returns a boolean if a field has been set.
func (o *InstanceServiceUpdate2RequestMetadata) HasReserved1() bool {
	if o != nil && !isNil(o.Reserved1) {
		return true
	}

	return false
}

// SetReserved1 gets a reference to the given string and assigns it to the Reserved1 field.
func (o *InstanceServiceUpdate2RequestMetadata) SetReserved1(v string) {
	o.Reserved1 = &v
}

func (o InstanceServiceUpdate2RequestMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	if !isNil(o.ResourceVersion) {
		toSerialize["resourceVersion"] = o.ResourceVersion
	}
	if !isNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !isNil(o.Reserved1) {
		toSerialize["reserved1"] = o.Reserved1
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceServiceUpdate2RequestMetadata struct {
	value *InstanceServiceUpdate2RequestMetadata
	isSet bool
}

func (v NullableInstanceServiceUpdate2RequestMetadata) Get() *InstanceServiceUpdate2RequestMetadata {
	return v.value
}

func (v *NullableInstanceServiceUpdate2RequestMetadata) Set(val *InstanceServiceUpdate2RequestMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceServiceUpdate2RequestMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceServiceUpdate2RequestMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceServiceUpdate2RequestMetadata(val *InstanceServiceUpdate2RequestMetadata) *NullableInstanceServiceUpdate2RequestMetadata {
	return &NullableInstanceServiceUpdate2RequestMetadata{value: val, isSet: true}
}

func (v NullableInstanceServiceUpdate2RequestMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceServiceUpdate2RequestMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
