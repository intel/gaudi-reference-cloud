/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoVNetSpec struct for ProtoVNetSpec
type ProtoVNetSpec struct {
	Region           *string `json:"region,omitempty"`
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	// The reserved subnet will have a prefix length with this value or less.
	PrefixLength *int32 `json:"prefixLength,omitempty"`
}

// NewProtoVNetSpec instantiates a new ProtoVNetSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoVNetSpec() *ProtoVNetSpec {
	this := ProtoVNetSpec{}
	return &this
}

// NewProtoVNetSpecWithDefaults instantiates a new ProtoVNetSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoVNetSpecWithDefaults() *ProtoVNetSpec {
	this := ProtoVNetSpec{}
	return &this
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ProtoVNetSpec) GetRegion() string {
	if o == nil || isNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoVNetSpec) GetRegionOk() (*string, bool) {
	if o == nil || isNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ProtoVNetSpec) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ProtoVNetSpec) SetRegion(v string) {
	o.Region = &v
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise.
func (o *ProtoVNetSpec) GetAvailabilityZone() string {
	if o == nil || isNil(o.AvailabilityZone) {
		var ret string
		return ret
	}
	return *o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoVNetSpec) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil || isNil(o.AvailabilityZone) {
		return nil, false
	}
	return o.AvailabilityZone, true
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *ProtoVNetSpec) HasAvailabilityZone() bool {
	if o != nil && !isNil(o.AvailabilityZone) {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given string and assigns it to the AvailabilityZone field.
func (o *ProtoVNetSpec) SetAvailabilityZone(v string) {
	o.AvailabilityZone = &v
}

// GetPrefixLength returns the PrefixLength field value if set, zero value otherwise.
func (o *ProtoVNetSpec) GetPrefixLength() int32 {
	if o == nil || isNil(o.PrefixLength) {
		var ret int32
		return ret
	}
	return *o.PrefixLength
}

// GetPrefixLengthOk returns a tuple with the PrefixLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoVNetSpec) GetPrefixLengthOk() (*int32, bool) {
	if o == nil || isNil(o.PrefixLength) {
		return nil, false
	}
	return o.PrefixLength, true
}

// HasPrefixLength returns a boolean if a field has been set.
func (o *ProtoVNetSpec) HasPrefixLength() bool {
	if o != nil && !isNil(o.PrefixLength) {
		return true
	}

	return false
}

// SetPrefixLength gets a reference to the given int32 and assigns it to the PrefixLength field.
func (o *ProtoVNetSpec) SetPrefixLength(v int32) {
	o.PrefixLength = &v
}

func (o ProtoVNetSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !isNil(o.AvailabilityZone) {
		toSerialize["availabilityZone"] = o.AvailabilityZone
	}
	if !isNil(o.PrefixLength) {
		toSerialize["prefixLength"] = o.PrefixLength
	}
	return json.Marshal(toSerialize)
}

type NullableProtoVNetSpec struct {
	value *ProtoVNetSpec
	isSet bool
}

func (v NullableProtoVNetSpec) Get() *ProtoVNetSpec {
	return v.value
}

func (v *NullableProtoVNetSpec) Set(val *ProtoVNetSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoVNetSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoVNetSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoVNetSpec(val *ProtoVNetSpec) *NullableProtoVNetSpec {
	return &NullableProtoVNetSpec{value: val, isSet: true}
}

func (v NullableProtoVNetSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoVNetSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
