/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoInstanceInterfaceStatus struct for ProtoInstanceInterfaceStatus
type ProtoInstanceInterfaceStatus struct {
	// Not implemented.
	Name *string `json:"name,omitempty"`
	// Not implemented.
	VNet *string `json:"vNet,omitempty"`
	// Fully qualified domain name (FQDN) of interface.
	DnsName *string `json:"dnsName,omitempty"`
	// Subnet prefix length.
	PrefixLength *int32 `json:"prefixLength,omitempty"`
	// List of IP addresses.
	Addresses []string `json:"addresses,omitempty"`
	// Subnet IP address in format \"1.2.3.4\".
	Subnet *string `json:"subnet,omitempty"`
	// Gateway IP address.
	Gateway *string `json:"gateway,omitempty"`
}

// NewProtoInstanceInterfaceStatus instantiates a new ProtoInstanceInterfaceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoInstanceInterfaceStatus() *ProtoInstanceInterfaceStatus {
	this := ProtoInstanceInterfaceStatus{}
	return &this
}

// NewProtoInstanceInterfaceStatusWithDefaults instantiates a new ProtoInstanceInterfaceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoInstanceInterfaceStatusWithDefaults() *ProtoInstanceInterfaceStatus {
	this := ProtoInstanceInterfaceStatus{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProtoInstanceInterfaceStatus) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceInterfaceStatus) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProtoInstanceInterfaceStatus) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProtoInstanceInterfaceStatus) SetName(v string) {
	o.Name = &v
}

// GetVNet returns the VNet field value if set, zero value otherwise.
func (o *ProtoInstanceInterfaceStatus) GetVNet() string {
	if o == nil || isNil(o.VNet) {
		var ret string
		return ret
	}
	return *o.VNet
}

// GetVNetOk returns a tuple with the VNet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceInterfaceStatus) GetVNetOk() (*string, bool) {
	if o == nil || isNil(o.VNet) {
		return nil, false
	}
	return o.VNet, true
}

// HasVNet returns a boolean if a field has been set.
func (o *ProtoInstanceInterfaceStatus) HasVNet() bool {
	if o != nil && !isNil(o.VNet) {
		return true
	}

	return false
}

// SetVNet gets a reference to the given string and assigns it to the VNet field.
func (o *ProtoInstanceInterfaceStatus) SetVNet(v string) {
	o.VNet = &v
}

// GetDnsName returns the DnsName field value if set, zero value otherwise.
func (o *ProtoInstanceInterfaceStatus) GetDnsName() string {
	if o == nil || isNil(o.DnsName) {
		var ret string
		return ret
	}
	return *o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceInterfaceStatus) GetDnsNameOk() (*string, bool) {
	if o == nil || isNil(o.DnsName) {
		return nil, false
	}
	return o.DnsName, true
}

// HasDnsName returns a boolean if a field has been set.
func (o *ProtoInstanceInterfaceStatus) HasDnsName() bool {
	if o != nil && !isNil(o.DnsName) {
		return true
	}

	return false
}

// SetDnsName gets a reference to the given string and assigns it to the DnsName field.
func (o *ProtoInstanceInterfaceStatus) SetDnsName(v string) {
	o.DnsName = &v
}

// GetPrefixLength returns the PrefixLength field value if set, zero value otherwise.
func (o *ProtoInstanceInterfaceStatus) GetPrefixLength() int32 {
	if o == nil || isNil(o.PrefixLength) {
		var ret int32
		return ret
	}
	return *o.PrefixLength
}

// GetPrefixLengthOk returns a tuple with the PrefixLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceInterfaceStatus) GetPrefixLengthOk() (*int32, bool) {
	if o == nil || isNil(o.PrefixLength) {
		return nil, false
	}
	return o.PrefixLength, true
}

// HasPrefixLength returns a boolean if a field has been set.
func (o *ProtoInstanceInterfaceStatus) HasPrefixLength() bool {
	if o != nil && !isNil(o.PrefixLength) {
		return true
	}

	return false
}

// SetPrefixLength gets a reference to the given int32 and assigns it to the PrefixLength field.
func (o *ProtoInstanceInterfaceStatus) SetPrefixLength(v int32) {
	o.PrefixLength = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *ProtoInstanceInterfaceStatus) GetAddresses() []string {
	if o == nil || isNil(o.Addresses) {
		var ret []string
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceInterfaceStatus) GetAddressesOk() ([]string, bool) {
	if o == nil || isNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *ProtoInstanceInterfaceStatus) HasAddresses() bool {
	if o != nil && !isNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *ProtoInstanceInterfaceStatus) SetAddresses(v []string) {
	o.Addresses = v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *ProtoInstanceInterfaceStatus) GetSubnet() string {
	if o == nil || isNil(o.Subnet) {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceInterfaceStatus) GetSubnetOk() (*string, bool) {
	if o == nil || isNil(o.Subnet) {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *ProtoInstanceInterfaceStatus) HasSubnet() bool {
	if o != nil && !isNil(o.Subnet) {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *ProtoInstanceInterfaceStatus) SetSubnet(v string) {
	o.Subnet = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *ProtoInstanceInterfaceStatus) GetGateway() string {
	if o == nil || isNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceInterfaceStatus) GetGatewayOk() (*string, bool) {
	if o == nil || isNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *ProtoInstanceInterfaceStatus) HasGateway() bool {
	if o != nil && !isNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *ProtoInstanceInterfaceStatus) SetGateway(v string) {
	o.Gateway = &v
}

func (o ProtoInstanceInterfaceStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.VNet) {
		toSerialize["vNet"] = o.VNet
	}
	if !isNil(o.DnsName) {
		toSerialize["dnsName"] = o.DnsName
	}
	if !isNil(o.PrefixLength) {
		toSerialize["prefixLength"] = o.PrefixLength
	}
	if !isNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !isNil(o.Subnet) {
		toSerialize["subnet"] = o.Subnet
	}
	if !isNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	return json.Marshal(toSerialize)
}

type NullableProtoInstanceInterfaceStatus struct {
	value *ProtoInstanceInterfaceStatus
	isSet bool
}

func (v NullableProtoInstanceInterfaceStatus) Get() *ProtoInstanceInterfaceStatus {
	return v.value
}

func (v *NullableProtoInstanceInterfaceStatus) Set(val *ProtoInstanceInterfaceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoInstanceInterfaceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoInstanceInterfaceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoInstanceInterfaceStatus(val *ProtoInstanceInterfaceStatus) *NullableProtoInstanceInterfaceStatus {
	return &NullableProtoInstanceInterfaceStatus{value: val, isSet: true}
}

func (v NullableProtoInstanceInterfaceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoInstanceInterfaceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
