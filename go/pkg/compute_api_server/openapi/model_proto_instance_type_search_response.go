/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoInstanceTypeSearchResponse struct for ProtoInstanceTypeSearchResponse
type ProtoInstanceTypeSearchResponse struct {
	Items []ProtoInstanceType `json:"items,omitempty"`
}

// NewProtoInstanceTypeSearchResponse instantiates a new ProtoInstanceTypeSearchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoInstanceTypeSearchResponse() *ProtoInstanceTypeSearchResponse {
	this := ProtoInstanceTypeSearchResponse{}
	return &this
}

// NewProtoInstanceTypeSearchResponseWithDefaults instantiates a new ProtoInstanceTypeSearchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoInstanceTypeSearchResponseWithDefaults() *ProtoInstanceTypeSearchResponse {
	this := ProtoInstanceTypeSearchResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ProtoInstanceTypeSearchResponse) GetItems() []ProtoInstanceType {
	if o == nil || isNil(o.Items) {
		var ret []ProtoInstanceType
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceTypeSearchResponse) GetItemsOk() ([]ProtoInstanceType, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ProtoInstanceTypeSearchResponse) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ProtoInstanceType and assigns it to the Items field.
func (o *ProtoInstanceTypeSearchResponse) SetItems(v []ProtoInstanceType) {
	o.Items = v
}

func (o ProtoInstanceTypeSearchResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableProtoInstanceTypeSearchResponse struct {
	value *ProtoInstanceTypeSearchResponse
	isSet bool
}

func (v NullableProtoInstanceTypeSearchResponse) Get() *ProtoInstanceTypeSearchResponse {
	return v.value
}

func (v *NullableProtoInstanceTypeSearchResponse) Set(val *ProtoInstanceTypeSearchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoInstanceTypeSearchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoInstanceTypeSearchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoInstanceTypeSearchResponse(val *ProtoInstanceTypeSearchResponse) *NullableProtoInstanceTypeSearchResponse {
	return &NullableProtoInstanceTypeSearchResponse{value: val, isSet: true}
}

func (v NullableProtoInstanceTypeSearchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoInstanceTypeSearchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
