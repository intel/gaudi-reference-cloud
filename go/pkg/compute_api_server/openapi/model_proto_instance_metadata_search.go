/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoInstanceMetadataSearch struct for ProtoInstanceMetadataSearch
type ProtoInstanceMetadataSearch struct {
	CloudAccountId *string `json:"cloudAccountId,omitempty"`
	// If not empty, only return instances that have these key/value pairs.
	Labels *map[string]string `json:"labels,omitempty"`
	// Reserved. Added this field to overcome openAPi-same-struct issue.
	Reserved1           *string                    `json:"reserved1,omitempty"`
	InstanceGroup       *string                    `json:"instanceGroup,omitempty"`
	InstanceGroupFilter *ProtoSearchFilterCriteria `json:"instanceGroupFilter,omitempty"`
}

// NewProtoInstanceMetadataSearch instantiates a new ProtoInstanceMetadataSearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoInstanceMetadataSearch() *ProtoInstanceMetadataSearch {
	this := ProtoInstanceMetadataSearch{}
	var instanceGroupFilter ProtoSearchFilterCriteria = DEFAULT
	this.InstanceGroupFilter = &instanceGroupFilter
	return &this
}

// NewProtoInstanceMetadataSearchWithDefaults instantiates a new ProtoInstanceMetadataSearch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoInstanceMetadataSearchWithDefaults() *ProtoInstanceMetadataSearch {
	this := ProtoInstanceMetadataSearch{}
	var instanceGroupFilter ProtoSearchFilterCriteria = DEFAULT
	this.InstanceGroupFilter = &instanceGroupFilter
	return &this
}

// GetCloudAccountId returns the CloudAccountId field value if set, zero value otherwise.
func (o *ProtoInstanceMetadataSearch) GetCloudAccountId() string {
	if o == nil || isNil(o.CloudAccountId) {
		var ret string
		return ret
	}
	return *o.CloudAccountId
}

// GetCloudAccountIdOk returns a tuple with the CloudAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceMetadataSearch) GetCloudAccountIdOk() (*string, bool) {
	if o == nil || isNil(o.CloudAccountId) {
		return nil, false
	}
	return o.CloudAccountId, true
}

// HasCloudAccountId returns a boolean if a field has been set.
func (o *ProtoInstanceMetadataSearch) HasCloudAccountId() bool {
	if o != nil && !isNil(o.CloudAccountId) {
		return true
	}

	return false
}

// SetCloudAccountId gets a reference to the given string and assigns it to the CloudAccountId field.
func (o *ProtoInstanceMetadataSearch) SetCloudAccountId(v string) {
	o.CloudAccountId = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ProtoInstanceMetadataSearch) GetLabels() map[string]string {
	if o == nil || isNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceMetadataSearch) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ProtoInstanceMetadataSearch) HasLabels() bool {
	if o != nil && !isNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *ProtoInstanceMetadataSearch) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetReserved1 returns the Reserved1 field value if set, zero value otherwise.
func (o *ProtoInstanceMetadataSearch) GetReserved1() string {
	if o == nil || isNil(o.Reserved1) {
		var ret string
		return ret
	}
	return *o.Reserved1
}

// GetReserved1Ok returns a tuple with the Reserved1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceMetadataSearch) GetReserved1Ok() (*string, bool) {
	if o == nil || isNil(o.Reserved1) {
		return nil, false
	}
	return o.Reserved1, true
}

// HasReserved1 returns a boolean if a field has been set.
func (o *ProtoInstanceMetadataSearch) HasReserved1() bool {
	if o != nil && !isNil(o.Reserved1) {
		return true
	}

	return false
}

// SetReserved1 gets a reference to the given string and assigns it to the Reserved1 field.
func (o *ProtoInstanceMetadataSearch) SetReserved1(v string) {
	o.Reserved1 = &v
}

// GetInstanceGroup returns the InstanceGroup field value if set, zero value otherwise.
func (o *ProtoInstanceMetadataSearch) GetInstanceGroup() string {
	if o == nil || isNil(o.InstanceGroup) {
		var ret string
		return ret
	}
	return *o.InstanceGroup
}

// GetInstanceGroupOk returns a tuple with the InstanceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceMetadataSearch) GetInstanceGroupOk() (*string, bool) {
	if o == nil || isNil(o.InstanceGroup) {
		return nil, false
	}
	return o.InstanceGroup, true
}

// HasInstanceGroup returns a boolean if a field has been set.
func (o *ProtoInstanceMetadataSearch) HasInstanceGroup() bool {
	if o != nil && !isNil(o.InstanceGroup) {
		return true
	}

	return false
}

// SetInstanceGroup gets a reference to the given string and assigns it to the InstanceGroup field.
func (o *ProtoInstanceMetadataSearch) SetInstanceGroup(v string) {
	o.InstanceGroup = &v
}

// GetInstanceGroupFilter returns the InstanceGroupFilter field value if set, zero value otherwise.
func (o *ProtoInstanceMetadataSearch) GetInstanceGroupFilter() ProtoSearchFilterCriteria {
	if o == nil || isNil(o.InstanceGroupFilter) {
		var ret ProtoSearchFilterCriteria
		return ret
	}
	return *o.InstanceGroupFilter
}

// GetInstanceGroupFilterOk returns a tuple with the InstanceGroupFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceMetadataSearch) GetInstanceGroupFilterOk() (*ProtoSearchFilterCriteria, bool) {
	if o == nil || isNil(o.InstanceGroupFilter) {
		return nil, false
	}
	return o.InstanceGroupFilter, true
}

// HasInstanceGroupFilter returns a boolean if a field has been set.
func (o *ProtoInstanceMetadataSearch) HasInstanceGroupFilter() bool {
	if o != nil && !isNil(o.InstanceGroupFilter) {
		return true
	}

	return false
}

// SetInstanceGroupFilter gets a reference to the given ProtoSearchFilterCriteria and assigns it to the InstanceGroupFilter field.
func (o *ProtoInstanceMetadataSearch) SetInstanceGroupFilter(v ProtoSearchFilterCriteria) {
	o.InstanceGroupFilter = &v
}

func (o ProtoInstanceMetadataSearch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CloudAccountId) {
		toSerialize["cloudAccountId"] = o.CloudAccountId
	}
	if !isNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !isNil(o.Reserved1) {
		toSerialize["reserved1"] = o.Reserved1
	}
	if !isNil(o.InstanceGroup) {
		toSerialize["instanceGroup"] = o.InstanceGroup
	}
	if !isNil(o.InstanceGroupFilter) {
		toSerialize["instanceGroupFilter"] = o.InstanceGroupFilter
	}
	return json.Marshal(toSerialize)
}

type NullableProtoInstanceMetadataSearch struct {
	value *ProtoInstanceMetadataSearch
	isSet bool
}

func (v NullableProtoInstanceMetadataSearch) Get() *ProtoInstanceMetadataSearch {
	return v.value
}

func (v *NullableProtoInstanceMetadataSearch) Set(val *ProtoInstanceMetadataSearch) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoInstanceMetadataSearch) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoInstanceMetadataSearch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoInstanceMetadataSearch(val *ProtoInstanceMetadataSearch) *NullableProtoInstanceMetadataSearch {
	return &NullableProtoInstanceMetadataSearch{value: val, isSet: true}
}

func (v NullableProtoInstanceMetadataSearch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoInstanceMetadataSearch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
