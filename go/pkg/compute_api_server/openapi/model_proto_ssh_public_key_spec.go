/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoSshPublicKeySpec struct for ProtoSshPublicKeySpec
type ProtoSshPublicKeySpec struct {
	// SSH public key in authorized_keys format \"ssh-rsa ... comment\".
	SshPublicKey *string `json:"sshPublicKey,omitempty"`
	OwnerEmail   *string `json:"ownerEmail,omitempty"`
}

// NewProtoSshPublicKeySpec instantiates a new ProtoSshPublicKeySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoSshPublicKeySpec() *ProtoSshPublicKeySpec {
	this := ProtoSshPublicKeySpec{}
	return &this
}

// NewProtoSshPublicKeySpecWithDefaults instantiates a new ProtoSshPublicKeySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoSshPublicKeySpecWithDefaults() *ProtoSshPublicKeySpec {
	this := ProtoSshPublicKeySpec{}
	return &this
}

// GetSshPublicKey returns the SshPublicKey field value if set, zero value otherwise.
func (o *ProtoSshPublicKeySpec) GetSshPublicKey() string {
	if o == nil || isNil(o.SshPublicKey) {
		var ret string
		return ret
	}
	return *o.SshPublicKey
}

// GetSshPublicKeyOk returns a tuple with the SshPublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoSshPublicKeySpec) GetSshPublicKeyOk() (*string, bool) {
	if o == nil || isNil(o.SshPublicKey) {
		return nil, false
	}
	return o.SshPublicKey, true
}

// HasSshPublicKey returns a boolean if a field has been set.
func (o *ProtoSshPublicKeySpec) HasSshPublicKey() bool {
	if o != nil && !isNil(o.SshPublicKey) {
		return true
	}

	return false
}

// SetSshPublicKey gets a reference to the given string and assigns it to the SshPublicKey field.
func (o *ProtoSshPublicKeySpec) SetSshPublicKey(v string) {
	o.SshPublicKey = &v
}

// GetOwnerEmail returns the OwnerEmail field value if set, zero value otherwise.
func (o *ProtoSshPublicKeySpec) GetOwnerEmail() string {
	if o == nil || isNil(o.OwnerEmail) {
		var ret string
		return ret
	}
	return *o.OwnerEmail
}

// GetOwnerEmailOk returns a tuple with the OwnerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoSshPublicKeySpec) GetOwnerEmailOk() (*string, bool) {
	if o == nil || isNil(o.OwnerEmail) {
		return nil, false
	}
	return o.OwnerEmail, true
}

// HasOwnerEmail returns a boolean if a field has been set.
func (o *ProtoSshPublicKeySpec) HasOwnerEmail() bool {
	if o != nil && !isNil(o.OwnerEmail) {
		return true
	}

	return false
}

// SetOwnerEmail gets a reference to the given string and assigns it to the OwnerEmail field.
func (o *ProtoSshPublicKeySpec) SetOwnerEmail(v string) {
	o.OwnerEmail = &v
}

func (o ProtoSshPublicKeySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SshPublicKey) {
		toSerialize["sshPublicKey"] = o.SshPublicKey
	}
	if !isNil(o.OwnerEmail) {
		toSerialize["ownerEmail"] = o.OwnerEmail
	}
	return json.Marshal(toSerialize)
}

type NullableProtoSshPublicKeySpec struct {
	value *ProtoSshPublicKeySpec
	isSet bool
}

func (v NullableProtoSshPublicKeySpec) Get() *ProtoSshPublicKeySpec {
	return v.value
}

func (v *NullableProtoSshPublicKeySpec) Set(val *ProtoSshPublicKeySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoSshPublicKeySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoSshPublicKeySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoSshPublicKeySpec(val *ProtoSshPublicKeySpec) *NullableProtoSshPublicKeySpec {
	return &NullableProtoSshPublicKeySpec{value: val, isSet: true}
}

func (v NullableProtoSshPublicKeySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoSshPublicKeySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
