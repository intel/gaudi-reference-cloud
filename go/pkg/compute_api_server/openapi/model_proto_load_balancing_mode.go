/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// ProtoLoadBalancingMode  - roundRobin: Default.
type ProtoLoadBalancingMode string

// List of protoLoadBalancingMode
const (
	ROUND_ROBIN              ProtoLoadBalancingMode = "roundRobin"
	LEAST_CONNECTIONS_MEMBER ProtoLoadBalancingMode = "leastConnectionsMember"
)

// All allowed values of ProtoLoadBalancingMode enum
var AllowedProtoLoadBalancingModeEnumValues = []ProtoLoadBalancingMode{
	"roundRobin",
	"leastConnectionsMember",
}

func (v *ProtoLoadBalancingMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProtoLoadBalancingMode(value)
	for _, existing := range AllowedProtoLoadBalancingModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProtoLoadBalancingMode", value)
}

// NewProtoLoadBalancingModeFromValue returns a pointer to a valid ProtoLoadBalancingMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProtoLoadBalancingModeFromValue(v string) (*ProtoLoadBalancingMode, error) {
	ev := ProtoLoadBalancingMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProtoLoadBalancingMode: valid values are %v", v, AllowedProtoLoadBalancingModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProtoLoadBalancingMode) IsValid() bool {
	for _, existing := range AllowedProtoLoadBalancingModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to protoLoadBalancingMode value
func (v ProtoLoadBalancingMode) Ptr() *ProtoLoadBalancingMode {
	return &v
}

type NullableProtoLoadBalancingMode struct {
	value *ProtoLoadBalancingMode
	isSet bool
}

func (v NullableProtoLoadBalancingMode) Get() *ProtoLoadBalancingMode {
	return v.value
}

func (v *NullableProtoLoadBalancingMode) Set(val *ProtoLoadBalancingMode) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoLoadBalancingMode) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoLoadBalancingMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoLoadBalancingMode(val *ProtoLoadBalancingMode) *NullableProtoLoadBalancingMode {
	return &NullableProtoLoadBalancingMode{value: val, isSet: true}
}

func (v NullableProtoLoadBalancingMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoLoadBalancingMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
