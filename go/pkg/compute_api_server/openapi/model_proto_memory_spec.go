/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoMemorySpec struct for ProtoMemorySpec
type ProtoMemorySpec struct {
	Size      *string `json:"size,omitempty"`
	DimmSize  *string `json:"dimmSize,omitempty"`
	DimmCount *int32  `json:"dimmCount,omitempty"`
	Speed     *int32  `json:"speed,omitempty"`
}

// NewProtoMemorySpec instantiates a new ProtoMemorySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoMemorySpec() *ProtoMemorySpec {
	this := ProtoMemorySpec{}
	return &this
}

// NewProtoMemorySpecWithDefaults instantiates a new ProtoMemorySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoMemorySpecWithDefaults() *ProtoMemorySpec {
	this := ProtoMemorySpec{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ProtoMemorySpec) GetSize() string {
	if o == nil || isNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoMemorySpec) GetSizeOk() (*string, bool) {
	if o == nil || isNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ProtoMemorySpec) HasSize() bool {
	if o != nil && !isNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *ProtoMemorySpec) SetSize(v string) {
	o.Size = &v
}

// GetDimmSize returns the DimmSize field value if set, zero value otherwise.
func (o *ProtoMemorySpec) GetDimmSize() string {
	if o == nil || isNil(o.DimmSize) {
		var ret string
		return ret
	}
	return *o.DimmSize
}

// GetDimmSizeOk returns a tuple with the DimmSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoMemorySpec) GetDimmSizeOk() (*string, bool) {
	if o == nil || isNil(o.DimmSize) {
		return nil, false
	}
	return o.DimmSize, true
}

// HasDimmSize returns a boolean if a field has been set.
func (o *ProtoMemorySpec) HasDimmSize() bool {
	if o != nil && !isNil(o.DimmSize) {
		return true
	}

	return false
}

// SetDimmSize gets a reference to the given string and assigns it to the DimmSize field.
func (o *ProtoMemorySpec) SetDimmSize(v string) {
	o.DimmSize = &v
}

// GetDimmCount returns the DimmCount field value if set, zero value otherwise.
func (o *ProtoMemorySpec) GetDimmCount() int32 {
	if o == nil || isNil(o.DimmCount) {
		var ret int32
		return ret
	}
	return *o.DimmCount
}

// GetDimmCountOk returns a tuple with the DimmCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoMemorySpec) GetDimmCountOk() (*int32, bool) {
	if o == nil || isNil(o.DimmCount) {
		return nil, false
	}
	return o.DimmCount, true
}

// HasDimmCount returns a boolean if a field has been set.
func (o *ProtoMemorySpec) HasDimmCount() bool {
	if o != nil && !isNil(o.DimmCount) {
		return true
	}

	return false
}

// SetDimmCount gets a reference to the given int32 and assigns it to the DimmCount field.
func (o *ProtoMemorySpec) SetDimmCount(v int32) {
	o.DimmCount = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *ProtoMemorySpec) GetSpeed() int32 {
	if o == nil || isNil(o.Speed) {
		var ret int32
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoMemorySpec) GetSpeedOk() (*int32, bool) {
	if o == nil || isNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *ProtoMemorySpec) HasSpeed() bool {
	if o != nil && !isNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given int32 and assigns it to the Speed field.
func (o *ProtoMemorySpec) SetSpeed(v int32) {
	o.Speed = &v
}

func (o ProtoMemorySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !isNil(o.DimmSize) {
		toSerialize["dimmSize"] = o.DimmSize
	}
	if !isNil(o.DimmCount) {
		toSerialize["dimmCount"] = o.DimmCount
	}
	if !isNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	return json.Marshal(toSerialize)
}

type NullableProtoMemorySpec struct {
	value *ProtoMemorySpec
	isSet bool
}

func (v NullableProtoMemorySpec) Get() *ProtoMemorySpec {
	return v.value
}

func (v *NullableProtoMemorySpec) Set(val *ProtoMemorySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoMemorySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoMemorySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoMemorySpec(val *ProtoMemorySpec) *NullableProtoMemorySpec {
	return &NullableProtoMemorySpec{value: val, isSet: true}
}

func (v NullableProtoMemorySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoMemorySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
