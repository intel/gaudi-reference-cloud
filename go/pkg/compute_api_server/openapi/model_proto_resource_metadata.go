/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ProtoResourceMetadata struct for ProtoResourceMetadata
type ProtoResourceMetadata struct {
	CloudAccountId *string `json:"cloudAccountId,omitempty"`
	Name           *string `json:"name,omitempty"`
	// A globally unique UUID.
	ResourceId        *string            `json:"resourceId,omitempty"`
	Labels            *map[string]string `json:"labels,omitempty"`
	CreationTimestamp *time.Time         `json:"creationTimestamp,omitempty"`
	AllowDelete       *bool              `json:"allowDelete,omitempty"`
}

// NewProtoResourceMetadata instantiates a new ProtoResourceMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoResourceMetadata() *ProtoResourceMetadata {
	this := ProtoResourceMetadata{}
	return &this
}

// NewProtoResourceMetadataWithDefaults instantiates a new ProtoResourceMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoResourceMetadataWithDefaults() *ProtoResourceMetadata {
	this := ProtoResourceMetadata{}
	return &this
}

// GetCloudAccountId returns the CloudAccountId field value if set, zero value otherwise.
func (o *ProtoResourceMetadata) GetCloudAccountId() string {
	if o == nil || isNil(o.CloudAccountId) {
		var ret string
		return ret
	}
	return *o.CloudAccountId
}

// GetCloudAccountIdOk returns a tuple with the CloudAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoResourceMetadata) GetCloudAccountIdOk() (*string, bool) {
	if o == nil || isNil(o.CloudAccountId) {
		return nil, false
	}
	return o.CloudAccountId, true
}

// HasCloudAccountId returns a boolean if a field has been set.
func (o *ProtoResourceMetadata) HasCloudAccountId() bool {
	if o != nil && !isNil(o.CloudAccountId) {
		return true
	}

	return false
}

// SetCloudAccountId gets a reference to the given string and assigns it to the CloudAccountId field.
func (o *ProtoResourceMetadata) SetCloudAccountId(v string) {
	o.CloudAccountId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProtoResourceMetadata) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoResourceMetadata) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProtoResourceMetadata) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProtoResourceMetadata) SetName(v string) {
	o.Name = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *ProtoResourceMetadata) GetResourceId() string {
	if o == nil || isNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoResourceMetadata) GetResourceIdOk() (*string, bool) {
	if o == nil || isNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *ProtoResourceMetadata) HasResourceId() bool {
	if o != nil && !isNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *ProtoResourceMetadata) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ProtoResourceMetadata) GetLabels() map[string]string {
	if o == nil || isNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoResourceMetadata) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ProtoResourceMetadata) HasLabels() bool {
	if o != nil && !isNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *ProtoResourceMetadata) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetCreationTimestamp returns the CreationTimestamp field value if set, zero value otherwise.
func (o *ProtoResourceMetadata) GetCreationTimestamp() time.Time {
	if o == nil || isNil(o.CreationTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.CreationTimestamp
}

// GetCreationTimestampOk returns a tuple with the CreationTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoResourceMetadata) GetCreationTimestampOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreationTimestamp) {
		return nil, false
	}
	return o.CreationTimestamp, true
}

// HasCreationTimestamp returns a boolean if a field has been set.
func (o *ProtoResourceMetadata) HasCreationTimestamp() bool {
	if o != nil && !isNil(o.CreationTimestamp) {
		return true
	}

	return false
}

// SetCreationTimestamp gets a reference to the given time.Time and assigns it to the CreationTimestamp field.
func (o *ProtoResourceMetadata) SetCreationTimestamp(v time.Time) {
	o.CreationTimestamp = &v
}

// GetAllowDelete returns the AllowDelete field value if set, zero value otherwise.
func (o *ProtoResourceMetadata) GetAllowDelete() bool {
	if o == nil || isNil(o.AllowDelete) {
		var ret bool
		return ret
	}
	return *o.AllowDelete
}

// GetAllowDeleteOk returns a tuple with the AllowDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoResourceMetadata) GetAllowDeleteOk() (*bool, bool) {
	if o == nil || isNil(o.AllowDelete) {
		return nil, false
	}
	return o.AllowDelete, true
}

// HasAllowDelete returns a boolean if a field has been set.
func (o *ProtoResourceMetadata) HasAllowDelete() bool {
	if o != nil && !isNil(o.AllowDelete) {
		return true
	}

	return false
}

// SetAllowDelete gets a reference to the given bool and assigns it to the AllowDelete field.
func (o *ProtoResourceMetadata) SetAllowDelete(v bool) {
	o.AllowDelete = &v
}

func (o ProtoResourceMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CloudAccountId) {
		toSerialize["cloudAccountId"] = o.CloudAccountId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	if !isNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !isNil(o.CreationTimestamp) {
		toSerialize["creationTimestamp"] = o.CreationTimestamp
	}
	if !isNil(o.AllowDelete) {
		toSerialize["allowDelete"] = o.AllowDelete
	}
	return json.Marshal(toSerialize)
}

type NullableProtoResourceMetadata struct {
	value *ProtoResourceMetadata
	isSet bool
}

func (v NullableProtoResourceMetadata) Get() *ProtoResourceMetadata {
	return v.value
}

func (v *NullableProtoResourceMetadata) Set(val *ProtoResourceMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoResourceMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoResourceMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoResourceMetadata(val *ProtoResourceMetadata) *NullableProtoResourceMetadata {
	return &NullableProtoResourceMetadata{value: val, isSet: true}
}

func (v NullableProtoResourceMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoResourceMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
