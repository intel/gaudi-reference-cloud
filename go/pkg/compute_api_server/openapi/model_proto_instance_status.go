/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoInstanceStatus struct for ProtoInstanceStatus
type ProtoInstanceStatus struct {
	Phase *ProtoInstancePhase `json:"phase,omitempty"`
	// Additional details about the state or any error conditions.
	Message *string `json:"message,omitempty"`
	// A list of network interfaces, along with the private IP address assigned to the interface.
	Interfaces []ProtoInstanceInterfaceStatus `json:"interfaces,omitempty"`
	SshProxy   *ProtoSshProxyTunnelStatus     `json:"sshProxy,omitempty"`
	// The user name that should be used to SSH into the instance.
	UserName *string `json:"userName,omitempty"`
}

// NewProtoInstanceStatus instantiates a new ProtoInstanceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoInstanceStatus() *ProtoInstanceStatus {
	this := ProtoInstanceStatus{}
	var phase ProtoInstancePhase = PROVISIONING
	this.Phase = &phase
	return &this
}

// NewProtoInstanceStatusWithDefaults instantiates a new ProtoInstanceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoInstanceStatusWithDefaults() *ProtoInstanceStatus {
	this := ProtoInstanceStatus{}
	var phase ProtoInstancePhase = PROVISIONING
	this.Phase = &phase
	return &this
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *ProtoInstanceStatus) GetPhase() ProtoInstancePhase {
	if o == nil || isNil(o.Phase) {
		var ret ProtoInstancePhase
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceStatus) GetPhaseOk() (*ProtoInstancePhase, bool) {
	if o == nil || isNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *ProtoInstanceStatus) HasPhase() bool {
	if o != nil && !isNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given ProtoInstancePhase and assigns it to the Phase field.
func (o *ProtoInstanceStatus) SetPhase(v ProtoInstancePhase) {
	o.Phase = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ProtoInstanceStatus) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceStatus) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ProtoInstanceStatus) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ProtoInstanceStatus) SetMessage(v string) {
	o.Message = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *ProtoInstanceStatus) GetInterfaces() []ProtoInstanceInterfaceStatus {
	if o == nil || isNil(o.Interfaces) {
		var ret []ProtoInstanceInterfaceStatus
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceStatus) GetInterfacesOk() ([]ProtoInstanceInterfaceStatus, bool) {
	if o == nil || isNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *ProtoInstanceStatus) HasInterfaces() bool {
	if o != nil && !isNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []ProtoInstanceInterfaceStatus and assigns it to the Interfaces field.
func (o *ProtoInstanceStatus) SetInterfaces(v []ProtoInstanceInterfaceStatus) {
	o.Interfaces = v
}

// GetSshProxy returns the SshProxy field value if set, zero value otherwise.
func (o *ProtoInstanceStatus) GetSshProxy() ProtoSshProxyTunnelStatus {
	if o == nil || isNil(o.SshProxy) {
		var ret ProtoSshProxyTunnelStatus
		return ret
	}
	return *o.SshProxy
}

// GetSshProxyOk returns a tuple with the SshProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceStatus) GetSshProxyOk() (*ProtoSshProxyTunnelStatus, bool) {
	if o == nil || isNil(o.SshProxy) {
		return nil, false
	}
	return o.SshProxy, true
}

// HasSshProxy returns a boolean if a field has been set.
func (o *ProtoInstanceStatus) HasSshProxy() bool {
	if o != nil && !isNil(o.SshProxy) {
		return true
	}

	return false
}

// SetSshProxy gets a reference to the given ProtoSshProxyTunnelStatus and assigns it to the SshProxy field.
func (o *ProtoInstanceStatus) SetSshProxy(v ProtoSshProxyTunnelStatus) {
	o.SshProxy = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *ProtoInstanceStatus) GetUserName() string {
	if o == nil || isNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceStatus) GetUserNameOk() (*string, bool) {
	if o == nil || isNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *ProtoInstanceStatus) HasUserName() bool {
	if o != nil && !isNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *ProtoInstanceStatus) SetUserName(v string) {
	o.UserName = &v
}

func (o ProtoInstanceStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !isNil(o.SshProxy) {
		toSerialize["sshProxy"] = o.SshProxy
	}
	if !isNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	return json.Marshal(toSerialize)
}

type NullableProtoInstanceStatus struct {
	value *ProtoInstanceStatus
	isSet bool
}

func (v NullableProtoInstanceStatus) Get() *ProtoInstanceStatus {
	return v.value
}

func (v *NullableProtoInstanceStatus) Set(val *ProtoInstanceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoInstanceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoInstanceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoInstanceStatus(val *ProtoInstanceStatus) *NullableProtoInstanceStatus {
	return &NullableProtoInstanceStatus{value: val, isSet: true}
}

func (v NullableProtoInstanceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoInstanceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
