/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoInstanceSearchResponse struct for ProtoInstanceSearchResponse
type ProtoInstanceSearchResponse struct {
	Items []ProtoInstance `json:"items,omitempty"`
}

// NewProtoInstanceSearchResponse instantiates a new ProtoInstanceSearchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoInstanceSearchResponse() *ProtoInstanceSearchResponse {
	this := ProtoInstanceSearchResponse{}
	return &this
}

// NewProtoInstanceSearchResponseWithDefaults instantiates a new ProtoInstanceSearchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoInstanceSearchResponseWithDefaults() *ProtoInstanceSearchResponse {
	this := ProtoInstanceSearchResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ProtoInstanceSearchResponse) GetItems() []ProtoInstance {
	if o == nil || isNil(o.Items) {
		var ret []ProtoInstance
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSearchResponse) GetItemsOk() ([]ProtoInstance, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ProtoInstanceSearchResponse) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ProtoInstance and assigns it to the Items field.
func (o *ProtoInstanceSearchResponse) SetItems(v []ProtoInstance) {
	o.Items = v
}

func (o ProtoInstanceSearchResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableProtoInstanceSearchResponse struct {
	value *ProtoInstanceSearchResponse
	isSet bool
}

func (v NullableProtoInstanceSearchResponse) Get() *ProtoInstanceSearchResponse {
	return v.value
}

func (v *NullableProtoInstanceSearchResponse) Set(val *ProtoInstanceSearchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoInstanceSearchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoInstanceSearchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoInstanceSearchResponse(val *ProtoInstanceSearchResponse) *NullableProtoInstanceSearchResponse {
	return &NullableProtoInstanceSearchResponse{value: val, isSet: true}
}

func (v NullableProtoInstanceSearchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoInstanceSearchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
