/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoLoadBalancerSpecUpdate struct for ProtoLoadBalancerSpecUpdate
type ProtoLoadBalancerSpecUpdate struct {
	Listeners []ProtoLoadBalancerListener `json:"listeners,omitempty"`
	Security  *ProtoLoadBalancerSecurity  `json:"security,omitempty"`
}

// NewProtoLoadBalancerSpecUpdate instantiates a new ProtoLoadBalancerSpecUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoLoadBalancerSpecUpdate() *ProtoLoadBalancerSpecUpdate {
	this := ProtoLoadBalancerSpecUpdate{}
	return &this
}

// NewProtoLoadBalancerSpecUpdateWithDefaults instantiates a new ProtoLoadBalancerSpecUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoLoadBalancerSpecUpdateWithDefaults() *ProtoLoadBalancerSpecUpdate {
	this := ProtoLoadBalancerSpecUpdate{}
	return &this
}

// GetListeners returns the Listeners field value if set, zero value otherwise.
func (o *ProtoLoadBalancerSpecUpdate) GetListeners() []ProtoLoadBalancerListener {
	if o == nil || isNil(o.Listeners) {
		var ret []ProtoLoadBalancerListener
		return ret
	}
	return o.Listeners
}

// GetListenersOk returns a tuple with the Listeners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoLoadBalancerSpecUpdate) GetListenersOk() ([]ProtoLoadBalancerListener, bool) {
	if o == nil || isNil(o.Listeners) {
		return nil, false
	}
	return o.Listeners, true
}

// HasListeners returns a boolean if a field has been set.
func (o *ProtoLoadBalancerSpecUpdate) HasListeners() bool {
	if o != nil && !isNil(o.Listeners) {
		return true
	}

	return false
}

// SetListeners gets a reference to the given []ProtoLoadBalancerListener and assigns it to the Listeners field.
func (o *ProtoLoadBalancerSpecUpdate) SetListeners(v []ProtoLoadBalancerListener) {
	o.Listeners = v
}

// GetSecurity returns the Security field value if set, zero value otherwise.
func (o *ProtoLoadBalancerSpecUpdate) GetSecurity() ProtoLoadBalancerSecurity {
	if o == nil || isNil(o.Security) {
		var ret ProtoLoadBalancerSecurity
		return ret
	}
	return *o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoLoadBalancerSpecUpdate) GetSecurityOk() (*ProtoLoadBalancerSecurity, bool) {
	if o == nil || isNil(o.Security) {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *ProtoLoadBalancerSpecUpdate) HasSecurity() bool {
	if o != nil && !isNil(o.Security) {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given ProtoLoadBalancerSecurity and assigns it to the Security field.
func (o *ProtoLoadBalancerSpecUpdate) SetSecurity(v ProtoLoadBalancerSecurity) {
	o.Security = &v
}

func (o ProtoLoadBalancerSpecUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Listeners) {
		toSerialize["listeners"] = o.Listeners
	}
	if !isNil(o.Security) {
		toSerialize["security"] = o.Security
	}
	return json.Marshal(toSerialize)
}

type NullableProtoLoadBalancerSpecUpdate struct {
	value *ProtoLoadBalancerSpecUpdate
	isSet bool
}

func (v NullableProtoLoadBalancerSpecUpdate) Get() *ProtoLoadBalancerSpecUpdate {
	return v.value
}

func (v *NullableProtoLoadBalancerSpecUpdate) Set(val *ProtoLoadBalancerSpecUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoLoadBalancerSpecUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoLoadBalancerSpecUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoLoadBalancerSpecUpdate(val *ProtoLoadBalancerSpecUpdate) *NullableProtoLoadBalancerSpecUpdate {
	return &NullableProtoLoadBalancerSpecUpdate{value: val, isSet: true}
}

func (v NullableProtoLoadBalancerSpecUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoLoadBalancerSpecUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
