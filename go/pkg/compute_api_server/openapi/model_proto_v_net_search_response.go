/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoVNetSearchResponse struct for ProtoVNetSearchResponse
type ProtoVNetSearchResponse struct {
	Items []ProtoVNet `json:"items,omitempty"`
}

// NewProtoVNetSearchResponse instantiates a new ProtoVNetSearchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoVNetSearchResponse() *ProtoVNetSearchResponse {
	this := ProtoVNetSearchResponse{}
	return &this
}

// NewProtoVNetSearchResponseWithDefaults instantiates a new ProtoVNetSearchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoVNetSearchResponseWithDefaults() *ProtoVNetSearchResponse {
	this := ProtoVNetSearchResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ProtoVNetSearchResponse) GetItems() []ProtoVNet {
	if o == nil || isNil(o.Items) {
		var ret []ProtoVNet
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoVNetSearchResponse) GetItemsOk() ([]ProtoVNet, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ProtoVNetSearchResponse) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ProtoVNet and assigns it to the Items field.
func (o *ProtoVNetSearchResponse) SetItems(v []ProtoVNet) {
	o.Items = v
}

func (o ProtoVNetSearchResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableProtoVNetSearchResponse struct {
	value *ProtoVNetSearchResponse
	isSet bool
}

func (v NullableProtoVNetSearchResponse) Get() *ProtoVNetSearchResponse {
	return v.value
}

func (v *NullableProtoVNetSearchResponse) Set(val *ProtoVNetSearchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoVNetSearchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoVNetSearchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoVNetSearchResponse(val *ProtoVNetSearchResponse) *NullableProtoVNetSearchResponse {
	return &NullableProtoVNetSearchResponse{value: val, isSet: true}
}

func (v NullableProtoVNetSearchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoVNetSearchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
