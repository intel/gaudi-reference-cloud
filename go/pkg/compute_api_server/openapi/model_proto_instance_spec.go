/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProtoInstanceSpec struct for ProtoInstanceSpec
type ProtoInstanceSpec struct {
	// Not implemented.
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	// The name of an InstanceType.
	InstanceType *string `json:"instanceType,omitempty"`
	// The name of a MachineImage. Not implemented.
	MachineImage *string           `json:"machineImage,omitempty"`
	RunStrategy  *ProtoRunStrategy `json:"runStrategy,omitempty"`
	// The name of a previously stored SSH public key. Users can use the corresponding SSH private key to SSH to this instance.
	SshPublicKeyNames []string `json:"sshPublicKeyNames,omitempty"`
	// Not implemented.
	Interfaces []ProtoNetworkInterface `json:"interfaces,omitempty"`
	// This controls how instances are spread across the failure domains within the availability zone. This can help to achieve high availability. If this contains at least one key/value pair in matchLabels, then instances that have all of these key/value pairs will be placed evenly across failure domains.
	TopologySpreadConstraints []ProtoTopologySpreadConstraints `json:"topologySpreadConstraints,omitempty"`
	UserData                  *string                          `json:"userData,omitempty"`
	// If not empty, this instance is part of the named instance group.
	InstanceGroup       *string        `json:"instanceGroup,omitempty"`
	QuickConnectEnabled *ProtoTriState `json:"quickConnectEnabled,omitempty"`
}

// NewProtoInstanceSpec instantiates a new ProtoInstanceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtoInstanceSpec() *ProtoInstanceSpec {
	this := ProtoInstanceSpec{}
	var runStrategy ProtoRunStrategy = RERUN_ON_FAILURE
	this.RunStrategy = &runStrategy
	var quickConnectEnabled ProtoTriState = UNDEFINED
	this.QuickConnectEnabled = &quickConnectEnabled
	return &this
}

// NewProtoInstanceSpecWithDefaults instantiates a new ProtoInstanceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtoInstanceSpecWithDefaults() *ProtoInstanceSpec {
	this := ProtoInstanceSpec{}
	var runStrategy ProtoRunStrategy = RERUN_ON_FAILURE
	this.RunStrategy = &runStrategy
	var quickConnectEnabled ProtoTriState = UNDEFINED
	this.QuickConnectEnabled = &quickConnectEnabled
	return &this
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetAvailabilityZone() string {
	if o == nil || isNil(o.AvailabilityZone) {
		var ret string
		return ret
	}
	return *o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil || isNil(o.AvailabilityZone) {
		return nil, false
	}
	return o.AvailabilityZone, true
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasAvailabilityZone() bool {
	if o != nil && !isNil(o.AvailabilityZone) {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given string and assigns it to the AvailabilityZone field.
func (o *ProtoInstanceSpec) SetAvailabilityZone(v string) {
	o.AvailabilityZone = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetInstanceType() string {
	if o == nil || isNil(o.InstanceType) {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetInstanceTypeOk() (*string, bool) {
	if o == nil || isNil(o.InstanceType) {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasInstanceType() bool {
	if o != nil && !isNil(o.InstanceType) {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *ProtoInstanceSpec) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetMachineImage returns the MachineImage field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetMachineImage() string {
	if o == nil || isNil(o.MachineImage) {
		var ret string
		return ret
	}
	return *o.MachineImage
}

// GetMachineImageOk returns a tuple with the MachineImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetMachineImageOk() (*string, bool) {
	if o == nil || isNil(o.MachineImage) {
		return nil, false
	}
	return o.MachineImage, true
}

// HasMachineImage returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasMachineImage() bool {
	if o != nil && !isNil(o.MachineImage) {
		return true
	}

	return false
}

// SetMachineImage gets a reference to the given string and assigns it to the MachineImage field.
func (o *ProtoInstanceSpec) SetMachineImage(v string) {
	o.MachineImage = &v
}

// GetRunStrategy returns the RunStrategy field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetRunStrategy() ProtoRunStrategy {
	if o == nil || isNil(o.RunStrategy) {
		var ret ProtoRunStrategy
		return ret
	}
	return *o.RunStrategy
}

// GetRunStrategyOk returns a tuple with the RunStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetRunStrategyOk() (*ProtoRunStrategy, bool) {
	if o == nil || isNil(o.RunStrategy) {
		return nil, false
	}
	return o.RunStrategy, true
}

// HasRunStrategy returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasRunStrategy() bool {
	if o != nil && !isNil(o.RunStrategy) {
		return true
	}

	return false
}

// SetRunStrategy gets a reference to the given ProtoRunStrategy and assigns it to the RunStrategy field.
func (o *ProtoInstanceSpec) SetRunStrategy(v ProtoRunStrategy) {
	o.RunStrategy = &v
}

// GetSshPublicKeyNames returns the SshPublicKeyNames field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetSshPublicKeyNames() []string {
	if o == nil || isNil(o.SshPublicKeyNames) {
		var ret []string
		return ret
	}
	return o.SshPublicKeyNames
}

// GetSshPublicKeyNamesOk returns a tuple with the SshPublicKeyNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetSshPublicKeyNamesOk() ([]string, bool) {
	if o == nil || isNil(o.SshPublicKeyNames) {
		return nil, false
	}
	return o.SshPublicKeyNames, true
}

// HasSshPublicKeyNames returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasSshPublicKeyNames() bool {
	if o != nil && !isNil(o.SshPublicKeyNames) {
		return true
	}

	return false
}

// SetSshPublicKeyNames gets a reference to the given []string and assigns it to the SshPublicKeyNames field.
func (o *ProtoInstanceSpec) SetSshPublicKeyNames(v []string) {
	o.SshPublicKeyNames = v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetInterfaces() []ProtoNetworkInterface {
	if o == nil || isNil(o.Interfaces) {
		var ret []ProtoNetworkInterface
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetInterfacesOk() ([]ProtoNetworkInterface, bool) {
	if o == nil || isNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasInterfaces() bool {
	if o != nil && !isNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []ProtoNetworkInterface and assigns it to the Interfaces field.
func (o *ProtoInstanceSpec) SetInterfaces(v []ProtoNetworkInterface) {
	o.Interfaces = v
}

// GetTopologySpreadConstraints returns the TopologySpreadConstraints field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetTopologySpreadConstraints() []ProtoTopologySpreadConstraints {
	if o == nil || isNil(o.TopologySpreadConstraints) {
		var ret []ProtoTopologySpreadConstraints
		return ret
	}
	return o.TopologySpreadConstraints
}

// GetTopologySpreadConstraintsOk returns a tuple with the TopologySpreadConstraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetTopologySpreadConstraintsOk() ([]ProtoTopologySpreadConstraints, bool) {
	if o == nil || isNil(o.TopologySpreadConstraints) {
		return nil, false
	}
	return o.TopologySpreadConstraints, true
}

// HasTopologySpreadConstraints returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasTopologySpreadConstraints() bool {
	if o != nil && !isNil(o.TopologySpreadConstraints) {
		return true
	}

	return false
}

// SetTopologySpreadConstraints gets a reference to the given []ProtoTopologySpreadConstraints and assigns it to the TopologySpreadConstraints field.
func (o *ProtoInstanceSpec) SetTopologySpreadConstraints(v []ProtoTopologySpreadConstraints) {
	o.TopologySpreadConstraints = v
}

// GetUserData returns the UserData field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetUserData() string {
	if o == nil || isNil(o.UserData) {
		var ret string
		return ret
	}
	return *o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetUserDataOk() (*string, bool) {
	if o == nil || isNil(o.UserData) {
		return nil, false
	}
	return o.UserData, true
}

// HasUserData returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasUserData() bool {
	if o != nil && !isNil(o.UserData) {
		return true
	}

	return false
}

// SetUserData gets a reference to the given string and assigns it to the UserData field.
func (o *ProtoInstanceSpec) SetUserData(v string) {
	o.UserData = &v
}

// GetInstanceGroup returns the InstanceGroup field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetInstanceGroup() string {
	if o == nil || isNil(o.InstanceGroup) {
		var ret string
		return ret
	}
	return *o.InstanceGroup
}

// GetInstanceGroupOk returns a tuple with the InstanceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetInstanceGroupOk() (*string, bool) {
	if o == nil || isNil(o.InstanceGroup) {
		return nil, false
	}
	return o.InstanceGroup, true
}

// HasInstanceGroup returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasInstanceGroup() bool {
	if o != nil && !isNil(o.InstanceGroup) {
		return true
	}

	return false
}

// SetInstanceGroup gets a reference to the given string and assigns it to the InstanceGroup field.
func (o *ProtoInstanceSpec) SetInstanceGroup(v string) {
	o.InstanceGroup = &v
}

// GetQuickConnectEnabled returns the QuickConnectEnabled field value if set, zero value otherwise.
func (o *ProtoInstanceSpec) GetQuickConnectEnabled() ProtoTriState {
	if o == nil || isNil(o.QuickConnectEnabled) {
		var ret ProtoTriState
		return ret
	}
	return *o.QuickConnectEnabled
}

// GetQuickConnectEnabledOk returns a tuple with the QuickConnectEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtoInstanceSpec) GetQuickConnectEnabledOk() (*ProtoTriState, bool) {
	if o == nil || isNil(o.QuickConnectEnabled) {
		return nil, false
	}
	return o.QuickConnectEnabled, true
}

// HasQuickConnectEnabled returns a boolean if a field has been set.
func (o *ProtoInstanceSpec) HasQuickConnectEnabled() bool {
	if o != nil && !isNil(o.QuickConnectEnabled) {
		return true
	}

	return false
}

// SetQuickConnectEnabled gets a reference to the given ProtoTriState and assigns it to the QuickConnectEnabled field.
func (o *ProtoInstanceSpec) SetQuickConnectEnabled(v ProtoTriState) {
	o.QuickConnectEnabled = &v
}

func (o ProtoInstanceSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AvailabilityZone) {
		toSerialize["availabilityZone"] = o.AvailabilityZone
	}
	if !isNil(o.InstanceType) {
		toSerialize["instanceType"] = o.InstanceType
	}
	if !isNil(o.MachineImage) {
		toSerialize["machineImage"] = o.MachineImage
	}
	if !isNil(o.RunStrategy) {
		toSerialize["runStrategy"] = o.RunStrategy
	}
	if !isNil(o.SshPublicKeyNames) {
		toSerialize["sshPublicKeyNames"] = o.SshPublicKeyNames
	}
	if !isNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !isNil(o.TopologySpreadConstraints) {
		toSerialize["topologySpreadConstraints"] = o.TopologySpreadConstraints
	}
	if !isNil(o.UserData) {
		toSerialize["userData"] = o.UserData
	}
	if !isNil(o.InstanceGroup) {
		toSerialize["instanceGroup"] = o.InstanceGroup
	}
	if !isNil(o.QuickConnectEnabled) {
		toSerialize["quickConnectEnabled"] = o.QuickConnectEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableProtoInstanceSpec struct {
	value *ProtoInstanceSpec
	isSet bool
}

func (v NullableProtoInstanceSpec) Get() *ProtoInstanceSpec {
	return v.value
}

func (v *NullableProtoInstanceSpec) Set(val *ProtoInstanceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableProtoInstanceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableProtoInstanceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtoInstanceSpec(val *ProtoInstanceSpec) *NullableProtoInstanceSpec {
	return &NullableProtoInstanceSpec{value: val, isSet: true}
}

func (v NullableProtoInstanceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtoInstanceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
