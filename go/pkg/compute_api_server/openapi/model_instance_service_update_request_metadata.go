/*
compute.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InstanceServiceUpdateRequestMetadata struct for InstanceServiceUpdateRequestMetadata
type InstanceServiceUpdateRequestMetadata struct {
	Name *string `json:"name,omitempty"`
	// If provided, the existing record must have this resourceVersion for the request to succeed.
	ResourceVersion *string `json:"resourceVersion,omitempty"`
	// The entire set of labels will be replaced with these labels. Not implemented.
	Labels *map[string]string `json:"labels,omitempty"`
	// Reserved. Added this field to overcome openAPi-same-struct issue.
	Reserved1 *string `json:"reserved1,omitempty"`
}

// NewInstanceServiceUpdateRequestMetadata instantiates a new InstanceServiceUpdateRequestMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceServiceUpdateRequestMetadata() *InstanceServiceUpdateRequestMetadata {
	this := InstanceServiceUpdateRequestMetadata{}
	return &this
}

// NewInstanceServiceUpdateRequestMetadataWithDefaults instantiates a new InstanceServiceUpdateRequestMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceServiceUpdateRequestMetadataWithDefaults() *InstanceServiceUpdateRequestMetadata {
	this := InstanceServiceUpdateRequestMetadata{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InstanceServiceUpdateRequestMetadata) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceServiceUpdateRequestMetadata) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InstanceServiceUpdateRequestMetadata) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InstanceServiceUpdateRequestMetadata) SetName(v string) {
	o.Name = &v
}

// GetResourceVersion returns the ResourceVersion field value if set, zero value otherwise.
func (o *InstanceServiceUpdateRequestMetadata) GetResourceVersion() string {
	if o == nil || isNil(o.ResourceVersion) {
		var ret string
		return ret
	}
	return *o.ResourceVersion
}

// GetResourceVersionOk returns a tuple with the ResourceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceServiceUpdateRequestMetadata) GetResourceVersionOk() (*string, bool) {
	if o == nil || isNil(o.ResourceVersion) {
		return nil, false
	}
	return o.ResourceVersion, true
}

// HasResourceVersion returns a boolean if a field has been set.
func (o *InstanceServiceUpdateRequestMetadata) HasResourceVersion() bool {
	if o != nil && !isNil(o.ResourceVersion) {
		return true
	}

	return false
}

// SetResourceVersion gets a reference to the given string and assigns it to the ResourceVersion field.
func (o *InstanceServiceUpdateRequestMetadata) SetResourceVersion(v string) {
	o.ResourceVersion = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *InstanceServiceUpdateRequestMetadata) GetLabels() map[string]string {
	if o == nil || isNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceServiceUpdateRequestMetadata) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *InstanceServiceUpdateRequestMetadata) HasLabels() bool {
	if o != nil && !isNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *InstanceServiceUpdateRequestMetadata) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetReserved1 returns the Reserved1 field value if set, zero value otherwise.
func (o *InstanceServiceUpdateRequestMetadata) GetReserved1() string {
	if o == nil || isNil(o.Reserved1) {
		var ret string
		return ret
	}
	return *o.Reserved1
}

// GetReserved1Ok returns a tuple with the Reserved1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceServiceUpdateRequestMetadata) GetReserved1Ok() (*string, bool) {
	if o == nil || isNil(o.Reserved1) {
		return nil, false
	}
	return o.Reserved1, true
}

// HasReserved1 returns a boolean if a field has been set.
func (o *InstanceServiceUpdateRequestMetadata) HasReserved1() bool {
	if o != nil && !isNil(o.Reserved1) {
		return true
	}

	return false
}

// SetReserved1 gets a reference to the given string and assigns it to the Reserved1 field.
func (o *InstanceServiceUpdateRequestMetadata) SetReserved1(v string) {
	o.Reserved1 = &v
}

func (o InstanceServiceUpdateRequestMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.ResourceVersion) {
		toSerialize["resourceVersion"] = o.ResourceVersion
	}
	if !isNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !isNil(o.Reserved1) {
		toSerialize["reserved1"] = o.Reserved1
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceServiceUpdateRequestMetadata struct {
	value *InstanceServiceUpdateRequestMetadata
	isSet bool
}

func (v NullableInstanceServiceUpdateRequestMetadata) Get() *InstanceServiceUpdateRequestMetadata {
	return v.value
}

func (v *NullableInstanceServiceUpdateRequestMetadata) Set(val *InstanceServiceUpdateRequestMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceServiceUpdateRequestMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceServiceUpdateRequestMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceServiceUpdateRequestMetadata(val *InstanceServiceUpdateRequestMetadata) *NullableInstanceServiceUpdateRequestMetadata {
	return &NullableInstanceServiceUpdateRequestMetadata{value: val, isSet: true}
}

func (v NullableInstanceServiceUpdateRequestMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceServiceUpdateRequestMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
