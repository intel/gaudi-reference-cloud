/*
Devcloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LoginPost200Response struct for LoginPost200Response
type LoginPost200Response struct {
	Message *string `json:"message,omitempty"`
	Role    *string `json:"role,omitempty"`
	Status  *bool   `json:"status,omitempty"`
	Token   *string `json:"token,omitempty"`
}

// NewLoginPost200Response instantiates a new LoginPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginPost200Response() *LoginPost200Response {
	this := LoginPost200Response{}
	return &this
}

// NewLoginPost200ResponseWithDefaults instantiates a new LoginPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginPost200ResponseWithDefaults() *LoginPost200Response {
	this := LoginPost200Response{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *LoginPost200Response) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginPost200Response) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *LoginPost200Response) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *LoginPost200Response) SetMessage(v string) {
	o.Message = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *LoginPost200Response) GetRole() string {
	if o == nil || isNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginPost200Response) GetRoleOk() (*string, bool) {
	if o == nil || isNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *LoginPost200Response) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *LoginPost200Response) SetRole(v string) {
	o.Role = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LoginPost200Response) GetStatus() bool {
	if o == nil || isNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginPost200Response) GetStatusOk() (*bool, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LoginPost200Response) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *LoginPost200Response) SetStatus(v bool) {
	o.Status = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *LoginPost200Response) GetToken() string {
	if o == nil || isNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginPost200Response) GetTokenOk() (*string, bool) {
	if o == nil || isNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *LoginPost200Response) HasToken() bool {
	if o != nil && !isNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *LoginPost200Response) SetToken(v string) {
	o.Token = &v
}

func (o LoginPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableLoginPost200Response struct {
	value *LoginPost200Response
	isSet bool
}

func (v NullableLoginPost200Response) Get() *LoginPost200Response {
	return v.value
}

func (v *NullableLoginPost200Response) Set(val *LoginPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginPost200Response(val *LoginPost200Response) *NullableLoginPost200Response {
	return &NullableLoginPost200Response{value: val, isSet: true}
}

func (v NullableLoginPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
