// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/storage/secrets (interfaces: VaultHelper)

// Package secrets is a generated GoMock package.
package secrets

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/vault/api"
)

// MockVaultHelper is a mock of VaultHelper interface.
type MockVaultHelper struct {
	ctrl     *gomock.Controller
	recorder *MockVaultHelperMockRecorder
}

// MockVaultHelperMockRecorder is the mock recorder for MockVaultHelper.
type MockVaultHelperMockRecorder struct {
	mock *MockVaultHelper
}

// NewMockVaultHelper creates a new mock instance.
func NewMockVaultHelper(ctrl *gomock.Controller) *MockVaultHelper {
	mock := &MockVaultHelper{ctrl: ctrl}
	mock.recorder = &MockVaultHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVaultHelper) EXPECT() *MockVaultHelperMockRecorder {
	return m.recorder
}

// deleteVaultSecrets mocks base method.
func (m *MockVaultHelper) deleteVaultSecrets(arg0 context.Context, arg1, arg2, arg3 string, arg4 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "deleteVaultSecrets", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// deleteVaultSecrets indicates an expected call of deleteVaultSecrets.
func (mr *MockVaultHelperMockRecorder) deleteVaultSecrets(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "deleteVaultSecrets", reflect.TypeOf((*MockVaultHelper)(nil).deleteVaultSecrets), arg0, arg1, arg2, arg3, arg4)
}

// getVaultAuthInfo mocks base method.
func (m *MockVaultHelper) getVaultAuthInfo(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getVaultAuthInfo", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// getVaultAuthInfo indicates an expected call of getVaultAuthInfo.
func (mr *MockVaultHelperMockRecorder) getVaultAuthInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getVaultAuthInfo", reflect.TypeOf((*MockVaultHelper)(nil).getVaultAuthInfo), arg0)
}

// getVaultClient mocks base method.
func (m *MockVaultHelper) getVaultClient(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getVaultClient", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// getVaultClient indicates an expected call of getVaultClient.
func (mr *MockVaultHelperMockRecorder) getVaultClient(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getVaultClient", reflect.TypeOf((*MockVaultHelper)(nil).getVaultClient), arg0)
}

// getVaultSecrets mocks base method.
func (m *MockVaultHelper) getVaultSecrets(arg0 context.Context, arg1, arg2, arg3 string, arg4 bool) (*api.KVSecret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getVaultSecrets", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*api.KVSecret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// getVaultSecrets indicates an expected call of getVaultSecrets.
func (mr *MockVaultHelperMockRecorder) getVaultSecrets(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getVaultSecrets", reflect.TypeOf((*MockVaultHelper)(nil).getVaultSecrets), arg0, arg1, arg2, arg3, arg4)
}

// putVaultSecrets mocks base method.
func (m *MockVaultHelper) putVaultSecrets(arg0 context.Context, arg1, arg2, arg3 string, arg4 map[string]interface{}, arg5 bool) (*api.KVSecret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "putVaultSecrets", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(*api.KVSecret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// putVaultSecrets indicates an expected call of putVaultSecrets.
func (mr *MockVaultHelperMockRecorder) putVaultSecrets(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "putVaultSecrets", reflect.TypeOf((*MockVaultHelper)(nil).putVaultSecrets), arg0, arg1, arg2, arg3, arg4, arg5)
}
