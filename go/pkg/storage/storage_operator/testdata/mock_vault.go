// Code generated by MockGen. DO NOT EDIT.
// Source: go/pkg/storage/secrets/vault.go

// Package mock_secrets is a generated GoMock package.
package mock_secrets

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/vault/api"
)

// MockSecretManager is a mock of SecretManager interface.
type MockSecretManager struct {
	ctrl     *gomock.Controller
	recorder *MockSecretManagerMockRecorder
}

// MockSecretManagerMockRecorder is the mock recorder for MockSecretManager.
type MockSecretManagerMockRecorder struct {
	mock *MockSecretManager
}

// NewMockSecretManager creates a new mock instance.
func NewMockSecretManager(ctrl *gomock.Controller) *MockSecretManager {
	mock := &MockSecretManager{ctrl: ctrl}
	mock.recorder = &MockSecretManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretManager) EXPECT() *MockSecretManagerMockRecorder {
	return m.recorder
}

// GetEnrollBasicAuth mocks base method.
func (m *MockSecretManager) GetEnrollBasicAuth(ctx context.Context, secretPath string, renewToken bool) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnrollBasicAuth", ctx, secretPath, renewToken)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetEnrollBasicAuth indicates an expected call of GetEnrollBasicAuth.
func (mr *MockSecretManagerMockRecorder) GetEnrollBasicAuth(ctx, secretPath, renewToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnrollBasicAuth", reflect.TypeOf((*MockSecretManager)(nil).GetEnrollBasicAuth), ctx, secretPath, renewToken)
}

// GetSTORAGECredentials mocks base method.
func (m *MockSecretManager) GetSTORAGECredentials(ctx context.Context, secretPath string, renewToken bool) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSTORAGECredentials", ctx, secretPath, renewToken)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetSTORAGECredentials indicates an expected call of GetSTORAGECredentials.
func (mr *MockSecretManagerMockRecorder) GetSTORAGECredentials(ctx, secretPath, renewToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSTORAGECredentials", reflect.TypeOf((*MockSecretManager)(nil).GetSTORAGECredentials), ctx, secretPath, renewToken)
}

// PutSTORAGESecrets mocks base method.
func (m *MockSecretManager) PutSTORAGESecrets(ctx context.Context, secretsPath string, kv map[string]interface{}, renewToken bool) (*api.KVSecret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutSTORAGESecrets", ctx, secretsPath, kv, renewToken)
	ret0, _ := ret[0].(*api.KVSecret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutSTORAGESecrets indicates an expected call of PutSTORAGESecrets.
func (mr *MockSecretManagerMockRecorder) PutSTORAGESecrets(ctx, secretsPath, kv, renewToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutSTORAGESecrets", reflect.TypeOf((*MockSecretManager)(nil).PutSTORAGESecrets), ctx, secretsPath, kv, renewToken)
}

// ValidateVaultClient mocks base method.
func (m *MockSecretManager) ValidateVaultClient(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateVaultClient", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateVaultClient indicates an expected call of ValidateVaultClient.
func (mr *MockSecretManagerMockRecorder) ValidateVaultClient(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateVaultClient", reflect.TypeOf((*MockSecretManager)(nil).ValidateVaultClient), ctx)
}

// MockSTORAGESecretAccessor is a mock of STORAGESecretAccessor interface.
type MockSTORAGESecretAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockSTORAGESecretAccessorMockRecorder
}

// MockSTORAGESecretAccessorMockRecorder is the mock recorder for MockSTORAGESecretAccessor.
type MockSTORAGESecretAccessorMockRecorder struct {
	mock *MockSTORAGESecretAccessor
}

// NewMockSTORAGESecretAccessor creates a new mock instance.
func NewMockSTORAGESecretAccessor(ctrl *gomock.Controller) *MockSTORAGESecretAccessor {
	mock := &MockSTORAGESecretAccessor{ctrl: ctrl}
	mock.recorder = &MockSTORAGESecretAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSTORAGESecretAccessor) EXPECT() *MockSTORAGESecretAccessorMockRecorder {
	return m.recorder
}

// GetSTORAGECredentials mocks base method.
func (m *MockSTORAGESecretAccessor) GetSTORAGECredentials(ctx context.Context, secretPath string, renewToken bool) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSTORAGECredentials", ctx, secretPath, renewToken)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetSTORAGECredentials indicates an expected call of GetSTORAGECredentials.
func (mr *MockSTORAGESecretAccessorMockRecorder) GetSTORAGECredentials(ctx, secretPath, renewToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSTORAGECredentials", reflect.TypeOf((*MockSTORAGESecretAccessor)(nil).GetSTORAGECredentials), ctx, secretPath, renewToken)
}

// PutSTORAGESecrets mocks base method.
func (m *MockSTORAGESecretAccessor) PutSTORAGESecrets(ctx context.Context, secretsPath string, kv map[string]interface{}, renewToken bool) (*api.KVSecret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutSTORAGESecrets", ctx, secretsPath, kv, renewToken)
	ret0, _ := ret[0].(*api.KVSecret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutSTORAGESecrets indicates an expected call of PutSTORAGESecrets.
func (mr *MockSTORAGESecretAccessorMockRecorder) PutSTORAGESecrets(ctx, secretsPath, kv, renewToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutSTORAGESecrets", reflect.TypeOf((*MockSTORAGESecretAccessor)(nil).PutSTORAGESecrets), ctx, secretsPath, kv, renewToken)
}

// MockValidateVaultClientAccessor is a mock of ValidateVaultClientAccessor interface.
type MockValidateVaultClientAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockValidateVaultClientAccessorMockRecorder
}

// MockValidateVaultClientAccessorMockRecorder is the mock recorder for MockValidateVaultClientAccessor.
type MockValidateVaultClientAccessorMockRecorder struct {
	mock *MockValidateVaultClientAccessor
}

// NewMockValidateVaultClientAccessor creates a new mock instance.
func NewMockValidateVaultClientAccessor(ctrl *gomock.Controller) *MockValidateVaultClientAccessor {
	mock := &MockValidateVaultClientAccessor{ctrl: ctrl}
	mock.recorder = &MockValidateVaultClientAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidateVaultClientAccessor) EXPECT() *MockValidateVaultClientAccessorMockRecorder {
	return m.recorder
}

// ValidateVaultClient mocks base method.
func (m *MockValidateVaultClientAccessor) ValidateVaultClient(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateVaultClient", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateVaultClient indicates an expected call of ValidateVaultClient.
func (mr *MockValidateVaultClientAccessorMockRecorder) ValidateVaultClient(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateVaultClient", reflect.TypeOf((*MockValidateVaultClientAccessor)(nil).ValidateVaultClient), ctx)
}

// MockVaultHelper is a mock of VaultHelper interface.
type MockVaultHelper struct {
	ctrl     *gomock.Controller
	recorder *MockVaultHelperMockRecorder
}

// MockVaultHelperMockRecorder is the mock recorder for MockVaultHelper.
type MockVaultHelperMockRecorder struct {
	mock *MockVaultHelper
}

// NewMockVaultHelper creates a new mock instance.
func NewMockVaultHelper(ctrl *gomock.Controller) *MockVaultHelper {
	mock := &MockVaultHelper{ctrl: ctrl}
	mock.recorder = &MockVaultHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVaultHelper) EXPECT() *MockVaultHelperMockRecorder {
	return m.recorder
}

// getVaultAuthInfo mocks base method.
func (m *MockVaultHelper) getVaultAuthInfo(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getVaultAuthInfo", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// getVaultAuthInfo indicates an expected call of getVaultAuthInfo.
func (mr *MockVaultHelperMockRecorder) getVaultAuthInfo(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getVaultAuthInfo", reflect.TypeOf((*MockVaultHelper)(nil).getVaultAuthInfo), ctx)
}

// getVaultClient mocks base method.
func (m *MockVaultHelper) getVaultClient(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getVaultClient", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// getVaultClient indicates an expected call of getVaultClient.
func (mr *MockVaultHelperMockRecorder) getVaultClient(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getVaultClient", reflect.TypeOf((*MockVaultHelper)(nil).getVaultClient), ctx)
}

// getVaultSecrets mocks base method.
func (m *MockVaultHelper) getVaultSecrets(ctx context.Context, vaultEnvSecretEngineMount, defaultSecretEngineMount, secretsPath string, renewToken bool) (*api.KVSecret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getVaultSecrets", ctx, vaultEnvSecretEngineMount, defaultSecretEngineMount, secretsPath, renewToken)
	ret0, _ := ret[0].(*api.KVSecret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// getVaultSecrets indicates an expected call of getVaultSecrets.
func (mr *MockVaultHelperMockRecorder) getVaultSecrets(ctx, vaultEnvSecretEngineMount, defaultSecretEngineMount, secretsPath, renewToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getVaultSecrets", reflect.TypeOf((*MockVaultHelper)(nil).getVaultSecrets), ctx, vaultEnvSecretEngineMount, defaultSecretEngineMount, secretsPath, renewToken)
}

// putVaultSecrets mocks base method.
func (m *MockVaultHelper) putVaultSecrets(ctx context.Context, vaultEnvSecretEngineMount, defaultSecretEngineMount, secretsPath string, kv map[string]interface{}, renewToken bool) (*api.KVSecret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "putVaultSecrets", ctx, vaultEnvSecretEngineMount, defaultSecretEngineMount, secretsPath, kv, renewToken)
	ret0, _ := ret[0].(*api.KVSecret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// putVaultSecrets indicates an expected call of putVaultSecrets.
func (mr *MockVaultHelperMockRecorder) putVaultSecrets(ctx, vaultEnvSecretEngineMount, defaultSecretEngineMount, secretsPath, kv, renewToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "putVaultSecrets", reflect.TypeOf((*MockVaultHelper)(nil).putVaultSecrets), ctx, vaultEnvSecretEngineMount, defaultSecretEngineMount, secretsPath, kv, renewToken)
}

// MockApiServiceSecretAccessor is a mock of ApiServiceSecretAccessor interface.
type MockApiServiceSecretAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockApiServiceSecretAccessorMockRecorder
}

// MockApiServiceSecretAccessorMockRecorder is the mock recorder for MockApiServiceSecretAccessor.
type MockApiServiceSecretAccessorMockRecorder struct {
	mock *MockApiServiceSecretAccessor
}

// NewMockApiServiceSecretAccessor creates a new mock instance.
func NewMockApiServiceSecretAccessor(ctrl *gomock.Controller) *MockApiServiceSecretAccessor {
	mock := &MockApiServiceSecretAccessor{ctrl: ctrl}
	mock.recorder = &MockApiServiceSecretAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiServiceSecretAccessor) EXPECT() *MockApiServiceSecretAccessorMockRecorder {
	return m.recorder
}

// GetEnrollBasicAuth mocks base method.
func (m *MockApiServiceSecretAccessor) GetEnrollBasicAuth(ctx context.Context, secretPath string, renewToken bool) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnrollBasicAuth", ctx, secretPath, renewToken)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetEnrollBasicAuth indicates an expected call of GetEnrollBasicAuth.
func (mr *MockApiServiceSecretAccessorMockRecorder) GetEnrollBasicAuth(ctx, secretPath, renewToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnrollBasicAuth", reflect.TypeOf((*MockApiServiceSecretAccessor)(nil).GetEnrollBasicAuth), ctx, secretPath, renewToken)
}
