// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/storage/secrets (interfaces: SecretManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/vault/api"
)

// MockSecretManager is a mock of SecretManager interface.
type MockSecretManager struct {
	ctrl     *gomock.Controller
	recorder *MockSecretManagerMockRecorder
}

// MockSecretManagerMockRecorder is the mock recorder for MockSecretManager.
type MockSecretManagerMockRecorder struct {
	mock *MockSecretManager
}

// NewMockSecretManager creates a new mock instance.
func NewMockSecretManager(ctrl *gomock.Controller) *MockSecretManager {
	mock := &MockSecretManager{ctrl: ctrl}
	mock.recorder = &MockSecretManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretManager) EXPECT() *MockSecretManagerMockRecorder {
	return m.recorder
}

// DeleteStorageCredentials mocks base method.
func (m *MockSecretManager) DeleteStorageCredentials(arg0 context.Context, arg1 string, arg2 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteStorageCredentials", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteStorageCredentials indicates an expected call of DeleteStorageCredentials.
func (mr *MockSecretManagerMockRecorder) DeleteStorageCredentials(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStorageCredentials", reflect.TypeOf((*MockSecretManager)(nil).DeleteStorageCredentials), arg0, arg1, arg2)
}

// GetEnrollBasicAuth mocks base method.
func (m *MockSecretManager) GetEnrollBasicAuth(arg0 context.Context, arg1 string, arg2 bool) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnrollBasicAuth", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetEnrollBasicAuth indicates an expected call of GetEnrollBasicAuth.
func (mr *MockSecretManagerMockRecorder) GetEnrollBasicAuth(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnrollBasicAuth", reflect.TypeOf((*MockSecretManager)(nil).GetEnrollBasicAuth), arg0, arg1, arg2)
}

// GetStorageCredentials mocks base method.
func (m *MockSecretManager) GetStorageCredentials(arg0 context.Context, arg1 string, arg2 bool) (string, string, string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorageCredentials", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(string)
	ret3, _ := ret[3].(string)
	ret4, _ := ret[4].(error)
	return ret0, ret1, ret2, ret3, ret4
}

// GetStorageCredentials indicates an expected call of GetStorageCredentials.
func (mr *MockSecretManagerMockRecorder) GetStorageCredentials(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageCredentials", reflect.TypeOf((*MockSecretManager)(nil).GetStorageCredentials), arg0, arg1, arg2)
}

// PutStorageSecrets mocks base method.
func (m *MockSecretManager) PutStorageSecrets(arg0 context.Context, arg1 string, arg2 map[string]interface{}, arg3 bool) (*api.KVSecret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutStorageSecrets", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*api.KVSecret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutStorageSecrets indicates an expected call of PutStorageSecrets.
func (mr *MockSecretManagerMockRecorder) PutStorageSecrets(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutStorageSecrets", reflect.TypeOf((*MockSecretManager)(nil).PutStorageSecrets), arg0, arg1, arg2, arg3)
}

// ValidateVaultClient mocks base method.
func (m *MockSecretManager) ValidateVaultClient(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateVaultClient", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateVaultClient indicates an expected call of ValidateVaultClient.
func (mr *MockSecretManagerMockRecorder) ValidateVaultClient(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateVaultClient", reflect.TypeOf((*MockSecretManager)(nil).ValidateVaultClient), arg0)
}
