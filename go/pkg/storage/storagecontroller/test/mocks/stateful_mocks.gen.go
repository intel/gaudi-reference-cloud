// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/storage/storagecontroller/api/weka (interfaces: StatefulClientServiceClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	weka "github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/storage/storagecontroller/api/weka"
	grpc "google.golang.org/grpc"
)

// MockStatefulClientServiceClient is a mock of StatefulClientServiceClient interface.
type MockStatefulClientServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockStatefulClientServiceClientMockRecorder
}

// MockStatefulClientServiceClientMockRecorder is the mock recorder for MockStatefulClientServiceClient.
type MockStatefulClientServiceClientMockRecorder struct {
	mock *MockStatefulClientServiceClient
}

// NewMockStatefulClientServiceClient creates a new mock instance.
func NewMockStatefulClientServiceClient(ctrl *gomock.Controller) *MockStatefulClientServiceClient {
	mock := &MockStatefulClientServiceClient{ctrl: ctrl}
	mock.recorder = &MockStatefulClientServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatefulClientServiceClient) EXPECT() *MockStatefulClientServiceClientMockRecorder {
	return m.recorder
}

// CreateStatefulClient mocks base method.
func (m *MockStatefulClientServiceClient) CreateStatefulClient(arg0 context.Context, arg1 *weka.CreateStatefulClientRequest, arg2 ...grpc.CallOption) (*weka.CreateStatefulClientResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateStatefulClient", varargs...)
	ret0, _ := ret[0].(*weka.CreateStatefulClientResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateStatefulClient indicates an expected call of CreateStatefulClient.
func (mr *MockStatefulClientServiceClientMockRecorder) CreateStatefulClient(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStatefulClient", reflect.TypeOf((*MockStatefulClientServiceClient)(nil).CreateStatefulClient), varargs...)
}

// DeleteStatefulClient mocks base method.
func (m *MockStatefulClientServiceClient) DeleteStatefulClient(arg0 context.Context, arg1 *weka.DeleteStatefulClientRequest, arg2 ...grpc.CallOption) (*weka.DeleteStatefulClientResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteStatefulClient", varargs...)
	ret0, _ := ret[0].(*weka.DeleteStatefulClientResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteStatefulClient indicates an expected call of DeleteStatefulClient.
func (mr *MockStatefulClientServiceClientMockRecorder) DeleteStatefulClient(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteStatefulClient", reflect.TypeOf((*MockStatefulClientServiceClient)(nil).DeleteStatefulClient), varargs...)
}

// GetStatefulClient mocks base method.
func (m *MockStatefulClientServiceClient) GetStatefulClient(arg0 context.Context, arg1 *weka.GetStatefulClientRequest, arg2 ...grpc.CallOption) (*weka.GetStatefulClientResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetStatefulClient", varargs...)
	ret0, _ := ret[0].(*weka.GetStatefulClientResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatefulClient indicates an expected call of GetStatefulClient.
func (mr *MockStatefulClientServiceClientMockRecorder) GetStatefulClient(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatefulClient", reflect.TypeOf((*MockStatefulClientServiceClient)(nil).GetStatefulClient), varargs...)
}

// ListStatefulClients mocks base method.
func (m *MockStatefulClientServiceClient) ListStatefulClients(arg0 context.Context, arg1 *weka.ListStatefulClientsRequest, arg2 ...grpc.CallOption) (*weka.ListStatefulClientsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListStatefulClients", varargs...)
	ret0, _ := ret[0].(*weka.ListStatefulClientsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListStatefulClients indicates an expected call of ListStatefulClients.
func (mr *MockStatefulClientServiceClientMockRecorder) ListStatefulClients(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStatefulClients", reflect.TypeOf((*MockStatefulClientServiceClient)(nil).ListStatefulClients), varargs...)
}
