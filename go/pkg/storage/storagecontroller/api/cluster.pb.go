// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.4
// source: go/pkg/storage/storagecontroller/api/cluster.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cluster_Type int32

const (
	Cluster_TYPE_UNSPECIFIED Cluster_Type = 0
	Cluster_TYPE_WEKA        Cluster_Type = 1
	Cluster_TYPE_MINIO       Cluster_Type = 2
	Cluster_TYPE_VAST        Cluster_Type = 3
)

// Enum value maps for Cluster_Type.
var (
	Cluster_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_WEKA",
		2: "TYPE_MINIO",
		3: "TYPE_VAST",
	}
	Cluster_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_WEKA":        1,
		"TYPE_MINIO":       2,
		"TYPE_VAST":        3,
	}
)

func (x Cluster_Type) Enum() *Cluster_Type {
	p := new(Cluster_Type)
	*p = x
	return p
}

func (x Cluster_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cluster_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_enumTypes[0].Descriptor()
}

func (Cluster_Type) Type() protoreflect.EnumType {
	return &file_go_pkg_storage_storagecontroller_api_cluster_proto_enumTypes[0]
}

func (x Cluster_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cluster_Type.Descriptor instead.
func (Cluster_Type) EnumDescriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5, 0}
}

type Cluster_ApiType int32

const (
	Cluster_API_TYPE_UNSPECIFIED     Cluster_ApiType = 0
	Cluster_API_TYPE_WEKA_FILESYSTEM Cluster_ApiType = 1
	Cluster_API_TYPE_OBJECT_STORE    Cluster_ApiType = 2
	Cluster_API_TYPE_VAST_VIEW       Cluster_ApiType = 3
)

// Enum value maps for Cluster_ApiType.
var (
	Cluster_ApiType_name = map[int32]string{
		0: "API_TYPE_UNSPECIFIED",
		1: "API_TYPE_WEKA_FILESYSTEM",
		2: "API_TYPE_OBJECT_STORE",
		3: "API_TYPE_VAST_VIEW",
	}
	Cluster_ApiType_value = map[string]int32{
		"API_TYPE_UNSPECIFIED":     0,
		"API_TYPE_WEKA_FILESYSTEM": 1,
		"API_TYPE_OBJECT_STORE":    2,
		"API_TYPE_VAST_VIEW":       3,
	}
)

func (x Cluster_ApiType) Enum() *Cluster_ApiType {
	p := new(Cluster_ApiType)
	*p = x
	return p
}

func (x Cluster_ApiType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cluster_ApiType) Descriptor() protoreflect.EnumDescriptor {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_enumTypes[1].Descriptor()
}

func (Cluster_ApiType) Type() protoreflect.EnumType {
	return &file_go_pkg_storage_storagecontroller_api_cluster_proto_enumTypes[1]
}

func (x Cluster_ApiType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cluster_ApiType.Descriptor instead.
func (Cluster_ApiType) EnumDescriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5, 1}
}

type Cluster_Health_Status int32

const (
	Cluster_Health_STATUS_UNSPECIFIED Cluster_Health_Status = 0
	Cluster_Health_STATUS_HEALTHY     Cluster_Health_Status = 1
	Cluster_Health_STATUS_DEGRADED    Cluster_Health_Status = 2
	Cluster_Health_STATUS_UNHEALTHY   Cluster_Health_Status = 3
)

// Enum value maps for Cluster_Health_Status.
var (
	Cluster_Health_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_HEALTHY",
		2: "STATUS_DEGRADED",
		3: "STATUS_UNHEALTHY",
	}
	Cluster_Health_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_HEALTHY":     1,
		"STATUS_DEGRADED":    2,
		"STATUS_UNHEALTHY":   3,
	}
)

func (x Cluster_Health_Status) Enum() *Cluster_Health_Status {
	p := new(Cluster_Health_Status)
	*p = x
	return p
}

func (x Cluster_Health_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cluster_Health_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_enumTypes[2].Descriptor()
}

func (Cluster_Health_Status) Type() protoreflect.EnumType {
	return &file_go_pkg_storage_storagecontroller_api_cluster_proto_enumTypes[2]
}

func (x Cluster_Health_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cluster_Health_Status.Descriptor instead.
func (Cluster_Health_Status) EnumDescriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5, 2, 0}
}

type ListClustersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *ListClustersRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *ListClustersRequest) GetFilter() *ListClustersRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListClustersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *ListClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type GetClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId *ClusterIdentifier `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *GetClusterRequest) GetClusterId() *ClusterIdentifier {
	if x != nil {
		return x.ClusterId
	}
	return nil
}

type GetClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetClusterResponse) Reset() {
	*x = GetClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterResponse) ProtoMessage() {}

func (x *GetClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterResponse.ProtoReflect.Descriptor instead.
func (*GetClusterResponse) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *GetClusterResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type ClusterIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ClusterIdentifier) Reset() {
	*x = ClusterIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterIdentifier) ProtoMessage() {}

func (x *ClusterIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterIdentifier.ProtoReflect.Descriptor instead.
func (*ClusterIdentifier) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *ClusterIdentifier) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *ClusterIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Location    string             `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Type        Cluster_Type       `protobuf:"varint,4,opt,name=type,proto3,enum=intel.storagecontroller.v1.Cluster_Type" json:"type,omitempty"`
	Labels      map[string]string  `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Capacity    *Cluster_Capacity  `protobuf:"bytes,6,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Health      *Cluster_Health    `protobuf:"bytes,7,opt,name=health,proto3" json:"health,omitempty"`
	SupportsApi []Cluster_ApiType  `protobuf:"varint,8,rep,packed,name=supports_api,json=supportsApi,proto3,enum=intel.storagecontroller.v1.Cluster_ApiType" json:"supports_api,omitempty"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *Cluster) GetId() *ClusterIdentifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Cluster) GetType() Cluster_Type {
	if x != nil {
		return x.Type
	}
	return Cluster_TYPE_UNSPECIFIED
}

func (x *Cluster) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Cluster) GetCapacity() *Cluster_Capacity {
	if x != nil {
		return x.Capacity
	}
	return nil
}

func (x *Cluster) GetHealth() *Cluster_Health {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *Cluster) GetSupportsApi() []Cluster_ApiType {
	if x != nil {
		return x.SupportsApi
	}
	return nil
}

type ListClustersRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names     []string          `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	Locations []string          `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"`
	Types     []Cluster_Type    `protobuf:"varint,3,rep,packed,name=types,proto3,enum=intel.storagecontroller.v1.Cluster_Type" json:"types,omitempty"`
	Labels    map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListClustersRequest_Filter) Reset() {
	*x = ListClustersRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClustersRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest_Filter) ProtoMessage() {}

func (x *ListClustersRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListClustersRequest_Filter) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ListClustersRequest_Filter) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ListClustersRequest_Filter) GetLocations() []string {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *ListClustersRequest_Filter) GetTypes() []Cluster_Type {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *ListClustersRequest_Filter) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Cluster_Capacity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storage     *Cluster_Capacity_Storage     `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Namespaces  *Cluster_Capacity_Namespaces  `protobuf:"bytes,2,opt,name=namespaces,proto3" json:"namespaces,omitempty"`
	Filesystems *Cluster_Capacity_Filesystems `protobuf:"bytes,3,opt,name=filesystems,proto3" json:"filesystems,omitempty"`
	Users       *Cluster_Capacity_Users       `protobuf:"bytes,4,opt,name=users,proto3" json:"users,omitempty"`
}

func (x *Cluster_Capacity) Reset() {
	*x = Cluster_Capacity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster_Capacity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster_Capacity) ProtoMessage() {}

func (x *Cluster_Capacity) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster_Capacity.ProtoReflect.Descriptor instead.
func (*Cluster_Capacity) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Cluster_Capacity) GetStorage() *Cluster_Capacity_Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *Cluster_Capacity) GetNamespaces() *Cluster_Capacity_Namespaces {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *Cluster_Capacity) GetFilesystems() *Cluster_Capacity_Filesystems {
	if x != nil {
		return x.Filesystems
	}
	return nil
}

func (x *Cluster_Capacity) GetUsers() *Cluster_Capacity_Users {
	if x != nil {
		return x.Users
	}
	return nil
}

type Cluster_Health struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Cluster_Health_Status `protobuf:"varint,1,opt,name=status,proto3,enum=intel.storagecontroller.v1.Cluster_Health_Status" json:"status,omitempty"`
}

func (x *Cluster_Health) Reset() {
	*x = Cluster_Health{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster_Health) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster_Health) ProtoMessage() {}

func (x *Cluster_Health) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster_Health.ProtoReflect.Descriptor instead.
func (*Cluster_Health) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5, 2}
}

func (x *Cluster_Health) GetStatus() Cluster_Health_Status {
	if x != nil {
		return x.Status
	}
	return Cluster_Health_STATUS_UNSPECIFIED
}

type Cluster_Capacity_Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBytes     uint64 `protobuf:"varint,1,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	AvailableBytes uint64 `protobuf:"varint,2,opt,name=available_bytes,json=availableBytes,proto3" json:"available_bytes,omitempty"`
}

func (x *Cluster_Capacity_Storage) Reset() {
	*x = Cluster_Capacity_Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster_Capacity_Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster_Capacity_Storage) ProtoMessage() {}

func (x *Cluster_Capacity_Storage) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster_Capacity_Storage.ProtoReflect.Descriptor instead.
func (*Cluster_Capacity_Storage) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5, 1, 0}
}

func (x *Cluster_Capacity_Storage) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *Cluster_Capacity_Storage) GetAvailableBytes() uint64 {
	if x != nil {
		return x.AvailableBytes
	}
	return 0
}

type Cluster_Capacity_Namespaces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     int32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	AvailableCount int32 `protobuf:"varint,2,opt,name=available_count,json=availableCount,proto3" json:"available_count,omitempty"`
}

func (x *Cluster_Capacity_Namespaces) Reset() {
	*x = Cluster_Capacity_Namespaces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster_Capacity_Namespaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster_Capacity_Namespaces) ProtoMessage() {}

func (x *Cluster_Capacity_Namespaces) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster_Capacity_Namespaces.ProtoReflect.Descriptor instead.
func (*Cluster_Capacity_Namespaces) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5, 1, 1}
}

func (x *Cluster_Capacity_Namespaces) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *Cluster_Capacity_Namespaces) GetAvailableCount() int32 {
	if x != nil {
		return x.AvailableCount
	}
	return 0
}

type Cluster_Capacity_Filesystems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     int32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	AvailableCount int32 `protobuf:"varint,2,opt,name=available_count,json=availableCount,proto3" json:"available_count,omitempty"`
}

func (x *Cluster_Capacity_Filesystems) Reset() {
	*x = Cluster_Capacity_Filesystems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster_Capacity_Filesystems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster_Capacity_Filesystems) ProtoMessage() {}

func (x *Cluster_Capacity_Filesystems) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster_Capacity_Filesystems.ProtoReflect.Descriptor instead.
func (*Cluster_Capacity_Filesystems) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5, 1, 2}
}

func (x *Cluster_Capacity_Filesystems) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *Cluster_Capacity_Filesystems) GetAvailableCount() int32 {
	if x != nil {
		return x.AvailableCount
	}
	return 0
}

type Cluster_Capacity_Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     int32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	AvailableCount int32 `protobuf:"varint,2,opt,name=available_count,json=availableCount,proto3" json:"available_count,omitempty"`
}

func (x *Cluster_Capacity_Users) Reset() {
	*x = Cluster_Capacity_Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster_Capacity_Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster_Capacity_Users) ProtoMessage() {}

func (x *Cluster_Capacity_Users) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster_Capacity_Users.ProtoReflect.Descriptor instead.
func (*Cluster_Capacity_Users) Descriptor() ([]byte, []int) {
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP(), []int{5, 1, 3}
}

func (x *Cluster_Capacity_Users) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *Cluster_Capacity_Users) GetAvailableCount() int32 {
	if x != nil {
		return x.AvailableCount
	}
	return 0
}

var File_go_pkg_storage_storagecontroller_api_cluster_proto protoreflect.FileDescriptor

var file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDesc = []byte{
	0x0a, 0x32, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x22, 0xfb, 0x02, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x93, 0x02, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x57,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x61, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0a,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x27, 0x0a, 0x11, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xc6, 0x0c, 0x0a, 0x07, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x47, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x63, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x4e, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x5f, 0x61, 0x70, 0x69, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x41, 0x70, 0x69, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0xb2, 0x05, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x4e, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x57, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x0b, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x48, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a,
	0x53, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x1a, 0x56, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x57, 0x0a, 0x0b,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x51, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xb4, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5f,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54,
	0x48, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x45, 0x47, 0x52, 0x41, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x03, 0x22,
	0x4a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x4b, 0x41, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x4f, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x53, 0x54, 0x10, 0x03, 0x22, 0x74, 0x0a, 0x07, 0x41,
	0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x50, 0x49, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1c, 0x0a, 0x18, 0x41, 0x50, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x4b,
	0x41, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12, 0x19,
	0x0a, 0x15, 0x41, 0x50, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43,
	0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x50, 0x49,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x53, 0x54, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10,
	0x03, 0x32, 0xf4, 0x01, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x6a, 0x5a, 0x68, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x64, 0x65, 0x76, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x69, 0x64, 0x63, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescOnce sync.Once
	file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescData = file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDesc
)

func file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescGZIP() []byte {
	file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescOnce.Do(func() {
		file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescData)
	})
	return file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDescData
}

var file_go_pkg_storage_storagecontroller_api_cluster_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_go_pkg_storage_storagecontroller_api_cluster_proto_goTypes = []interface{}{
	(Cluster_Type)(0),                    // 0: intel.storagecontroller.v1.Cluster.Type
	(Cluster_ApiType)(0),                 // 1: intel.storagecontroller.v1.Cluster.ApiType
	(Cluster_Health_Status)(0),           // 2: intel.storagecontroller.v1.Cluster.Health.Status
	(*ListClustersRequest)(nil),          // 3: intel.storagecontroller.v1.ListClustersRequest
	(*ListClustersResponse)(nil),         // 4: intel.storagecontroller.v1.ListClustersResponse
	(*GetClusterRequest)(nil),            // 5: intel.storagecontroller.v1.GetClusterRequest
	(*GetClusterResponse)(nil),           // 6: intel.storagecontroller.v1.GetClusterResponse
	(*ClusterIdentifier)(nil),            // 7: intel.storagecontroller.v1.ClusterIdentifier
	(*Cluster)(nil),                      // 8: intel.storagecontroller.v1.Cluster
	(*ListClustersRequest_Filter)(nil),   // 9: intel.storagecontroller.v1.ListClustersRequest.Filter
	nil,                                  // 10: intel.storagecontroller.v1.ListClustersRequest.Filter.LabelsEntry
	nil,                                  // 11: intel.storagecontroller.v1.Cluster.LabelsEntry
	(*Cluster_Capacity)(nil),             // 12: intel.storagecontroller.v1.Cluster.Capacity
	(*Cluster_Health)(nil),               // 13: intel.storagecontroller.v1.Cluster.Health
	(*Cluster_Capacity_Storage)(nil),     // 14: intel.storagecontroller.v1.Cluster.Capacity.Storage
	(*Cluster_Capacity_Namespaces)(nil),  // 15: intel.storagecontroller.v1.Cluster.Capacity.Namespaces
	(*Cluster_Capacity_Filesystems)(nil), // 16: intel.storagecontroller.v1.Cluster.Capacity.Filesystems
	(*Cluster_Capacity_Users)(nil),       // 17: intel.storagecontroller.v1.Cluster.Capacity.Users
}
var file_go_pkg_storage_storagecontroller_api_cluster_proto_depIdxs = []int32{
	9,  // 0: intel.storagecontroller.v1.ListClustersRequest.filter:type_name -> intel.storagecontroller.v1.ListClustersRequest.Filter
	8,  // 1: intel.storagecontroller.v1.ListClustersResponse.clusters:type_name -> intel.storagecontroller.v1.Cluster
	7,  // 2: intel.storagecontroller.v1.GetClusterRequest.cluster_id:type_name -> intel.storagecontroller.v1.ClusterIdentifier
	8,  // 3: intel.storagecontroller.v1.GetClusterResponse.cluster:type_name -> intel.storagecontroller.v1.Cluster
	7,  // 4: intel.storagecontroller.v1.Cluster.id:type_name -> intel.storagecontroller.v1.ClusterIdentifier
	0,  // 5: intel.storagecontroller.v1.Cluster.type:type_name -> intel.storagecontroller.v1.Cluster.Type
	11, // 6: intel.storagecontroller.v1.Cluster.labels:type_name -> intel.storagecontroller.v1.Cluster.LabelsEntry
	12, // 7: intel.storagecontroller.v1.Cluster.capacity:type_name -> intel.storagecontroller.v1.Cluster.Capacity
	13, // 8: intel.storagecontroller.v1.Cluster.health:type_name -> intel.storagecontroller.v1.Cluster.Health
	1,  // 9: intel.storagecontroller.v1.Cluster.supports_api:type_name -> intel.storagecontroller.v1.Cluster.ApiType
	0,  // 10: intel.storagecontroller.v1.ListClustersRequest.Filter.types:type_name -> intel.storagecontroller.v1.Cluster.Type
	10, // 11: intel.storagecontroller.v1.ListClustersRequest.Filter.labels:type_name -> intel.storagecontroller.v1.ListClustersRequest.Filter.LabelsEntry
	14, // 12: intel.storagecontroller.v1.Cluster.Capacity.storage:type_name -> intel.storagecontroller.v1.Cluster.Capacity.Storage
	15, // 13: intel.storagecontroller.v1.Cluster.Capacity.namespaces:type_name -> intel.storagecontroller.v1.Cluster.Capacity.Namespaces
	16, // 14: intel.storagecontroller.v1.Cluster.Capacity.filesystems:type_name -> intel.storagecontroller.v1.Cluster.Capacity.Filesystems
	17, // 15: intel.storagecontroller.v1.Cluster.Capacity.users:type_name -> intel.storagecontroller.v1.Cluster.Capacity.Users
	2,  // 16: intel.storagecontroller.v1.Cluster.Health.status:type_name -> intel.storagecontroller.v1.Cluster.Health.Status
	3,  // 17: intel.storagecontroller.v1.ClusterService.ListClusters:input_type -> intel.storagecontroller.v1.ListClustersRequest
	5,  // 18: intel.storagecontroller.v1.ClusterService.GetCluster:input_type -> intel.storagecontroller.v1.GetClusterRequest
	4,  // 19: intel.storagecontroller.v1.ClusterService.ListClusters:output_type -> intel.storagecontroller.v1.ListClustersResponse
	6,  // 20: intel.storagecontroller.v1.ClusterService.GetCluster:output_type -> intel.storagecontroller.v1.GetClusterResponse
	19, // [19:21] is the sub-list for method output_type
	17, // [17:19] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_go_pkg_storage_storagecontroller_api_cluster_proto_init() }
func file_go_pkg_storage_storagecontroller_api_cluster_proto_init() {
	if File_go_pkg_storage_storagecontroller_api_cluster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClustersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClustersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClustersRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster_Capacity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster_Health); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster_Capacity_Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster_Capacity_Namespaces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster_Capacity_Filesystems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster_Capacity_Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_pkg_storage_storagecontroller_api_cluster_proto_goTypes,
		DependencyIndexes: file_go_pkg_storage_storagecontroller_api_cluster_proto_depIdxs,
		EnumInfos:         file_go_pkg_storage_storagecontroller_api_cluster_proto_enumTypes,
		MessageInfos:      file_go_pkg_storage_storagecontroller_api_cluster_proto_msgTypes,
	}.Build()
	File_go_pkg_storage_storagecontroller_api_cluster_proto = out.File
	file_go_pkg_storage_storagecontroller_api_cluster_proto_rawDesc = nil
	file_go_pkg_storage_storagecontroller_api_cluster_proto_goTypes = nil
	file_go_pkg_storage_storagecontroller_api_cluster_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClusterServiceClient is the client API for ClusterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterServiceClient interface {
	ListClusters(ctx context.Context, in *ListClustersRequest, opts ...grpc.CallOption) (*ListClustersResponse, error)
	GetCluster(ctx context.Context, in *GetClusterRequest, opts ...grpc.CallOption) (*GetClusterResponse, error)
}

type clusterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClusterServiceClient(cc grpc.ClientConnInterface) ClusterServiceClient {
	return &clusterServiceClient{cc}
}

func (c *clusterServiceClient) ListClusters(ctx context.Context, in *ListClustersRequest, opts ...grpc.CallOption) (*ListClustersResponse, error) {
	out := new(ListClustersResponse)
	err := c.cc.Invoke(ctx, "/intel.storagecontroller.v1.ClusterService/ListClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterServiceClient) GetCluster(ctx context.Context, in *GetClusterRequest, opts ...grpc.CallOption) (*GetClusterResponse, error) {
	out := new(GetClusterResponse)
	err := c.cc.Invoke(ctx, "/intel.storagecontroller.v1.ClusterService/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterServiceServer is the server API for ClusterService service.
type ClusterServiceServer interface {
	ListClusters(context.Context, *ListClustersRequest) (*ListClustersResponse, error)
	GetCluster(context.Context, *GetClusterRequest) (*GetClusterResponse, error)
}

// UnimplementedClusterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClusterServiceServer struct {
}

func (*UnimplementedClusterServiceServer) ListClusters(context.Context, *ListClustersRequest) (*ListClustersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClusters not implemented")
}
func (*UnimplementedClusterServiceServer) GetCluster(context.Context, *GetClusterRequest) (*GetClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCluster not implemented")
}

func RegisterClusterServiceServer(s *grpc.Server, srv ClusterServiceServer) {
	s.RegisterService(&_ClusterService_serviceDesc, srv)
}

func _ClusterService_ListClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).ListClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intel.storagecontroller.v1.ClusterService/ListClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).ListClusters(ctx, req.(*ListClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterService_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServiceServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/intel.storagecontroller.v1.ClusterService/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServiceServer).GetCluster(ctx, req.(*GetClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "intel.storagecontroller.v1.ClusterService",
	HandlerType: (*ClusterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListClusters",
			Handler:    _ClusterService_ListClusters_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _ClusterService_GetCluster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go/pkg/storage/storagecontroller/api/cluster.proto",
}
