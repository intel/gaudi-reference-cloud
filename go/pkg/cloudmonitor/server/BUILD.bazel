# INTEL CONFIDENTIAL
# Copyright (C) 2023 Intel Corporation
load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "server",
    srcs = [
        "admin.go",
        "cloudmonitor.go",
        "cloudmonitor_bm.go",
        "server.go",
    ],
    embedsrcs = [
        "sql/000007_create_table_all.down.sql",
        "sql/000007_create_table_all.up.sql",
        "sql/000008_create_table_all_bm.down.sql",
        "sql/000008_create_table_all_bm.up.sql",
        "sql/000009_insert_reserved_tenants.down.sql",
        "sql/000009_insert_reserved_tenants.up.sql",
    ],
    importpath = "github.com/intel-innersource/frameworks.cloud.devcloud.services.idc/go/pkg/cloudmonitor/server",
    visibility = ["//visibility:public"],
    deps = [
        "//go/pkg/cloudmonitor/config",
        "//go/pkg/grpcutil",
        "//go/pkg/log",
        "//go/pkg/manageddb",
        "//go/pkg/observability",
        "//go/pkg/pb",
        "//go/pkg/protodb",
        "@com_github_aws_aws_sdk_go_v2//aws",
        "@com_github_aws_aws_sdk_go_v2_config//:config",
        "@com_github_aws_aws_sdk_go_v2_credentials//:credentials",
        "@com_github_aws_aws_sdk_go_v2_credentials//stscreds",
        "@com_github_aws_aws_sdk_go_v2_service_sts//:sts",
        "@com_github_aws_smithy_go//middleware",
        "@com_github_aws_smithy_go//transport/http",
        "@com_github_golang_protobuf//ptypes/empty",
        "@com_github_google_uuid//:uuid",
        "@com_github_grpc_ecosystem_go_grpc_prometheus//:go-grpc-prometheus",
        "@com_github_prometheus_client_golang//prometheus/promhttp",
        "@com_github_sethvargo_go_password//password",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/apis/meta/v1/unstructured",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//tools/clientcmd",
        "@io_k8s_client_go//tools/clientcmd/api",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@io_opentelemetry_go_otel//attribute",
        "@io_opentelemetry_go_otel//codes",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//reflection",
        "@org_golang_google_grpc//status",
    ],
)
