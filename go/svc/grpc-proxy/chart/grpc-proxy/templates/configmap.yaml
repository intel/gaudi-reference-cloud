# Code generated by prototempl. DO NOT EDIT.
{{- $trust_chain_verification := "VERIFY_TRUST_CHAIN" }}
{{- if $.Values.tls.client.insecureSkipVerify }}
{{- $trust_chain_verification := "ACCEPT_UNTRUSTED" }}
{{- end }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "idc-common.fullname" . }}
  namespace: {{ include "idc-common.namespace" . }}
  annotations:
    # Add important parameters as annotations so that an administrator can easily see the effective values in this ConfigMap.
    # These annotations have no effect.
    deployment: {{ $.Values.deployment | quote }}
    enableJwtValidation: {{ $.Values.enableJwtValidation | quote }}
    tls.client.insecureSkipVerify: {{ $.Values.tls.client.insecureSkipVerify | quote }}
    tls.enabled: {{ $.Values.tls.enabled | quote }}
    tls.server.requireClientCertificate: {{ $.Values.tls.server.requireClientCertificate | quote }}
data:
{{- if $.Values.tls.enabled }}
  sds.yaml: |
    resources:
      - "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
        name: tls_sds
        tls_certificate:
          certificate_chain:
            filename: "/vault/secrets/cert.pem"
          private_key:
            filename: "/vault/secrets/cert.key"
          watched_directory:
            path: /vault/secrets
{{- end }}
  envoy.yaml: |
    node:
      id: "grpc-proxy"
      cluster: "grpc-proxy"
{{- if eq $.Values.envoy.image.tag "v1.26.8" }}
    # disable the async cert validation for version [v1.24.0 to v1.26.8]
    layered_runtime:
      layers:
      - name: static_layer
        static_layer:
          envoy.reloadable_features.tls_async_cert_validation: false
{{- end }}
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: {{ .Values.listenAddress }}
            port_value: {{ include "idc-common.listenPort" . }}
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              # maximum request headers size for incoming connections
              # max_request_headers_kb: 1024
              # time that Envoy will wait for the entire request to be received
              common_http_protocol_options:
                idle_timeout: 600s # Maximum idle time for connections.
              request_timeout: 120s
              access_log:
              - name: envoy.access_loggers.stdout
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
{{- if eq $.Values.envoy.image.tag "v1.26.8" }}
                  log_format:
                    text_format_source: 
                      inline_string: "[%START_TIME%] %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL% %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% %REQ(X-FORWARDED-FOR)% %REQ(USER-AGENT)% %REQ(X-REQUEST-ID)% %REQ(:AUTHORITY)% %UPSTREAM_HOST% [ %DOWNSTREAM_TRANSPORT_FAILURE_REASON% %UPSTREAM_TRANSPORT_FAILURE_REASON% ]\n"
{{- end }}
              http_filters:
              # - name: envoy.filters.http.buffer
              #  typed_config:
              #    "@type": type.googleapis.com/envoy.extensions.filters.http.buffer.v3.Buffer
              #    # maximum request size that the filter will buffer before the connection manager
              #    max_request_bytes: 16777216 # 16 MiB (16 * 1024 * 1024 bytes)
{{- if .Values.oidc.servers }}
              - name: envoy.filters.http.jwt_authn
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                  providers:
{{- range $key, $value := $.Values.oidc.servers }}
                    oidc_provider_{{ $key }}:
                      issuer: {{ $value.issueURL }}
{{- if $value.audiences }}
                      audiences:
{{- range $value.audiences }}
                      - {{ . }}
{{- end }}
{{- end }}
                      forward: "true"
                      from_headers:
                        - name: Authorization
                          value_prefix: "Bearer "
                      remote_jwks:
                        http_uri:
                          uri: {{ $value.keyURL }}
                          cluster: oidc_cluster_{{ $key }}
                          timeout: 5s
                        cache_duration:
                          seconds: 300
{{- end }}
{{- if .Values.enableJwtValidation }}
                  rules:
                  - match:
                      prefix: "/"
                    requires:
{{- if eq (len .Values.oidc.servers) 1 }}
                      provider_name: oidc_provider_0
{{- else }}
                      requires_any:
                        requirements:
{{- range $key, $value := $.Values.oidc.servers }}
                        - provider_name: oidc_provider_{{ $key }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- if .Values.rateLimit.enabled }}
              - name: envoy.filters.http.lua
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                  inline_code: |
                    function envoy_on_request(request_handle)
                        local auth_header = request_handle:headers():get("Authorization")
                        -- request_handle:logInfo("rate_limit: authorization header: " .. (auth_header or "nil"))
                        -- Extract and parse the JWT
                        if auth_header then
                            local jwt = string.match(auth_header, "Bearer%s+(.+)")
                            -- request_handle:logInfo("rate_limit: extracted JWT " .. (jwt or "nil"))
                            if jwt then
                                -- Split JWT into header, payload, and signature
                                local _, payload, _ = jwt:match("([^%.]+)%.([^%.]+)%.([^%.]+)")
                                -- request_handle:logInfo("rate_limit: base64 payload " .. (payload or "nil"))
                                if payload then
                                    -- Decode the payload using the base64_decode function
                                    local decoded_payload = base64_decode(payload)
                                    -- request_handle:logInfo("rate_limit: decoded payload  " .. (decoded_payload or "nil"))
                                    if decoded_payload then
                                        local claim_variable = {{ $.Values.rateLimit.claim | quote }}
                                        -- request_handle:logInfo("rate_limit: claim variable " .. claim_variable)
                                        local claim_value = decoded_payload:match('"' .. claim_variable .. '"%s*:%s*"([^"]+)"')
                                        -- request_handle:logInfo("rate_limit: extracted claim value " .. (claim_value or "nil"))
                                        if claim_value then
                                            -- Add the claim value as user ID to the header
                                            request_handle:headers():add("X-User-ID", claim_value)
                                            -- request_handle:logInfo("rate_limit: user ID added to headers.")
                                        else
                                            request_handle:logInfo("rate_limit: user ID not found in JWT payload.")
                                        end

                                      else
                                          request_handle:logInfo("rate_limit: failed to decode the payload.")
                                    end
                                else
                                    request_handle:logInfo("rate_limit: failed to split JWT parts correctly.")
                                end
                            else
                                request_handle:logInfo("rate_limit: failed JWT not found in authorization header.")
                            end
                        else
                            request_handle:logInfo("rate_limit: authorization header not found.")
                        end
                    end

                    local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
                    function base64_decode(data)
                        -- Adjust for padding
                        data = string.gsub(data, '[^' .. b .. '=]', '')
                        data = string.gsub(data, '[-_]', function(x)
                            return (x == '-' and '+') or '/'
                        end)
                        
                        local padding = #data % 4
                        if padding > 0 then
                            data = data .. string.rep('=', 4 - padding)
                        end
                        return (data:gsub('.', function(x)
                            if x == '=' then return '' end
                            local r, f = '', (b:find(x) - 1)
                            for i = 6, 1, -1 do
                                r = r .. ((f % 2 ^ i - f % 2 ^ (i - 1) > 0) and '1' or '0')
                            end
                            return r
                        end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
                            if #x ~= 8 then return '' end
                            local c = 0
                            for i = 1, 8 do
                                c = c + ((x:sub(i, i) == '1') and 2 ^ (8 - i) or 0)
                            end
                            return string.char(c)
                        end))
                    end
{{- end }}
              - name: envoy.filters.http.health_check
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                  pass_through_mode: false
                  headers:
                  - name: ":path"
                    string_match:
                      exact: "/healthz"
                  - name: "x-envoy-livenessprobe"
                    string_match:
                      exact: "healthz"
{{- if .Values.opa.enabled }}                 
              - name: envoy.ext_authz
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  transport_api_version: V3
                  with_request_body:
                    max_request_bytes: 8192
                    allow_partial_message: true
                    pack_as_bytes: true
                  failure_mode_allow: false
                  grpc_service:
                    google_grpc:
                      target_uri: 127.0.0.1:{{- .Values.opa.grpcPort }}
                      stat_prefix: ext_authz
                    timeout: 15s
{{- end }}
{{- if .Values.rateLimit.enabled }}
              - name: envoy.filters.http.ratelimit
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                  domain: idc
                  request_type: external
                  # stage: 0
                  rate_limited_as_resource_exhausted: {{ $.Values.rateLimit.rateLimitedAsResourceExhausted }}
                  failure_mode_deny: {{ $.Values.rateLimit.failureModeDeny }}
                  enable_x_ratelimit_headers: {{ $.Values.rateLimit.enableXRateLimitHeaders }}
                  rate_limit_service:
                    grpc_service:
                      envoy_grpc:
                        cluster_name: rate_limit_cluster
                    transport_api_version: V3
{{- end }}
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              codec_type: AUTO
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: http
                  domains:
                  - "*"
{{- if .Values.rateLimit.enabled }}
                  rate_limits:
                    - actions:
                        - request_headers:
                            header_name: "X-User-ID"
                            descriptor_key: "user_id"
                        - request_headers:
                            header_name: ":path"
                            descriptor_key: "path"
                        - request_headers:
                            header_name: ":method"
                            descriptor_key: "method"
{{- end }}
                  routes:
                  - match:
                      prefix: "/grpc.reflection.v1alpha.ServerReflection/"
                    route:
                      auto_host_rewrite: true
                      cluster: "grpc-reflect"
                    typed_per_filter_config:
                      envoy.filters.http.ext_authz:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                        disabled: true
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/Check"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/CheckInternal"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/Lookup"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/LookupInternal"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/Actions"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/CreateCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/QueryCloudAccountRoles"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/GetCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/UpdateCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/RemoveCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/AddUserToCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/AddCloudAccountRolesToUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/RemoveCloudAccountRolesFromUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/RemoveResourceFromCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/RemoveUserFromCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/AddPermissionToCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/UpdatePermissionCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/RemovePermissionFromCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/AssignSystemRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/UnassignSystemRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/SystemRoleExists"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/RemovePolicy"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/CreatePolicy"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/ListResourceDefinition"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/GetUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/ListUsersByCloudAccount"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/DefaultCloudAccountRoleAssigned"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/AssignDefaultCloudAccountRole"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "AuthzService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AuthzService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "authz"
{{- end }}
{{- if and (has "BillingDriverUsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingDriverUsageService/ReportUsage"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing-driver"
{{- end }}
{{- if and (has "BillingAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingAccountService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingAccountService/DowngradePremiumtoStandard"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingOptionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingOptionService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingRateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingRateService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCreditService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCreditService/ReadInternal"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCreditService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCreditService/ReadUnappliedCreditBalance"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCreditService/CreditMigrate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCreditService/DeleteMigratedCredit"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCouponService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCouponService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCouponService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCouponService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCouponService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCouponService/Redeem"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingCouponService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingCouponService/Disable"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingInvoiceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingInvoiceService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingInvoiceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingInvoiceService/ReadDetail"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingInvoiceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingInvoiceService/ReadUnbilled"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingInvoiceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingInvoiceService/ReadStatement"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingProductCatalogSyncService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingProductCatalogSyncService/Sync"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "PaymentService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.PaymentService/AddPaymentPreProcessing"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "PaymentService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.PaymentService/AddPaymentPostProcessing"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingInstancesService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingInstancesService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingUsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingUsageService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingOpsActionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingOpsActionService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingDeactivateInstancesService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingDeactivateInstancesService/GetDeactivateInstances"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingDeactivateInstancesService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingDeactivateInstancesService/GetDeactivateInstancesStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingDeactivateInstancesService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingDeactivateInstancesService/GetDeactivatedServiceAccounts"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "BillingDeactivateInstancesService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.BillingDeactivateInstancesService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "billing"
{{- end }}
{{- if and (has "CloudAccountEnrollService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountEnrollService/Enroll"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount-enroll"
{{- end }}
{{- if and (has "CloudAccountEnrollService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountEnrollService/Upgrade"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount-enroll"
{{- end }}
{{- if and (has "CloudAccountEnrollService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountEnrollService/UpgradeWithCreditCard"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount-enroll"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/Ensure"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/GetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/GetByOid"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/GetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/GetByPersonId"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/CheckCloudAccountExists"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountMemberService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountMemberService/ReadMembers"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountMemberService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountMemberService/ReadActiveMembers"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountMemberService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountMemberService/AddMembers"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountMemberService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountMemberService/RemoveMembers"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountMemberService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountMemberService/ReadUserCloudAccounts"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountMemberService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountMemberService/GetCloudAccountsForOpa"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountMemberService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountMemberService/UpdatePersonId"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountMemberService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountMemberService/GetMemberPersonId"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountAppClientService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountAppClientService/GetAppClientCloudAccount"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "OtpService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.OtpService/CreateOtp"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "OtpService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.OtpService/VerifyOtp"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "OtpService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.OtpService/ResendOtp"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountInvitationService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountInvitationService/CreateInvite"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountInvitationService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountInvitationService/ReadInvite"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountInvitationService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountInvitationService/ResendInvite"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountInvitationService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountInvitationService/RevokeInvite"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountInvitationService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountInvitationService/ValidateInviteCode"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountInvitationService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountInvitationService/SendInviteCode"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountInvitationService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountInvitationService/RemoveInvite"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudAccountInvitationMemberService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudAccountInvitationMemberService/RejectInvite"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudaccount"
{{- end }}
{{- if and (has "CloudCreditsCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCreditService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCreditService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCreditService/ReadCredits"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCreditService/ReadUnappliedCreditBalance"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCreditService/ReadInternal"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCreditService/CreditMigrate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCreditService/DeleteMigratedCredit"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCreditService/CreateCreditStateLog"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCreditService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCreditService/ReadCreditStateLog"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCouponService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCouponService/Redeem"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCouponService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCouponService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCouponService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCouponService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudCreditsCouponService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudCreditsCouponService/Disable"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudcredits"
{{- end }}
{{- if and (has "CloudMonitorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudMonitorService/QueryResourcesMetrics"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor"
{{- end }}
{{- if and (has "CloudMonitorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudMonitorService/EnableMonitor"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor"
{{- end }}
{{- if and (has "CloudMonitorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudMonitorService/DisableMonitor"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor"
{{- end }}
{{- if and (has "CloudMonitorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudMonitorService/GetMetricTypes"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor"
{{- end }}
{{- if and (has "CloudMonitorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudMonitorService/GetIntervals"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor"
{{- end }}
{{- if and (has "CloudMonitorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.CloudMonitorService/GetResourceCategories"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor"
{{- end }}
{{- if and (has "CloudMonitorLogsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.CloudMonitorLogsService/SearchAllLogs"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor_logs"
{{- end }}
{{- if and (has "CloudMonitorLogsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.CloudMonitorLogsService/SearchLogsByTerm"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor_logs"
{{- end }}
{{- if and (has "CloudMonitorLogsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.CloudMonitorLogsService/SearchPanelData"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor_logs"
{{- end }}
{{- if and (has "CloudMonitorLogsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.CloudMonitorLogsService/SearchLogsByFilter"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor_logs"
{{- end }}
{{- if and (has "CloudMonitorLogsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.CloudMonitorLogsService/SearchLogsByPhrase"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor_logs"
{{- end }}
{{- if and (has "CloudMonitorLogsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.CloudMonitorLogsService/UserRegistration"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "cloudmonitor_logs"
{{- end }}
{{- if and (has "SshPublicKeyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SshPublicKeyService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "SshPublicKeyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SshPublicKeyService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "SshPublicKeyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SshPublicKeyService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "SshPublicKeyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SshPublicKeyService/SearchStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "SshPublicKeyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SshPublicKeyService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "SshPublicKeyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SshPublicKeyService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceGroupService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceGroupService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceGroupService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceGroupService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceGroupService/DeleteMember"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceGroupService/ScaleUp"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceGroupService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceTypeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceTypeService/Put"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceTypeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceTypeService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceTypeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceTypeService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceTypeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceTypeService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstanceTypeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceTypeService/SearchStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "MachineImageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.MachineImageService/Put"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "MachineImageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.MachineImageService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "MachineImageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.MachineImageService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "MachineImageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.MachineImageService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "MachineImageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.MachineImageService/SearchStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "VNetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetService/Put"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "VNetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "VNetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "VNetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetService/SearchStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "VNetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "VNetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "LoadBalancerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "LoadBalancerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "LoadBalancerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "LoadBalancerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "LoadBalancerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "LoadBalancerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/CreatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/CreateMultiplePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/UpdatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/UpdateStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/RemoveFinalizer"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/SearchPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/SearchStreamPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/Watch"
                    route:
                      auto_host_rewrite: true                      
                      timeout: 0s
                      idle_timeout: 0s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstancePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstancePrivateService/DeletePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstanceGroupPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceGroupPrivateService/CreatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstanceSchedulingService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceSchedulingService/Schedule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstanceSchedulingService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceSchedulingService/Ready"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstanceSchedulingService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceSchedulingService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "InstanceSchedulingService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.InstanceSchedulingService/GetStatistics"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "IpResourceManagerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IpResourceManagerService/PutSubnet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "IpResourceManagerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IpResourceManagerService/DeleteSubnet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "IpResourceManagerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IpResourceManagerService/SearchSubnetStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "IpResourceManagerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IpResourceManagerService/ReserveSubnet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "IpResourceManagerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IpResourceManagerService/ReleaseSubnet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "IpResourceManagerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IpResourceManagerService/ReserveAddress"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "IpResourceManagerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IpResourceManagerService/ReleaseAddress"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "IpResourceManagerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IpResourceManagerService/GetSubnetStatistics"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "IpResourceManagerService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IpResourceManagerService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "VNetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetPrivateService/ReserveSubnet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "VNetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetPrivateService/ReleaseSubnet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "VNetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetPrivateService/ReserveAddress"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "VNetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetPrivateService/ReleaseAddress"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "VNetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VNetPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "LoadBalancerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerPrivateService/CreatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "LoadBalancerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerPrivateService/UpdateStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "LoadBalancerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerPrivateService/RemoveFinalizer"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "LoadBalancerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "LoadBalancerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerPrivateService/DeletePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "LoadBalancerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerPrivateService/SearchStreamPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "LoadBalancerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.LoadBalancerPrivateService/Watch"
                    route:
                      auto_host_rewrite: true                      
                      timeout: 0s
                      idle_timeout: 0s
                      cluster: "compute_private"
{{- end }}
{{- if and (has "ConsoleInvoiceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ConsoleInvoiceService/ReadUnbilled"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "console"
{{- end }}
{{- if and (has "DpaiAirflowSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowSizeService/DpaiAirflowSizeCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowSizeService/DpaiAirflowSizeList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowSizeService/DpaiAirflowSizeGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowSizeService/DpaiAirflowSizeGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowSizeService/DpaiAirflowSizeUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowSizeService/DpaiAirflowSizeDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowVersionService/DpaiAirflowVersionCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowVersionService/DpaiAirflowVersionList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowVersionService/DpaiAirflowVersionGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowVersionService/DpaiAirflowVersionGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowVersionService/DpaiAirflowVersionUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowVersionService/DpaiAirflowVersionDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowConfService/DpaiAirflowConfCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowConfService/DpaiAirflowConfList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowConfService/DpaiAirflowConfGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowConfService/DpaiAirflowConfDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowConfService/DpaiAirflowConfDeleteByAirflowId"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowListUpgrade"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowUpgrade"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowRestart"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiAirflowService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiAirflowService/DpaiAirflowResize"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_airflow"
{{- end }}
{{- if and (has "DpaiDeploymentService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentService/DpaiDeploymentCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiDeploymentService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentService/DpaiDeploymentList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiDeploymentService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentService/DpaiDeploymentGet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiDeploymentService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentService/DpaiDeploymentDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiDeploymentService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiDeploymentTaskService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentTaskService/DpaiDeploymentTaskCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiDeploymentTaskService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentTaskService/DpaiDeploymentTaskList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiDeploymentTaskService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentTaskService/DpaiDeploymentTaskGet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiDeploymentTaskService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentTaskService/DpaiDeploymentTaskUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiDeploymentTaskService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiDeploymentTaskService/DpaiDeploymentTaskDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_deployment"
{{- end }}
{{- if and (has "DpaiHmsConfGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfGroupService/DpaiHmsConfGroupCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfGroupService/DpaiHmsConfGroupList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfGroupService/DpaiHmsConfGroupGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfGroupService/DpaiHmsConfGroupGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfGroupService/DpaiHmsConfGroupUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfGroupService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfGroupService/DpaiHmsConfGroupDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfService/DpaiHmsConfCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfService/DpaiHmsConfList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfService/DpaiHmsConfListByGroupId"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfService/DpaiHmsConfGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfService/DpaiHmsConfUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfService/DpaiHmsConfDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsConfService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsConfService/DpaiHmsConfDeleteByHmsId"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsSizeService/DpaiHmsSizeCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsSizeService/DpaiHmsSizeList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsSizeService/DpaiHmsSizeGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsSizeService/DpaiHmsSizeGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsSizeService/DpaiHmsSizeUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsSizeService/DpaiHmsSizeDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsVersionService/DpaiHmsVersionCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsVersionService/DpaiHmsVersionList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsVersionService/DpaiHmsVersionGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsVersionService/DpaiHmsVersionGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsVersionService/DpaiHmsVersionUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsVersionService/DpaiHmsVersionDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsListUpgrade"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsUpgrade"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsRestart"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiHmsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiHmsService/DpaiHmsResize"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_hms"
{{- end }}
{{- if and (has "DpaiPostgresSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresSizeService/DpaiPostgresSizeCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresSizeService/DpaiPostgresSizeList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresSizeService/DpaiPostgresSizeGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresSizeService/DpaiPostgresSizeGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresSizeService/DpaiPostgresSizeUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresSizeService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresSizeService/DpaiPostgresSizeDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresVersionService/DpaiPostgresVersionCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresVersionService/DpaiPostgresVersionList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresVersionService/DpaiPostgresVersionGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresVersionService/DpaiPostgresVersionGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresVersionService/DpaiPostgresVersionUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresVersionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresVersionService/DpaiPostgresVersionDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresGetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresGetByName"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresListUpgrade"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresUpgrade"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresRestart"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiPostgresService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiPostgresService/DpaiPostgresResize"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_postgres"
{{- end }}
{{- if and (has "DpaiWorkspaceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiWorkspaceService/DpaiWorkspaceCreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_workspace"
{{- end }}
{{- if and (has "DpaiWorkspaceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiWorkspaceService/DpaiWorkspaceList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_workspace"
{{- end }}
{{- if and (has "DpaiWorkspaceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiWorkspaceService/DpaiWorkspaceGet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_workspace"
{{- end }}
{{- if and (has "DpaiWorkspaceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiWorkspaceService/DpaiWorkspaceUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_workspace"
{{- end }}
{{- if and (has "DpaiWorkspaceService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.DpaiWorkspaceService/DpaiWorkspaceDelete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "dpai_workspace"
{{- end }}
{{- if and (has "FleetAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminService/SearchComputeNodePoolsForInstanceScheduling"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin"
{{- end }}
{{- if and (has "FleetAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminService/UpdateComputeNodePoolsForCloudAccount"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin"
{{- end }}
{{- if and (has "FleetAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin"
{{- end }}
{{- if and (has "FleetAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminService/GetResourcePatches"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin"
{{- end }}
{{- if and (has "FleetAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminService/ReportNodeStatistics"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/AddCloudAccountToComputeNodePool"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/DeleteCloudAccountFromComputeNodePool"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/SearchNodes"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/UpdateNode"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/SearchComputeNodePoolsForNodeAdmin"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/PutComputeNodePool"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/SearchComputeNodePoolsForPoolAccountManager"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/SearchCloudAccountsForComputeNodePool"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "FleetAdminUIService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FleetAdminUIService/SearchInstanceTypeStatsForNode"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "fleet_admin_ui_server"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/CreateNewCluster"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetClusters"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetCluster"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/PutCluster"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/UpgradeCluster"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/EnableClusterStorage"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/UpdateClusterStorage"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/DeleteCluster"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetClusterStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/CreateNodeGroup"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetNodeGroups"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetNodeGroup"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/PutNodeGroup"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/UpgradeNodeGroup"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/DeleteNodeGroup"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetNodeGroupStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/DeleteNodeGroupInstance"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetPublicK8sVersions"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetPublicRuntimes"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetPublicInstanceTypes"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetKubeConfig"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/RetrieveKubeConfig"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/CreateNewVip"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetVips"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetVip"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/DeleteVip"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/UpdateFirewallRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/GetFirewallRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "Iks" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Iks/DeleteFirewallRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "IksSuperCompute" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksSuperCompute/SuperComputeCreateCluster"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/AuthenticateIKSAdminUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/CreateIMI"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetIMIs"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetIMI"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetIMIsInfo"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/PutIMI"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/UpdateIMIInstanceTypeToK8sCompatibility"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/DeleteIMI"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/CreateK8SVersion"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetK8SVersions"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetK8SVersion"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/PutK8SVersion"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/DeleteK8SVersion"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/CreateNewAddOn"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetAddOns"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetAddOn"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/PutAddOn"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/DeleteAddOn"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetClusters"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetCluster"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/PutCPNodegroup"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/UpgradeClusterControlPlane"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetEvents"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/ClusterSnapshot"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/ClusterRecreate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/PostLoadBalancer"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/PutLoadBalancer"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetLoadBalancers"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetLoadBalancer"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/DeleteLoadBalancer"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetControlPlaneSSHKeys"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetCloudAccountApproveList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/PostCloudAccountApproveList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/PutCloudAccountApproveList"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/CreateInstanceTypes"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetInstanceTypes"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetInstanceType"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetInstanceTypeInfo"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/PutInstanceType"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/UpdateInstanceTypeIMIToK8sCompatibility"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/DeleteInstanceType"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksAdmin" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksAdmin/GetFirewallRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_admin"
{{- end }}
{{- if and (has "IksPrivateReconciler" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksPrivateReconciler/GetClustersReconciler"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_private_reconciler"
{{- end }}
{{- if and (has "IksPrivateReconciler" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksPrivateReconciler/PutClusterStateReconciler"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_private_reconciler"
{{- end }}
{{- if and (has "IksPrivateReconciler" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksPrivateReconciler/PutClusterChangeAppliedReconciler"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_private_reconciler"
{{- end }}
{{- if and (has "IksPrivateReconciler" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksPrivateReconciler/PutClusterStatusReconciler"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_private_reconciler"
{{- end }}
{{- if and (has "IksPrivateReconciler" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksPrivateReconciler/PutClusterCertsReconciler"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_private_reconciler"
{{- end }}
{{- if and (has "IksPrivateReconciler" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IksPrivateReconciler/DeleteClusterReconciler"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "iks_private_reconciler"
{{- end }}
{{- if and (has "Dispatcher" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Dispatcher/GenerateStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "infaas-dispatcher"
{{- end }}
{{- if and (has "Dispatcher" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Dispatcher/Generate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "infaas-dispatcher"
{{- end }}
{{- if and (has "Dispatcher" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.Dispatcher/DoWork"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "infaas-dispatcher"
{{- end }}
{{- if and (has "TextGenerator" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.TextGenerator/GenerateStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "infaas-generate"
{{- end }}
{{- if and (has "TextGenerator" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.TextGenerator/ChatCompletionStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "infaas-generate"
{{- end }}
{{- if and (has "KFService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.KFService/GetKFStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "kfaas"
{{- end }}
{{- if and (has "KFService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.KFService/GetUserCredentials"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "kfaas"
{{- end }}
{{- if and (has "KFService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.KFService/GetExternalIP"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "kfaas"
{{- end }}
{{- if and (has "KFService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.KFService/CreateKubeFlowDeployment"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "kfaas"
{{- end }}
{{- if and (has "KFService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.KFService/ListKubeFlowDeployment"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "kfaas"
{{- end }}
{{- if and (has "KFService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.KFService/DeleteKubeFlowDeployment"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "kfaas"
{{- end }}
{{- if and (has "KFService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.KFService/ExecuteKFPreCheck"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "kfaas"
{{- end }}
{{- if and (has "KFService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.KFService/GetJobStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "kfaas"
{{- end }}
{{- if and (has "MaasGateway" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.MaasGateway/GenerateStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "maas-gateway"
{{- end }}
{{- if and (has "MaasGateway" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.MaasGateway/GetSupportedModels"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "maas-gateway"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/CreateInvalidRecords"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/SearchInvalid"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/SearchResourceMeteringRecordsAsStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/SearchResourceMeteringRecords"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/FindPrevious"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/IsMeteringRecordAvailable"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "MeteringService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.MeteringService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "metering"
{{- end }}
{{- if and (has "AddressTranslationPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.AddressTranslationPrivateService/CreatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_address_translation_private"
{{- end }}
{{- if and (has "AddressTranslationPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.AddressTranslationPrivateService/GetPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_address_translation_private"
{{- end }}
{{- if and (has "AddressTranslationPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.AddressTranslationPrivateService/ListPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_address_translation_private"
{{- end }}
{{- if and (has "AddressTranslationPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.AddressTranslationPrivateService/DeletePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_address_translation_private"
{{- end }}
{{- if and (has "AddressTranslationPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.AddressTranslationPrivateService/UpdateStatusPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_address_translation_private"
{{- end }}
{{- if and (has "AddressTranslationPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.AddressTranslationPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_address_translation_private"
{{- end }}
{{- if and (has "AddressTranslationPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.AddressTranslationPrivateService/SearchStreamPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_address_translation_private"
{{- end }}
{{- if and (has "AddressTranslationPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.AddressTranslationPrivateService/Watch"
                    route:
                      auto_host_rewrite: true                      
                      timeout: 0s
                      idle_timeout: 0s
                      cluster: "network_address_translation_private"
{{- end }}
{{- if and (has "GlobalOperationsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.GlobalOperationsService/CreateDefault"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_global_operations"
{{- end }}
{{- if and (has "GlobalOperationsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.GlobalOperationsService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_global_operations"
{{- end }}
{{- if and (has "IPRMPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IPRMPrivateService/ReservePort"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_iprm_private"
{{- end }}
{{- if and (has "IPRMPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IPRMPrivateService/ReleasePort"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_iprm_private"
{{- end }}
{{- if and (has "IPRMPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IPRMPrivateService/SearchStreamPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_iprm_private"
{{- end }}
{{- if and (has "IPRMPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IPRMPrivateService/Watch"
                    route:
                      auto_host_rewrite: true                      
                      timeout: 0s
                      idle_timeout: 0s
                      cluster: "network_iprm_private"
{{- end }}
{{- if and (has "IPRMPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IPRMPrivateService/UpdateStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_iprm_private"
{{- end }}
{{- if and (has "IPRMPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IPRMPrivateService/GetPortPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_iprm_private"
{{- end }}
{{- if and (has "IPRMPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.IPRMPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_iprm_private"
{{- end }}
{{- if and (has "SubnetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet"
{{- end }}
{{- if and (has "SubnetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet"
{{- end }}
{{- if and (has "SubnetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet"
{{- end }}
{{- if and (has "SubnetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet"
{{- end }}
{{- if and (has "SubnetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet"
{{- end }}
{{- if and (has "SubnetService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet"
{{- end }}
{{- if and (has "SubnetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetPrivateService/CreatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet_private"
{{- end }}
{{- if and (has "SubnetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetPrivateService/UpdatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet_private"
{{- end }}
{{- if and (has "SubnetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetPrivateService/GetPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet_private"
{{- end }}
{{- if and (has "SubnetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetPrivateService/SearchStreamPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet_private"
{{- end }}
{{- if and (has "SubnetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetPrivateService/Watch"
                    route:
                      auto_host_rewrite: true                      
                      timeout: 0s
                      idle_timeout: 0s
                      cluster: "network_subnet_private"
{{- end }}
{{- if and (has "SubnetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetPrivateService/UpdateStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet_private"
{{- end }}
{{- if and (has "SubnetPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SubnetPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_subnet_private"
{{- end }}
{{- if and (has "VPCService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc"
{{- end }}
{{- if and (has "VPCService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc"
{{- end }}
{{- if and (has "VPCService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc"
{{- end }}
{{- if and (has "VPCService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc"
{{- end }}
{{- if and (has "VPCService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc"
{{- end }}
{{- if and (has "VPCService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc"
{{- end }}
{{- if and (has "VPCPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCPrivateService/CreatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc_private"
{{- end }}
{{- if and (has "VPCPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCPrivateService/GetPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc_private"
{{- end }}
{{- if and (has "VPCPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCPrivateService/SearchStreamPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc_private"
{{- end }}
{{- if and (has "VPCPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCPrivateService/Watch"
                    route:
                      auto_host_rewrite: true                      
                      timeout: 0s
                      idle_timeout: 0s
                      cluster: "network_vpc_private"
{{- end }}
{{- if and (has "VPCPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCPrivateService/UpdateStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc_private"
{{- end }}
{{- if and (has "VPCPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.VPCPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "network_vpc_private"
{{- end }}
{{- if and (has "NotificationGatewayService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.NotificationGatewayService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "NotificationGatewayService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.NotificationGatewayService/sendEmailNotification"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "NotificationGatewayService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.NotificationGatewayService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "NotificationGatewayService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.NotificationGatewayService/Subscribe"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "NotificationGatewayService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.NotificationGatewayService/DismissEvent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "NotificationGatewayService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.NotificationGatewayService/PublishEvent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "NotificationGatewayService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.NotificationGatewayService/SubscribeEvents"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "NotificationGatewayService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.NotificationGatewayService/ReceiveEvents"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "NotificationGatewayService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.NotificationGatewayService/DeleteEvents"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "EmailNotificationService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.EmailNotificationService/SendUserEmail"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "EmailNotificationService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.EmailNotificationService/SendEmail"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "notification-gateway"
{{- end }}
{{- if and (has "ProductVendorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductVendorService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogService/AdminRead"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogService/UserRead"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogService/UserReadExternal"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogService/SetStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductAccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductAccessService/ReadAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductAccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductAccessService/AddAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductAccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductAccessService/RemoveAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductAccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductAccessService/CheckProductAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "RegionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.RegionService/Add"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "RegionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.RegionService/AdminRead"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "RegionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.RegionService/UserRead"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "RegionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.RegionService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "RegionService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.RegionService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "RegionAccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.RegionAccessService/ReadAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "RegionAccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.RegionAccessService/AddAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "RegionAccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.RegionAccessService/RemoveAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "RegionAccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.RegionAccessService/CheckRegionAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductSyncService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductSyncService/SearchStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductSyncService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductSyncService/Put"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductSyncService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductSyncService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductSyncService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductSyncService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "VendorSyncService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.VendorSyncService/SearchStream"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "VendorSyncService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.VendorSyncService/Put"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "VendorSyncService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.VendorSyncService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "VendorSyncService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.VendorSyncService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "FamilyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.FamilyService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "FamilyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.FamilyService/Add"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "FamilyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.FamilyService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "FamilyService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.FamilyService/GetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "VendorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.VendorService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "VendorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.VendorService/Add"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "VendorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.VendorService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "VendorService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.VendorService/GetById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogServiceV2" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogServiceV2/AdminRead"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogServiceV2" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogServiceV2/UserRead"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogServiceV2" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogServiceV2/UserReadExternal"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogServiceV2" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogServiceV2/SetStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductCatalogServiceV2" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductCatalogServiceV2/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "AccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AccessService/ReadAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "AccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AccessService/AddAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "AccessService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.AccessService/RemoveAccess"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductChangeRequestService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductChangeRequestService/AddProductDataInChangeRequest"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductChangeRequestService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductChangeRequestService/UpdateProductDataInChangeRequest"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductChangeRequestService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductChangeRequestService/ReviewProductChangeRequest"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductChangeRequestService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductChangeRequestService/EnableProductInChangeRequest"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductChangeRequestService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductChangeRequestService/ReadProductChangeRequest"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductInterestService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductInterestService/Read"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "ProductInterestService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.ProductInterestService/Add"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "productcatalog"
{{- end }}
{{- if and (has "QuotaManagementPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementPrivateService/GetResourceQuotaPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_admin_private"
{{- end }}
{{- if and (has "QuotaManagementPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_admin_private"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/Register"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/ListRegisteredServices"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/ListServiceResources"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/GetServiceResource"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/UpdateServiceRegistration"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/DeleteService"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/CreateServiceQuota"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/GetServiceQuotaResource"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/DeleteServiceQuotaResource"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/UpdateServiceQuotaResource"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/ListServiceQuota"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "QuotaManagementService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.QuotaManagementService/ListAllServiceQuotas"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "quota_management"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/CreateRelease"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetRelease"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetAllReleases"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/StoreReleaseSBOM"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/StoreReleaseComponent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetReleaseComponent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetReleaseSBOM"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/StoreReleaseVulnerabilityReport"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/StoreCISReport"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetReleaseVulnerabilities"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetCISReport"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/UpdateRecommendationPolicy"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetSummary"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetRecommendationPolicies"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetRecommendationPolicy"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetUpdateRecommendation"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/GetAllComponents"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "SecurityInsights" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.SecurityInsights/CompareReleaseVulnerabilities"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "security-insights"
{{- end }}
{{- if and (has "FileStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FileStorageService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "FileStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FileStorageService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "FileStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FileStorageService/Search"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "FileStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FileStorageService/Update"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "FileStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FileStorageService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "FileStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FileStorageService/GetUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "FileStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FileStorageService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/CreateBucket"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/GetBucket"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/SearchBucket"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/DeleteBucket"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/CreateBucketLifecycleRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/GetBucketLifecycleRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/SearchBucketLifecycleRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/UpdateBucketLifecycleRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/DeleteBucketLifecycleRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/CreateObjectUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/GetObjectUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/SearchObjectUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/DeleteObjectUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/UpdateObjectUserPolicy"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/UpdateObjectUserCredentials"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "ObjectStorageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage"
{{- end }}
{{- if and (has "StorageAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageAdminService/GetResourceUsage"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_admin"
{{- end }}
{{- if and (has "StorageAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageAdminService/InsertStorageQuotaByAccount"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_admin"
{{- end }}
{{- if and (has "StorageAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageAdminService/UpdateStorageQuotaByAccount"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_admin"
{{- end }}
{{- if and (has "StorageAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageAdminService/DeleteStorageQuotaByAccount"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_admin"
{{- end }}
{{- if and (has "StorageAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageAdminService/GetStorageQuotaByAccount"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_admin"
{{- end }}
{{- if and (has "StorageAdminService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageAdminService/GetAllStorageQuota"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_admin"
{{- end }}
{{- if and (has "StorageKMSPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageKMSPrivateService/Put"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_kms"
{{- end }}
{{- if and (has "StorageKMSPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageKMSPrivateService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_kms"
{{- end }}
{{- if and (has "StorageKMSPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageKMSPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_kms"
{{- end }}
{{- if and (has "StorageKMSPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.StorageKMSPrivateService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_kms"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/CreatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/GetPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/UpdatePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/DeletePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/GetUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/CreateorGetUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/DeleteUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/UpdateStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/SearchFilesystemRequests"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/RemoveFinalizer"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemSchedulerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemSchedulerPrivateService/ScheduleFile"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemSchedulerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemSchedulerPrivateService/ScheduleBucket"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemSchedulerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemSchedulerPrivateService/ListClusters"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemSchedulerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemSchedulerPrivateService/ListFilesystemInOrgs"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemSchedulerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemSchedulerPrivateService/ListFilesystemOrgs"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemSchedulerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemSchedulerPrivateService/IsOrgExists"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemSchedulerPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemSchedulerPrivateService/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemUserPrivateService/CreateOrUpdate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemUserPrivateService/PingFileUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemUserPrivateService/CreateOrGet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemUserPrivateService/Delete"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemStorageClusterPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemStorageClusterPrivateService/RegisterAgent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemStorageClusterPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemStorageClusterPrivateService/DeRegisterAgent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemStorageClusterPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemStorageClusterPrivateService/GetRegisteredAgent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemStorageClusterPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemStorageClusterPrivateService/ListRegisteredAgents"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemStorageClusterPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemStorageClusterPrivateService/ListClusters"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemStorageClusterPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemStorageClusterPrivateService/PingFilesystemClusterPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "WekaStatefulAgentPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.WekaStatefulAgentPrivateService/RegisterAgent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "WekaStatefulAgentPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.WekaStatefulAgentPrivateService/DeRegisterAgent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "WekaStatefulAgentPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.WekaStatefulAgentPrivateService/GetRegisteredAgent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "WekaStatefulAgentPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.WekaStatefulAgentPrivateService/ListRegisteredAgents"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "WekaStatefulAgentPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.WekaStatefulAgentPrivateService/PingWekaStatefulAgentPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "BucketUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.BucketUserPrivateService/CreateBucketUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "BucketUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.BucketUserPrivateService/UpdateBucketUserPolicy"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "BucketUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.BucketUserPrivateService/UpdateBucketUserCredentials"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "BucketUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.BucketUserPrivateService/DeleteBucketUser"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "BucketUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.BucketUserPrivateService/GetBucketCapacity"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "BucketUserPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.BucketUserPrivateService/PingBucketUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemOrgPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemOrgPrivateService/CreateFilesystemOrgPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemOrgPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemOrgPrivateService/GetFilesystemOrgPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemOrgPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemOrgPrivateService/UpdateFilesystemOrgPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemOrgPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemOrgPrivateService/DeleteFilesystemOrgPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemOrgPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemOrgPrivateService/ListFilesystemsInOrgPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "FilesystemOrgPrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.FilesystemOrgPrivateService/ListFilesystemOrgsPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/CreateBucketPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/GetBucketPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/SearchBucketPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/DeleteBucketPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/CreateBucketLifecycleRulePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/GetBucketLifecycleRulePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/SearchBucketLifecycleRulePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/UpdateBucketLifecycleRulePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/DeleteBucketLifecycleRulePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/CreateObjectUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/GetObjectUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/SearchObjectUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/DeleteObjectUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/UpdateObjectUserPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/UpdateBucketStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/RemoveBucketFinalizer"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/UpdateObjectUserStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/RemoveObjectUserFinalizer"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/AddBucketSubnet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/RemoveBucketSubnet"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/GetBucketSubnetEvent"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/UpdateBucketSubnetStatus"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "ObjectStorageServicePrivate" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.ObjectStorageServicePrivate/PingPrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "BucketLifecyclePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.BucketLifecyclePrivateService/CreateOrUpdateLifecycleRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "BucketLifecyclePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.BucketLifecyclePrivateService/DeleteLifecycleRule"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "BucketLifecyclePrivateService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.BucketLifecyclePrivateService/PingBucketLifecyclePrivate"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "storage_private"
{{- end }}
{{- if and (has "TrainingClusterService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.TrainingClusterService/Create"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "training"
{{- end }}
{{- if and (has "TrainingClusterService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.TrainingClusterService/Get"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "training"
{{- end }}
{{- if and (has "TrainingClusterService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.TrainingClusterService/List"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "training"
{{- end }}
{{- if and (has "TrainingBatchUserService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.TrainingBatchUserService/Register"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "training"
{{- end }}
{{- if and (has "TrainingBatchUserService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "regional")) }}
                  - match:
                      prefix: "/proto.TrainingBatchUserService/GetExpiryTimeById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "training"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/PostBulkUploadResourceUsages"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/CreateResourceUsage"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/UpdateResourceUsage"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/GetResourceUsageById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/MarkResourceUsageAsReported"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/GetProductUsageById"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/SearchResourceUsages"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/SearchProductUsages"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/UpdateProductUsageReport"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/SearchProductUsagesReport"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/MarkProductUsageAsReported"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/SearchUsages"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/StreamSearchResourceUsages"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/StreamSearchProductUsages"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageRecordService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageRecordService/CreateProductUsageRecord"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageRecordService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageRecordService/SearchProductUsageRecords"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageRecordService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageRecordService/SearchInvalidProductUsageRecords"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UsageRecordService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UsageRecordService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "usage"
{{- end }}
{{- if and (has "UserCredentialsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UserCredentialsService/GetUserCredentials"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "user-credentials"
{{- end }}
{{- if and (has "UserCredentialsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UserCredentialsService/CreateUserCredentials"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "user-credentials"
{{- end }}
{{- if and (has "UserCredentialsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UserCredentialsService/RemoveUserCredentials"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "user-credentials"
{{- end }}
{{- if and (has "UserCredentialsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UserCredentialsService/RevokeUserCredentials"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "user-credentials"
{{- end }}
{{- if and (has "UserCredentialsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UserCredentialsService/RemoveMemberUserCredentials"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "user-credentials"
{{- end }}
{{- if and (has "UserCredentialsService" $.Values.enabledServices)  (or (eq $.Values.deployment "all") (eq $.Values.deployment "global")) }}
                  - match:
                      prefix: "/proto.UserCredentialsService/Ping"
                    route:
                      auto_host_rewrite: true
                      timeout: 60s
                      cluster: "user-credentials"
{{- end }}
          transport_socket:
            name: envoy.transport_sockets.raw_buffer
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer
{{- if $.Values.tls.enabled }}
              tcp_keepalive:
                keepalive_probes: 10              # Number of keepalive probes sent before the connection is considered dead.
                keepalive_time: 120               # Time (in seconds) between subsequent keepalive probes.
                keepalive_interval: 30            # Time (in seconds) between the first keepalive probe and the first retransmission.
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              require_client_certificate: {{ $.Values.tls.server.requireClientCertificate }}
              common_tls_context:
                tls_certificate_sds_secret_configs:
                  name: tls_sds
                  sds_config:
                    path: /etc/envoy/sds.yaml
                validation_context:
                  trusted_ca:
                    filename: /vault/secrets/ca.pem
                  watched_directory:
                    path: /vault/secrets
                  trust_chain_verification: {{ $trust_chain_verification }}
{{- end }}
      clusters:
{{- if .Values.rateLimit.enabled }}
      - name: rate_limit_cluster
        connect_timeout: 0.25s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: rate_limit_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}rate-limit{{ .Values.targetAddressSuffix }}
                    port_value: 8081
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              tls_certificates:
                - certificate_chain:
                    filename: /vault/secrets/cert.pem
                  private_key:
                    filename: /vault/secrets/cert.key
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }}
{{- end }}
{{- range $key, $value := $.Values.oidc.servers }}
      - name: oidc_cluster_{{ $key  }}
        connect_timeout: {{ $.Values.oidc.oidcServerConnectTimeout }}
        type: LOGICAL_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: oidc_cluster_{{ $key  }}
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ $value.server }}
                    port_value: {{ $value.port }}
{{- if ne (index $value "useTls") false }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: {{ $value.server }}
{{- end }}
{{- end }}
      - name: "grpc-reflect"
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: "grpc-reflect"
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}grpc-reflect{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: grpc-reflect.idcs-system.svc.cluster.local
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: authz
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: authz
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}authz{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "authz" "compute") (eq "authz" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}authz{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: billing-driver
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: billing-driver
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}billing-driver{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "billing-driver" "compute") (eq "billing-driver" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}billing-driver{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: billing
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: billing
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}billing{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "billing" "compute") (eq "billing" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}billing{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: cloudaccount-enroll
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: cloudaccount-enroll
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}cloudaccount-enroll{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "cloudaccount-enroll" "compute") (eq "cloudaccount-enroll" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}cloudaccount-enroll{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: cloudaccount
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: cloudaccount
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}cloudaccount{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "cloudaccount" "compute") (eq "cloudaccount" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}cloudaccount{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: cloudcredits
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: cloudcredits
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}cloudcredits{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "cloudcredits" "compute") (eq "cloudcredits" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}cloudcredits{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: cloudmonitor
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: cloudmonitor
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}cloudmonitor{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "cloudmonitor" "compute") (eq "cloudmonitor" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}cloudmonitor{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: cloudmonitor_logs
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: cloudmonitor_logs
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}cloudmonitor-logs-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "cloudmonitor_logs" "compute") (eq "cloudmonitor_logs" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}cloudmonitor_logs{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: compute
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: compute
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "compute" "compute") (eq "compute" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}compute{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: compute_private
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: compute_private
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "compute_private" "compute") (eq "compute_private" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}compute_private{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: console
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: console
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}console{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "console" "compute") (eq "console" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}console{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: dataloader
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: dataloader
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}demoservice{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "dataloader" "compute") (eq "dataloader" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}dataloader{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: dpai_airflow
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: dpai_airflow
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}dpai{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "dpai_airflow" "compute") (eq "dpai_airflow" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}dpai_airflow{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: dpai_deployment
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: dpai_deployment
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}dpai{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "dpai_deployment" "compute") (eq "dpai_deployment" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}dpai_deployment{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: dpai_hms
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: dpai_hms
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}dpai{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "dpai_hms" "compute") (eq "dpai_hms" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}dpai_hms{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: dpai_network
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: dpai_network
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}dpai{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "dpai_network" "compute") (eq "dpai_network" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}dpai_network{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: dpai_postgres
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: dpai_postgres
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}dpai{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "dpai_postgres" "compute") (eq "dpai_postgres" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}dpai_postgres{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: dpai_workspace
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: dpai_workspace
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}dpai{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "dpai_workspace" "compute") (eq "dpai_workspace" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}dpai_workspace{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: fleet_admin
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: fleet_admin
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}fleet-admin-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "fleet_admin" "compute") (eq "fleet_admin" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}fleet_admin{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: fleet_admin_ui_server
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: fleet_admin_ui_server
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}fleet-admin-ui-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "fleet_admin_ui_server" "compute") (eq "fleet_admin_ui_server" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}fleet_admin_ui_server{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: fleet_common
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: fleet_common
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}fleet_common{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "fleet_common" "compute") (eq "fleet_common" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}fleet_common{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: iks
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: iks
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}iks{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "iks" "compute") (eq "iks" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}iks{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: iks_admin
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: iks_admin
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}iks{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "iks_admin" "compute") (eq "iks_admin" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}iks_admin{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: iks_private_reconciler
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: iks_private_reconciler
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}iks{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "iks_private_reconciler" "compute") (eq "iks_private_reconciler" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}iks_private_reconciler{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: infaas-dispatcher
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: infaas-dispatcher
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}infaas-dispatcher{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "infaas-dispatcher" "compute") (eq "infaas-dispatcher" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}infaas-dispatcher{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: infaas-generate
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: infaas-generate
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}infaas-generate{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "infaas-generate" "compute") (eq "infaas-generate" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}infaas-generate{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: kfaas
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: kfaas
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}kfaas{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "kfaas" "compute") (eq "kfaas" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}kfaas{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: maas-gateway
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: maas-gateway
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}Maas-gateway{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "maas-gateway" "compute") (eq "maas-gateway" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}maas-gateway{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: metering
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: metering
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}metering{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "metering" "compute") (eq "metering" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}metering{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: network_address_translation_private
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: network_address_translation_private
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}network-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "network_address_translation_private" "compute") (eq "network_address_translation_private" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}network_address_translation_private{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: network_global_operations
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: network_global_operations
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}network-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "network_global_operations" "compute") (eq "network_global_operations" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}network_global_operations{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: network_iprm_private
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: network_iprm_private
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}network-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "network_iprm_private" "compute") (eq "network_iprm_private" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}network_iprm_private{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: network_subnet
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: network_subnet
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}network-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "network_subnet" "compute") (eq "network_subnet" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}network_subnet{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: network_subnet_private
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: network_subnet_private
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}network-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "network_subnet_private" "compute") (eq "network_subnet_private" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}network_subnet_private{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: network_vpc
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: network_vpc
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}network-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "network_vpc" "compute") (eq "network_vpc" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}network_vpc{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: network_vpc_private
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: network_vpc_private
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}network-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "network_vpc_private" "compute") (eq "network_vpc_private" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}network_vpc_private{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: notification-gateway
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: notification-gateway
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}notification-gateway{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "notification-gateway" "compute") (eq "notification-gateway" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}notification-gateway{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: productcatalog
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: productcatalog
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}productcatalog{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "productcatalog" "compute") (eq "productcatalog" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}productcatalog{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: quota_admin_private
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: quota_admin_private
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}quota-management-service{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "quota_admin_private" "compute") (eq "quota_admin_private" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}quota_admin_private{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: quota_management
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: quota_management
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}quota-management-service{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "quota_management" "compute") (eq "quota_management" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}quota_management{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: security-insights
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: security-insights
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}security-insights{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "security-insights" "compute") (eq "security-insights" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}security-insights{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: storage
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: storage
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}storage-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "storage" "compute") (eq "storage" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}storage{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: storage_admin
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: storage_admin
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}storage-admin-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "storage_admin" "compute") (eq "storage_admin" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}storage_admin{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: storage_kms
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: storage_kms
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}storage-kms{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "storage_kms" "compute") (eq "storage_kms" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}storage_kms{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: storage_private
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: storage_private
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}storage-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "storage_private" "compute") (eq "storage_private" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}storage_private{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "regional") }}
      - name: training
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: training
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}training-api-server{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "training" "compute") (eq "training" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}training{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: usage
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: usage
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}usage{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "usage" "compute") (eq "usage" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}usage{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if or (eq $.Values.deployment "all") (eq $.Values.deployment "global") }}
      - name: user-credentials
        connect_timeout: 0.5s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: user-credentials
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.targetAddressPrefix }}user-credentials{{ .Values.targetAddressSuffix }}
                    port_value: 8443
        health_checks:
          timeout: 1s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          tcp_health_check: {}
{{- if $.Values.tls.enabled }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
{{- if (eq $.Values.deployment "all") }}
{{- if or (eq "user-credentials" "compute") (eq "user-credentials" "compute_private") }}
            sni:  {{ .Values.targetAddressPrefix }}compute-api-server{{ .Values.targetAddressSuffix }}
{{- else   }}
            sni:  {{ .Values.targetAddressPrefix }}user-credentials{{ .Values.targetAddressSuffix }}
{{- end }}
{{- end }}
            common_tls_context:
              tls_certificate_sds_secret_configs:
                name: tls_sds
                sds_config:
                  path: /etc/envoy/sds.yaml
              validation_context:
                trusted_ca:
                  filename: /vault/secrets/ca.pem
                watched_directory:
                  path: /vault/secrets
                trust_chain_verification: {{ $trust_chain_verification }} 
{{- end }}
{{- end }}
{{- if .Values.statsd.enabled }}
      - name: statsd-exporter
        connect_timeout: 0.25s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: statsd-exporter
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.statsd.address }}
                    port_value: {{ .Values.statsd.port }}
    stats_sinks:
      - name: envoy.stat_sinks.statsd
        typed_config:
          "@type": type.googleapis.com/envoy.config.metrics.v3.StatsdSink
          tcp_cluster_name: statsd-exporter
          prefix: {{ .Values.statsd.prefix }}
{{- end }}
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 8090
