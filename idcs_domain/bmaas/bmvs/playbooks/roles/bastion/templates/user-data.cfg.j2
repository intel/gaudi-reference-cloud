#cloud-config

{% if inside_intel == true %}
# Add the Intel Certs
# From http://certificates.intel.com/repository/certificates/IntelSHA2RootChain-Base64.zip
# TODO: Have Ansible download and expands these automatically
ca_certs:
  remove_defaults: true
  trusted:
    - |
      -----BEGIN CERTIFICATE-----
      MIIG1TCCBL2gAwIBAgITFAAAAAUoGlpjTNirKgAAAAAABTANBgkqhkiG9w0BAQsF
      ADBIMQswCQYDVQQGEwJVUzEaMBgGA1UEChMRSW50ZWwgQ29ycG9yYXRpb24xHTAb
      BgNVBAMTFEludGVsIFNIQTI1NiBSb290IENBMB4XDTE4MDgyMjE2MjA0MloXDTIz
      MDgyMjE2MzA0MlowUDELMAkGA1UEBhMCVVMxGjAYBgNVBAoTEUludGVsIENvcnBv
      cmF0aW9uMSUwIwYDVQQDExxJbnRlbCBJbnRlcm5hbCBJc3N1aW5nIENBIDVBMIIC
      IjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAnTsvWywdiAzdEvgJY/ojVO53
      ZqU4e1TnW5ylNRL64EbG1Q+4Pf7wmB/tGONasA48ZDr/5zF+cJHrQUvWoFf9Hmso
      BBFlQgCoGEXblRAYqW+9zRCfkGoTjSjkbB0yK4im9Pumqob6UZRAcKLGfKUrE9oS
      CMQeENyi4ZiQixXVvC/EpJWAnBwbESstLLUV5mpJnNwOFx8Uz+znEK1zoOg/L+Yn
      sa/pcuKuEhRWIwp4EOfHBsyw3UZDkoWzuVVMFrxElCvurYwys1wT1iIHUll8eZjY
      8S0MYcSPsN5zrEpNHUYzOb8NrGj3E7xwOtyQf4TU7kTQjhkqu6rhSUcv8T8U2/ss
      /Vmn4TGnwqiSuB0qINwkgmq5hy4NXZbnc0UKuIgrQF5ftCF59Piz4Pc8bGCrd2Ep
      /fniO4fObgFg0amqBDl8fIFU3iUsxyNqzCoqxtxMDDOsDZwMYW8Y1WMnq8cRmnIF
      T4gTOAFa6YNMKpoq7Z0tSO2NXTtNzel6jC/fXjf/CvgyZZuCTLY9H1KxxnEIouxh
      IR3AfjBLT7zkdmUApANuGmDKDqpR/qoW46SuyZREjicLnR4aySRYopNG1axb3cRJ
      Ib7kzbdKSHnP5xQTXQXxZm2LuL+FfhKXqSzyjEULprLWuu0tTn6QDPNeUHbiMbB6
      /5lMVg9eJdsWbt+GJGMCAwEAAaOCAa4wggGqMBIGCSsGAQQBgjcVAQQFAgMBAAEw
      IwYJKwYBBAGCNxUCBBYEFLwrTIz9Ff+ld0UPjQwuL6tGaco9MB0GA1UdDgQWBBQ2
      78dCvGKY12DOaqxg2+H9LqcUbTBFBgNVHSAEPjA8MDoGCyqGSIb4TQEFAWUBMCsw
      KQYIKwYBBQUHAgEWHWh0dHA6Ly9wa2kuaW50ZWwuY29tL2Nwcy5wZGYAMBkGCSsG
      AQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1UdDwQEAwIBhjAPBgNVHRMBAf8EBTAD
      AQH/MB8GA1UdIwQYMBaAFImf0LLtIKmmPkpmqvIegrDWLAk2MD8GA1UdHwQ4MDYw
      NKAyoDCGLmh0dHA6Ly9wa2kuaW50ZWwuY29tL2NybC9JbnRlbFNIQTI1NlJvb3RD
      QS5jcmwwbgYIKwYBBQUHAQEEYjBgMDoGCCsGAQUFBzAChi5odHRwOi8vcGtpLmlu
      dGVsLmNvbS9jcnQvSW50ZWxTSEEyNTZSb290Q0EuY3J0MCIGCCsGAQUFBzABhhZo
      dHRwOi8vT0NTUC5pbnRlbC5jb20vMA0GCSqGSIb3DQEBCwUAA4ICAQAlX08N77y1
      BpizB62MlxtncggaJz+Uq1RG+kfu89mMke1fMMwzKyQAbd6YoaIF/mQ9vv6ZbAFJ
      AYm3RUzwKqqbvaCP8GJ/V9uF0VSbGjdE/s7Hxo8vE6wV7WtbLN5XSEDXpbYXnJ50
      vdhqJdgRsMOJSij87SDKVn6waToHImWWtAvKwabM8s02CINnwj0Vbjn0IE0OVHy5
      AuMxvHAnueYwAOGW0S+eIxpckKQd1Mdy61uW641QsHN3Nq2o2T1f7ed3YpEBYlVX
      LFgpV4mbTbN/hgSjDNNOZ1UKiran4n8ZL0aISBbjXzBFbqx5Nw9rJeVmFZ9bBwSh
      r0RJGvdsqY6rXOlSPt8O5aMBo42PoxxMEkUCjBjmw8xOzqQ0KXbb4K4aQhLf0e8q
      4i6W6zuPHRKCrKhC0qkjiYViuvN02xh/gP9ll+MEJ1Q43w2XnOQf4CfZ7PRx036s
      i7csLIDaRIPIpDIi0V4/9lLFd8p6i9yjWwlNMY9duh01Hwb4plCHK1o4IPF6VR7M
      49zlSpNpjCjMDDtqoRYyLWYamVJ9k2In1wH5aluBhbSfGq6dkDTLH0s+Cj1PtVmz
      R0CQG6jjcpj3E4Q7HzXiBXf0+G5G0KQZ6Es+zniN+aCbcqSUAbNI5cGbOnHX2G1y
      mmiEcnOyFAJJecO7eBV0iDWXbDTxPXXbkg==
      -----END CERTIFICATE-----
    - |
      -----BEGIN CERTIFICATE-----
      MIIG1DCCBLygAwIBAgITFAAAAAfPx1upej2GNwAAAAAABzANBgkqhkiG9w0BAQsF
      ADBIMQswCQYDVQQGEwJVUzEaMBgGA1UEChMRSW50ZWwgQ29ycG9yYXRpb24xHTAb
      BgNVBAMTFEludGVsIFNIQTI1NiBSb290IENBMB4XDTIyMDUxODE3MTgzMloXDTI3
      MDUxODE3MjgzMlowUDELMAkGA1UEBhMCVVMxGjAYBgNVBAoTEUludGVsIENvcnBv
      cmF0aW9uMSUwIwYDVQQDExxJbnRlbCBJbnRlcm5hbCBJc3N1aW5nIENBIDVBMIIC
      IjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAySt2dR9sybkzvglF+csDg4lb
      uGF75wT19yrOh2Pkim39PxRl6PEL3tEzbGRgPEcEqPAFtp5F8g2anidv7MMmoReP
      n2ffpwFgM/R6AcfX5FuugsfcLmjMEq6xlVsXKO2sbOjPiOyN1lWlkgpCMCB2fFFb
      BJjLvCThQ4orQb66LqzzwIGVt1GF/3+dS+C8PNDWXYaIVY4u2HMY1YBsICCIpk1k
      pj7rBF0rc5dJ8lY75pRNVwZDGh7ArvNfT/P4NLTaLwtyccTl52606Oaa31IEOeON
      5SOqRTxKi9zt4fAc0qYraFiEpfc8Yn4p3mKFnqwF+JatZA4I1wFd+uhDvapY4q9S
      4dkFPS3Ag4PeR0lldnlhOjIiso0Qe7CUCqVrci/vjIuVw8i32W0iHo7YKWAnAHxI
      uS9SP0WBj3p6SqTgDuD7iLYRpfYzWWCtrLjWaM/GrbEZEKWt0Y+f03nOU828+MQV
      cvtfIhF5zRcLmpz5OxOTiit2wH7oKdzglWQsqev2Bf/AR3+DkUfYMx04N57Rv3sX
      Smfa+HuXN0vuKle7fcVj3VelZaBA7FtB46A3Zh1IAG5hLGpLnwaj96CvoqE3iz7V
      0+3QOWuuIqbDvCQ93yE9lLhFkje5huv/yuzbppkIMyW71j3Zi4CDR2f3OuKB1Ib7
      ZAICUWOe4KaIPktYKMsCAwEAAaOCAa0wggGpMBIGCSsGAQQBgjcVAQQFAgMCAAIw
      IwYJKwYBBAGCNxUCBBYEFCkdV505xBCictvRW45uqPMFQtiUMB0GA1UdDgQWBBRp
      kJZpxwBpltt7XZqP9jrqKJStJjBEBgNVHSAEPTA7MDkGCyqGSIb4TQEFAWUBMCow
      KAYIKwYBBQUHAgEWHGh0dHA6Ly9wa2kuaW50ZWwuY29tL2Nwcy5wZGYwGQYJKwYB
      BAGCNxQCBAweCgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMB
      Af8wHwYDVR0jBBgwFoAUiZ/Qsu0gqaY+Smaq8h6CsNYsCTYwPwYDVR0fBDgwNjA0
      oDKgMIYuaHR0cDovL3BraS5pbnRlbC5jb20vY3JsL0ludGVsU0hBMjU2Um9vdENB
      LmNybDBuBggrBgEFBQcBAQRiMGAwOgYIKwYBBQUHMAKGLmh0dHA6Ly9wa2kuaW50
      ZWwuY29tL2NydC9JbnRlbFNIQTI1NlJvb3RDQS5jcnQwIgYIKwYBBQUHMAGGFmh0
      dHA6Ly9PQ1NQLmludGVsLmNvbS8wDQYJKoZIhvcNAQELBQADggIBAMEr4lTXCi6h
      CQfmlCP1wr3z6BfUpzfFfEMqB1YAaubW0d6oF0f8i5LSJUxPzb165DcPRVj1vxR1
      vYmcYuIEtoG5Y0OLoVI57Qra8l019lb/ell52CHIW9bsy2QblGpuR38jy+rJZv1r
      520YQROMHRKyNvramzOzWxIIVcTunK8xIPjBXuhVrihZRKAQau3t5HOXKUiX7cJ0
      epIaUEYk2jbMgKBWRwOgJQ424wTB/Ek/y4U3Kk59h6DW2jQD6e7U8Tdnm9FnfVTo
      6zEJaJiZqQi7kVMYqLvnlM6kcV6cqfHL79VWXHa4PKgFFphF/ie0iQR/fwVpKfZf
      jr9xgap+moUsMqYjyV8n5/Eqx3a3k4zSZeYulxqU00K1zEJDE1501zNxFmgaVd/K
      MZVXsKQ23QZDm72Rb0UYM0C/m2w3LCZnMNcgNZ5pZv+kUanRaoOTEBu9UqDNP4Ge
      gdqJmOCXHkGXvamBsfsa3UkXjcJnPo0b83XVXiF2vYNeo1Ikz+Atmm4HV/usBcLG
      UQhIrf0sB7WfJ8US+lLkcAeVYpxZihRI9vVq/SwyAJiNSKC7N9siiXEVtxzERTSc
      5ZpHOi0E3an4Gjpa6mzzL1qgmc+bozsV40SUGPKhqrIQtFVQY9DbzDNPZ3aGQdbN
      QHsQpcp2KxoBAdDT7L9zSOjUvDWJCLlV
      -----END CERTIFICATE-----
    - |
      -----BEGIN CERTIFICATE-----
      MIIG1TCCBL2gAwIBAgITFAAAAAS/8+eXUnE+9QAAAAAABDANBgkqhkiG9w0BAQsF
      ADBIMQswCQYDVQQGEwJVUzEaMBgGA1UEChMRSW50ZWwgQ29ycG9yYXRpb24xHTAb
      BgNVBAMTFEludGVsIFNIQTI1NiBSb290IENBMB4XDTE4MDgyMjE2MjA0OVoXDTIz
      MDgyMjE2MzA0OVowUDELMAkGA1UEBhMCVVMxGjAYBgNVBAoTEUludGVsIENvcnBv
      cmF0aW9uMSUwIwYDVQQDExxJbnRlbCBJbnRlcm5hbCBJc3N1aW5nIENBIDVCMIIC
      IjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAu9MSVCbMr0DntQ3zWmjPMWpW
      wdC5nXn0Di0qHsHLzdmsdwgobvDbbLFpqsspppOqZOJn5bzgpSuLNjkggtL8z5/W
      RahYkMQTzydxHJoPQf/Dh3rQ5T7GB629QMPJrOtJqIsxlT02h2ix4G1e4Ncd/dO5
      MxFkImh7ij3DNQjcAdQGtE4T9DikhI02Ck+1UUWIbuF+SGTYnqgBart8pSppL5LL
      yz9QLwFKL/mUTz19cjJlAjjpnwJVvEMiBnqU96VmmBQjimD8G3lErKrC2AfZAftN
      2AzFba5kmpQTdXGlJ/+ZAB4WXeN44fnYrMP5fWtTPxQmH1+5Ba2pqMYBBNFQ57/l
      Q1kGvWcXcRPbJfqZRmPTfmh9GYARWs50kcCAOEeUCSbRG0K3yEaEXKrHgJoxlEWW
      bTRyCyseWdBwsq5m2dkT1BCLZlEcXtNcs4VGrGn66Ze8nf1EgE5H+QLN7SDGbxHJ
      PpFYSdFFIONkAu7DywvIhhnRjs4dGIzBznARdOp8lbj0XnPrFMv2Yvp9Il4AohpB
      iUOx/wt8ktqCoinxElAMzPJ+grAVGprTQErSE3GD1X/fUGT/cO2MpkcuA6ebJsmV
      WBay4e/G7JPsdDaWIDnDJU292lGx4eUv8Y+Dj11zy41wKf9HtslBR+Vt1tR1+JNt
      vtCh2FVpFqvM0elX6xMCAwEAAaOCAa4wggGqMBIGCSsGAQQBgjcVAQQFAgMBAAEw
      IwYJKwYBBAGCNxUCBBYEFKcYd7xZ+xCergyAjBcCTcDyLu/nMB0GA1UdDgQWBBQi
      MYfGAFRUC0+e7u/eahwU39eG2TBFBgNVHSAEPjA8MDoGCyqGSIb4TQEFAWUBMCsw
      KQYIKwYBBQUHAgEWHWh0dHA6Ly9wa2kuaW50ZWwuY29tL2Nwcy5wZGYAMBkGCSsG
      AQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1UdDwQEAwIBhjAPBgNVHRMBAf8EBTAD
      AQH/MB8GA1UdIwQYMBaAFImf0LLtIKmmPkpmqvIegrDWLAk2MD8GA1UdHwQ4MDYw
      NKAyoDCGLmh0dHA6Ly9wa2kuaW50ZWwuY29tL2NybC9JbnRlbFNIQTI1NlJvb3RD
      QS5jcmwwbgYIKwYBBQUHAQEEYjBgMDoGCCsGAQUFBzAChi5odHRwOi8vcGtpLmlu
      dGVsLmNvbS9jcnQvSW50ZWxTSEEyNTZSb290Q0EuY3J0MCIGCCsGAQUFBzABhhZo
      dHRwOi8vT0NTUC5pbnRlbC5jb20vMA0GCSqGSIb3DQEBCwUAA4ICAQC6guf/pvmi
      W2eYmeMHJ5BwlEEIKnr4IuL9srT3Tqmo5rvEgBpPrtVpZ7Hx1FiXIrBpyqVFG1tP
      Rj9a5q7ul33oo2iIi3C4blZKrla09ce4H8zHzHUh2lh6Tx+thJpPo7QtyrQSWy0+
      83oAWJ1EI5GoH++t4SXhfcuW8PugtKQA08LNcNnvtB86VrAdjgIpV3M8XpOixvW4
      Yp67iI8XmlShPwS98nMxDWH2LPn2///KaImoQn8k9YHFGylt3678a+qvybUJZQlB
      R3MpbHgJdohPD7hyFpwB4tsjxKjNHiBpV7Yt2woN5Eupdko/3oKFtG1LmDI3g0/G
      MwrxxJuDw0bPNaTbGmFQxnUC/egCYwgXrajUqC7R7oXtFxC4Cn/pUCeDZ0GwJZls
      2iwiKK+jrkoEf1/DWctQyZ8/fRwnFxbsACDSlt0H2uWGuZdVi2+56X5Nnmd+qZOK
      9Qg7/8HKpHpO+8ckACC8S+aN6FXJA8lgDw/JNcCrzKoaWTuF3bButcqRzT2rvv1r
      LstRdPd8rvIHsYg9GJQuhQtITWbtk34Xaq8s5ztOjcBxRyeXdDSCiTll3qnDufnc
      8KZCIekxjm+ABBs+V3fl9q2DH59EQDOuSw4KlQ12ijuFp7ggZiDewguTHPjswpdi
      HDMC+b/lgXem21AuygezY+Ml/dTRKnUPrQ==
      -----END CERTIFICATE-----
    - |
      -----BEGIN CERTIFICATE-----
      MIIG1DCCBLygAwIBAgITFAAAAAZzROLYyfpXLAAAAAAABjANBgkqhkiG9w0BAQsF
      ADBIMQswCQYDVQQGEwJVUzEaMBgGA1UEChMRSW50ZWwgQ29ycG9yYXRpb24xHTAb
      BgNVBAMTFEludGVsIFNIQTI1NiBSb290IENBMB4XDTIyMDUxODE3MTgyNVoXDTI3
      MDUxODE3MjgyNVowUDELMAkGA1UEBhMCVVMxGjAYBgNVBAoTEUludGVsIENvcnBv
      cmF0aW9uMSUwIwYDVQQDExxJbnRlbCBJbnRlcm5hbCBJc3N1aW5nIENBIDVCMIIC
      IjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvlXu7y8sCNOqWNyX2BtCITjy
      zP6TAUJfEzSZFb5ki8QY/lpIb0Ux97kS57/HhiTJJDKys1xgZvK99YynK+BkJvN1
      FE7rTu8G3VlR9+ACDQ5dy0OKFUWoU2Ig3GI3NZIAq0hUvD3gWO/zmrb8acpirzup
      N+frsUjegXaewDnwdPjTeFMLv79qIRxD6rjkwbnN4iV/CUXxDyR+j/U6XkDuSbT+
      igMOuzCf+fcNWqvH50GRpXmJPBklHoBhoWYsHj2QBhL7aQlFKe9deTlJ7MtmiqZz
      +M5Ad1dtiTjx0vWypaZP2H6rXxywGIzSP7T1XsT9uQOEeqDyFstZitIHPDt1UerC
      0mQUedmla/gMPilclK3KuThALysOR2Kk1vaqBjUpb4eyiyklpATXCJx4n9AqGd92
      kDAsYrdIKLa9MXEL/8jW2/Mx+sRftFThl8kvTVuW3SOBIl7sMvbkS2bzpxHaVOL3
      QVlKQ47k4FPc5NRe6COFHCRDfYU6s7CZ+3y9hFLQbSDxk07Qa5uR7Et/EBrWILuD
      xNbomEOAul0unBIhrq4mAmtKbVvwU0YZhSFnBdjRuZBR0u68d1pRp0TTSLuxYo18
      x5GzkeEq5R5fk2ZfchVirSptL2D9dFLQGzvQ4xHW6x/zVfpBLEJWOss+pymFythG
      0KctYdRsMnBDRNf5fp0CAwEAAaOCAa0wggGpMBIGCSsGAQQBgjcVAQQFAgMCAAIw
      IwYJKwYBBAGCNxUCBBYEFGN0zGRehmArQX/d2+Jogy5/OnEnMB0GA1UdDgQWBBQT
      jgzaD2U1/uZXl1ZZ+BrmsfMs4zBEBgNVHSAEPTA7MDkGCyqGSIb4TQEFAWUBMCow
      KAYIKwYBBQUHAgEWHGh0dHA6Ly9wa2kuaW50ZWwuY29tL2Nwcy5wZGYwGQYJKwYB
      BAGCNxQCBAweCgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMB
      Af8wHwYDVR0jBBgwFoAUiZ/Qsu0gqaY+Smaq8h6CsNYsCTYwPwYDVR0fBDgwNjA0
      oDKgMIYuaHR0cDovL3BraS5pbnRlbC5jb20vY3JsL0ludGVsU0hBMjU2Um9vdENB
      LmNybDBuBggrBgEFBQcBAQRiMGAwOgYIKwYBBQUHMAKGLmh0dHA6Ly9wa2kuaW50
      ZWwuY29tL2NydC9JbnRlbFNIQTI1NlJvb3RDQS5jcnQwIgYIKwYBBQUHMAGGFmh0
      dHA6Ly9PQ1NQLmludGVsLmNvbS8wDQYJKoZIhvcNAQELBQADggIBAF0z+ZtxffyP
      G/S/APEafPAvvmI+xYN0g7YCLxOGvUzjH8iQIz5RsBQAlHMuew0lmYJ3BQDpH4pZ
      WAfqvBzDRJx5mh529WpQXZIJ6O0y0aMVhcEYIZyH9Zdo86i2iCTrRyVE+XOaybg1
      /LVsyF6ZSM+new+EF8qigQqHMn0K3Y0K9mQ/JdQvRIthWfu4ppokznwmRCPmr212
      kBntsoe24KINO7XmUGNOlCwfCsFH1OBKTuPRMU8bZ91pWHb74GAUyAXRqEi5lIsq
      U4QipCd5rjOvlxatjp48FMC3Z0Ywc3OM3XaBLyAbwlOYV6cbr5zUXVCgn+18ziyk
      1EcG0mUaODdRVmdkXtuA0zR51xVvhsq6LrjJI4WTJN7Wx5prGbUEnURSAco6S2IH
      3egbAjckXlwf+/jBiU0C84uD9v1MjG9W6B7K/JI/kLr+CSOQctKEXKj1Himd07BV
      P1M+GNAs36mOFuiHrBwgdu7iv376Kxv8VPsQYZeT4L9DEk5ZRgRtsehP/zbDsBbp
      tprOTBAmIxXARhIH0/SfWkjkXhMmhzrBSTRN+fQkpPIoCsNzG1X+0C4qYenHSsmG
      wvxVk4vPt/8spEoT7jkr3M3vlvuNCa8V3/OBcNdC7I7HzVPF9hRxvxMzfbXYHsn2
      HKAtke85wnJu5CxQkcL/WouEcJUxHcne
      -----END CERTIFICATE-----
    - |
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----
{% endif %}

# Create Proxy Files
# Set Intel Time Server
# Set Bastion security on OpenSSH
write_files:
{% if inside_intel == true %}
  - path: /etc/apt/apt.conf
    content: |
      # This file was borrowed from OTC Infrastructure ansible automation
      Acquire::http::Proxy "http://internal-placeholder.com:912";
      Acquire::http::Proxy::internal-placeholder.com "DIRECT";
      Acquire::https::Proxy "http://internal-placeholder.com:912";
      Acquire::https::Proxy::internal-placeholder.com "DIRECT";
      Acquire::https::Proxy::internal-placeholder.com "DIRECT";
{% if using_vpn == false %}
      # [intel-linux] Proxy Bypass for Linux Security Updates
      Acquire::http::Proxy::ftp.osuosl.org "DIRECT";
      Acquire::http::Proxy::security.unbuntu.com "DIRECT";
      Acquire::http::Proxy::us.archive.ubuntu.com "DIRECT";
      Acquire::https::Proxy::ftp.osuosl.org "DIRECT";
      Acquire::https::Proxy::security.unbuntu.com "DIRECT";
      Acquire::https::Proxy::us.archive.ubuntu.com "DIRECT";
{% endif %}
    permissions: "0644"
  - path: /etc/profile.d/proxy.sh
    content: |
      # This file was borrowed from OTC Infrastructure ansible automation

      INTEL_HTTP_PROXY='http://internal-placeholder.com:912'
      INTEL_HTTPS_PROXY='http://internal-placeholder.com:912'
      INTEL_SOCKS_PROXY='internal-placeholder.com:1080'

      export {http,npm_config,npm_config_https}_proxy=$INTEL_HTTP_PROXY
      export https_proxy=$INTEL_HTTPS_PROXY
      export HTTP_PROXY=$INTEL_HTTP_PROXY
      export HTTPS_PROXY=$INTEL_HTTPS_PROXY
      export no_proxy='intel.com,.intel.com,10.0.0.0/8,192.168.0.0/16,localhost,127.0.0.0/8,134.134.0.0/16,172.16.0.0/16'
      export NO_PROXY=$no_proxy
      export socks_proxy=$INTEL_SOCKS_PROXY
      export SOCKS_PROXY=$INTEL_SOCKS_PROXY
    permissions: "0644"
  - path: /etc/systemd/timesyncd.conf
    content: |
      # This file was borrowed from OTC Infrastructure ansible automation
      # Use Internal time servers first
      [Time]
      NTP=corp.intel.com
      FallbackNTP=time.nist.gov
    permissions: "0644"
{% endif %}
  - path: /etc/ssh/sshd_config.d/bastion_config
    content: |
      # Supported HostKey algorithms by order of preference.
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_ecdsa_key
      HostKey /etc/ssh/ssh_host_rsa_key

      # Password based logins are disabled - only public key based logins are allowed.
      AuthenticationMethods publickey

      # LogLevel VERBOSE logs user's key fingerprint on login. Needed to have a clear audit track of which key was using to log in.
      LogLevel VERBOSE

      PermitRootLogin no

      # Log sftp level file access (read/write/etc.) that would not be easily logged otherwise.
      Subsystem sftp  /usr/lib/ssh/sftp-server -f AUTHPRIV -l INFO
    permissions: "0644"
    defer: true
  - path: /etc/ufw/header_before.rules
    content: |
      #
      # Rules that should be run before the ufw command line added rules. Custom
      # rules should be added to one of these chains:
      #   ufw-before-input
      #   ufw-before-output
      #   ufw-before-forward
      #

      # nat Table rules
      *nat
      :POSTROUTING ACCEPT [0:0]

{% for vmnum in range(1, guest_host_deployments|int + 1) %}
      # Forward traffic from vlan{{ vmnum }} through data.
      -A POSTROUTING -s 192.168.{{ vmnum + 100 }}.0/24 -o data -j MASQUERADE
{% endfor %}

      # don't delete the 'COMMIT' line or these nat table rules won't be processed
      COMMIT


    permissions: "0644"
  - path: /etc/bind/named.conf.options
    content: |
      options {
        directory "/var/cache/bind";

        // If there is a firewall between you and nameservers you want
        // to talk to, you may need to fix the firewall to allow multiple
        // ports to talk.  See http://www.kb.cert.org/vuls/id/800113

        // If your ISP provided one or more IP addresses for stable
        // nameservers, you probably want to use them as forwarders.
        // Uncomment the following block, and insert the addresses replacing
        // the all-0's placeholder.

        recursion yes;

        forwarders {
            192.168.150.254;
        };
        forward only;

        //========================================================================
        // If BIND logs error messages about the root key being expired,
        // you will need to update your keys.  See https://www.isc.org/bind-keys
        //========================================================================
        dnssec-validation no;

        auth-nxdomain no;    # conform to RFC1035
        listen-on-v6 { any; };
      };
    permissions: "0644"
    defer: true
  - path: /home/guest/.hushlogin
    content: |
      Do not show motd for this disabled account
    owner: 'guest:guest'
    permissions: "0644"
    defer: true

{% if inside_intel == true %}
# Use the Intel mirror
apt_mirror: https://internal-placeholder.com/pub/mirrors/ubuntu/
{% endif %}

hostname: {{ bastion_server_name }}
#fqdn: test1.example.com
manage_etc_hosts: true

users:
  - name: guest
    groups: users
    home: /home/guest
    shell: /usr/sbin/nologin
    lock_passwd: true
    inactive: true
    ssh_authorized_keys:
      - {{ bastion_ssh_key_public }}
  - name: bastion
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users,admin
    home: /home/bastion
    shell: /bin/bash
    lock_passwd: false
{% if secure == false %}
    passwd: $6$rounds=4096$hrdO9Hvdwxx9JcNz$3fPXpGrZFrTIvB3KhVp6oQa26l9w3jdjY3hnzWXtXr8KtUM9l8bxU79beDjdAUxeBnzw3Y/4zpgIpT/yypTMq1
{% endif %}
    ssh_authorized_keys:
      - {{ bastion_admin_ssh_key_public }}

# only cert auth via ssh (console access can still login)
ssh_pwauth: false
disable_root: true

package_update: true
packages:
  - net-tools
  - bind9
  - bind9utils

# These package are already in the cloud image
#   - ufw

# Configure Snapd proxy
# We should disable cloud init on the new bastion-server
# Configure the firewall
# Configure OpenSSH
#   Deactivate short moduli.
# Configure routing
runcmd:
{% if inside_intel == true %}
  - [ snap, set, system, proxy.http="http://internal-placeholder.com:912" ]
  - [ snap, set, system, proxy.https="http://internal-placeholder.com:912" ]
{% endif %}
  - [ touch, /etc/cloud/cloud-init.disabled ]
  - [ ufw, default, deny, incoming ]
  - [ ufw, default, allow, outgoing ]
  - [ ufw, allow, ssh ]
  - [ gawk, -i, inplace, -v, INPLACE_SUFFIX=.orig, '$5 >= 3071', /etc/ssh/moduli ]
  - [ sed, --in-place=.orig, 's/^DEFAULT_FORWARD_POLICY=.*$/DEFAULT_FORWARD_POLICY="ACCEPT"/', /etc/default/ufw ]
  - [ sed, --in-place=.orig, 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/; s|#net/ipv6/conf/default/forwarding=1|net/ipv6/conf/default/forwarding=1|', /etc/ufw/sysctl.conf ]
  - [ cp, -a, /etc/ufw/before.rules, /etc/ufw/before.rules.orig ]
  - 'cat /etc/ufw/header_before.rules /etc/ufw/before.rules.orig > /etc/ufw/before.rules'
{% for vmnum in range(1, guest_host_deployments|int + 1) %}
  - [ ufw, allow, from, 192.168.{{ vmnum + 100 }}.0/24, to, any, port, 53 ]
{% endfor %}
  - [ ufw, enable ]
  - [ systemctl, restart, bind9.service ]

# written to /var/log/cloud-init-output.log
final_message: "The system is finally up, after $UPTIME seconds"

# #Reboot the updated system to Ansible can continue
# runcmd:
#  - [ shutdown, --reboot, now ]
