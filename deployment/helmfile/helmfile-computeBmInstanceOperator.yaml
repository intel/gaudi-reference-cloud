bases:
  - environments.yaml

---

{{- $helmChartVersionsDir := requiredEnv "HELM_CHART_VERSIONS_DIR" }}
{{- $secretsDir := requiredEnv "SECRETS_DIR" }}

repositories:
  - name: idc
    url: {{ (.Values.idcHelmRepository).url | quote }}
    oci: true

releases:

{{- $computeEnabled := or $.Values.components.computeBm.enabled $.Values.components.computeVm.enabled }}

{{- if $computeEnabled }}
{{- range $regionIndex, $region := .Values.regions }}
{{- $region := mustMergeOverwrite (deepCopy $.Values.defaults.region) $region }}

{{- $computeApiServerAddr := print $region.grpcProxy.internal.ingress.host ":443" }}
{{- $clusterName := ($region | get "clusterName" $region.region) }}

{{- range $availabilityZoneIndex, $availabilityZone := $region.availabilityZones }}
{{- $availabilityZone := mustMergeOverwrite (deepCopy $.Values.defaults.availabilityZone) $availabilityZone }}

  {{- if and ($.Values.components.computeBm.enabled) ($availabilityZone.bmInstanceOperator.enabled) }}
  - name: {{ include "idc-common.toReleaseName" (print $availabilityZone.availabilityZone "-bm-instance-operator") }}
    namespace: idcs-system
    kubeContext: {{ $availabilityZone.kubeContext }}
    labels:
      component: computeBmInstanceOperator
      service: compute-bm
      geographicScope: az
      availabilityZone: {{ $availabilityZone.availabilityZone }}
      region: {{ $region.region }}
      kubeContext: {{ $availabilityZone.kubeContext }}
      applicationName: bm-instance-operator
    chart: idc/bm-instance-operator
    version: {{ readFile (print $helmChartVersionsDir "/bm-instance-operator.version") | quote }}
    values:
      - proxy.yaml.gotmpl
      - idc-common.yaml.gotmpl
      - controllerManager:
          manager:
            image:
              repository: "{{ ($.Values.image).registry }}/{{ ($.Values.image).repositoryPrefix }}bm-instance-operator@sha256"
            {{- if $.Values.zeroResources }}
            resources:
            {{- end }}
      - managerConfig:
          controllerManagerConfigYaml:
            acceleratorNetworkSdnEnabled: {{ $availabilityZone.bmInstanceOperator.acceleratorNetworkSdnEnabled }}
            instanceOperator:
              computeApiServerAddr: {{ $computeApiServerAddr | quote }}
              filter:
                labels:
                  region: {{ $region.region }}
              sshProxyTunnelCluster:
                kubeConfigFilePath: ""
              operatorFeatureFlags:
                enableQuickConnectClientCA: {{ $availabilityZone.bmInstanceOperator.operatorFeatureFlags.enableQuickConnectClientCA }}
              quickConnectHost: {{ $availabilityZone.quickConnect.host }}
              storageClusterAddr: {{ $region.storageConfig.storageController.fileStorageClusterAddr }}
            osHttpServerUrl: {{ ($availabilityZone.bmInstanceOperator).osHttpServerUrl }}
            maxConcurrentReconciles: {{ $availabilityZone.bmInstanceOperator.maxConcurrentReconciles }}
            networkConfig:
              networkBackEndType: {{ $availabilityZone.bmInstanceOperator.networkConfig.networkBackEndType }}
              networkKubeConfig: {{ $availabilityZone.bmInstanceOperator.networkConfig.networkKubeConfig }}
              provisioningVlan: {{ $availabilityZone.bmInstanceOperator.networkConfig.provisioningVlan }}
              acceleratorNetworkDefaultVlan: {{ $availabilityZone.bmInstanceOperator.networkConfig.acceleratorNetworkDefaultVlan }}
              accBGPNetworkDefaultCommunityID: {{ $availabilityZone.bmInstanceOperator.networkConfig.accBGPNetworkDefaultCommunityID }}
              storageDefaultVlan: {{ $availabilityZone.bmInstanceOperator.networkConfig.storageDefaultVlan }}
            sshConfig:
              sshProxyUser: {{ $availabilityZone.bmInstanceOperator.sshConfig.sshProxyUser | quote }}
              sshProxyAddress: {{ $availabilityZone.bmInstanceOperator.sshConfig.sshProxyAddress | quote }}
              sshProxyPort: {{ $availabilityZone.bmInstanceOperator.sshConfig.sshProxyPort }}
            storageServerSubnets: {{ $region.storageServerSubnets | toJson }}
      - otel:
          exporter:
            otlp:
              endpoint: {{ $availabilityZone.otel.exporter.otlp.endpoint | quote }}
      - vault:
          agent:
            inject:
              secret:
                path: controlplane/data/{{ $availabilityZone.availabilityZone }}-bm-instance-operator
                pathQuickConnectClientCA: {{ $availabilityZone.availabilityZone }}-quick-connect-client-ca/cert/ca_chain
      - vault:
          authPath: {{ $availabilityZone.vault.authPath | quote }}
      - tls:
          issueCa: {{ $availabilityZone.availabilityZone }}-ca
      - serviceMonitor:
            enabled: {{ $.Values.serviceMonitor.regional.enabled }}
  {{- end }}

{{- end }}
{{- end }}
{{- end }}
