bases:
  - environments.yaml

---

{{- $helmChartVersionsDir := requiredEnv "HELM_CHART_VERSIONS_DIR" }}
{{- $secretsDir := requiredEnv "SECRETS_DIR" }}

repositories:
  - name: idc
    url: {{ (.Values.idcHelmRepository).url | quote }}
    oci: true
  - name: bitnami
    url: https://charts.bitnami.com/bitnami

releases:

{{- if $.Values.components.kfaas.enabled }}
{{- range $regionIndex, $region := .Values.regions }}
{{- $region := mustMergeOverwrite (deepCopy $.Values.defaults.region) $region }}

  {{- if ($region.kfaas.enabled) }}
  
  - name: {{ include "idc-common.toReleaseName" (print $region.region "-kfaas") }}
    namespace: idcs-system
    kubeContext: {{ $region.kubeContext }}
    labels:
      component: kfaas
      service: kfaas
      geographicScope: regional
      region: {{ $region.region }}
      kubeContext: {{ $region.kubeContext }}
      applicationName: kfaas
      clusterName: {{ $region | get "clusterName" $region.region | quote }}
    chart: idc/kfaas
    version: {{ readFile (print $helmChartVersionsDir "/kfaas.version") | quote }}
    values:
      - proxy.yaml.gotmpl
      - idc-common.yaml.gotmpl
      - image:
          registry: {{ ($.Values.image).registry | quote }}
          repository: "{{ ($.Values.image).repositoryPrefix }}kfaas@sha256"
      - apiServer:
          # image:
          #   repository: "{{ ($.Values.image).registry }}/{{ ($.Values.image).repositoryPrefix }}kfaas@sha256"
          ingress:
            issueCa: {{ $region.region }}-ca
            enabled: {{ $region | get "computeApiServer.ingress.enabled" $.Values.defaults.region.computeApiServer.ingress.enabled }}
            className: {{ $region | get "computeApiServer.ingress.className"  $.Values.defaults.region.computeApiServer.ingress.className | quote }}
          hosts:
            - host: {{ $region | get "computeApiServer.ingress.host" $.Values.defaults.region.computeApiServer.ingress.host | quote }}
              paths:
                - path: /
                  pathType: Prefix
          {{- if ($region | get "computeApiServer.ingress.host" $.Values.defaults.region.computeApiServer.ingress.host) }}
          tls:
            - secretName: {{ $region | get "computeApiServer.ingress.tls.secretName" $.Values.defaults.region.computeApiServer.ingress.tls.secretName | quote }}
              hosts:
                - {{ $region | get "computeApiServer.ingress.host" $.Values.defaults.region.computeApiServer.ingress.host | quote }}
          {{- end }}
      - nameservers: {{ $region.nameservers | toJson }}
      - region: {{ $region.region | quote }}
      - IKSServerAddr: {{ $region.kfaas.iksaddress | quote }}
      - InstallImage: {{ $region.kfaas.installimage | quote }}
      - otel:
          exporter:
            otlp:
              endpoint: {{ $region.kfaas.otel.exporter.otlp.endpoint | quote }}
      - database:
          service: {{ $region | get "kfaas.database.service" (print $region.region "-kfaas-db-postgresql") | quote }}
          arg: {{ $region | get "kfaas.database.arg" $.Values.defaults.region.kfaas.database.arg | quote }}
          name: main
          vaultCredentialsPath: "controlplane/data/{{ $region.region }}-kfaas/database"
      - domainSuffix: {{ $region | get "computeApiServer.domainSuffix" $.Values.defaults.region.computeApiServer.domainSuffix | quote }}
      - tls:
          issueCa: {{ $region.region }}-ca
      - vault:
          authPath: {{ $region | get "vault.authPath" $.Values.defaults.region.vault.authPath | quote }}

  {{- end }}

   {{- if ($region | get "kfaasDb.enabled" $.Values.defaults.region.kfaasDb.enabled) }}
  # Helmfile is used to install Postgres for development only.
  # For simplicity, standard Kubernetes Secrets are used, not Vault.
  # See https://github.com/bitnami/charts/tree/main/bitnami/postgresql/#installing-the-chart
  - name: {{ include "idc-common.toReleaseName" (print $region.region "-kfaas-db") }}
    namespace: idcs-system
    kubeContext: {{ $region.kubeContext }}
    labels:
      component: kfaas
      service: kfaas
      database: kfaas
      geographicScope: regional
      region: {{ $region.region }}
      kubeContext: {{ $region.kubeContext }}
      applicationName: kfaas-db
      clusterName: {{ $region | get "clusterName" $region.region | quote }}
    chart: bitnami/postgresql
    version: 12.2.6
    values:
      - image:
          debug: true
      - auth:
          username: dbuser
          password: {{ readFile (print $secretsDir "/" $region.region "-kfaas_db_user_password") | quote }}
          postgresPassword: {{ readFile (print $secretsDir "/" $region.region "-kfaas_db_admin_password") | quote }}
          database: main
      - primary:
          persistence:
            enabled: {{ $region | get "kfaasDb.primary.persistence.enabled" $.Values.defaults.region.kfaasDb.primary.persistence.enabled }}
  {{- end }}

{{- end }} 
{{- end }}
