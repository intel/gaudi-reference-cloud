bases:
  - environments.yaml

---

{{- $helmChartVersionsDir := requiredEnv "HELM_CHART_VERSIONS_DIR" }}
{{- $secretsDir := requiredEnv "SECRETS_DIR" }}

repositories:
  - name: idc
    url: {{ (.Values.idcHelmRepository).url | quote }}
    oci: true

releases:

{{- if $.Values.global.enabled }}
{{- if $.Values.global.idcCoreServices.enabled }}
{{- if $.Values.global.portal.enabled }}

{{- $region0 := get (keys $.Values.regions | sortAlpha | first) $.Values.regions }}
{{- $region0 := mustMergeOverwrite (deepCopy $.Values.defaults.region) $region0 }}

  - name: portal
    namespace: idcs-system
    kubeContext: {{ $.Values.global.kubeContext }}
    labels:
      component: portal
      geographicScope: global
      environmentName: {{ $.Values.global.environmentName }}
      kubeContext: {{ $.Values.global.kubeContext }}
    chart: idc/idcs-portal
    version: {{ $.Values.global.portal.version | quote }}
    values:
      - proxy.yaml.gotmpl
      - idc-common.yaml.gotmpl
      - idc-common-global.yaml.gotmpl
      - configMap:
          REACT_APP_API_GLOBAL_SERVICE: https://{{ $.Values.global.grpcRestGateway.ingress.host }}/v1
          REACT_APP_API_REGIONAL_SERVICES:
            - https://{{ $region0.grpcRestGateway.ingress.host }}/v1
          REACT_APP_API_SLURM_SERVICE: https://{{ $region0.grpcRestGateway.ingress.host }}/v1
          REACT_APP_DEFAULT_REGION_AVAILABILITY_ZONES: 
          {{- range $availability_zone := $.Values.global.portal.configMap.REACT_APP_DEFAULT_REGION_AVAILABILITY_ZONES }}
            - {{ $availability_zone }}
          {{- end }}
          REACT_APP_DEFAULT_REGION_NAMES: 
          {{- range $region_name := $.Values.global.portal.configMap.REACT_APP_DEFAULT_REGION_NAMES }}
            - {{ $region_name }}
          {{- end }}
          REACT_APP_DEFAULT_REGION_PREFIXES: 
          {{- range $region_prefix := $.Values.global.portal.configMap.REACT_APP_DEFAULT_REGION_PREFIXES }}
            - {{ $region_prefix }}
          {{- end }}
          REACT_APP_DEFAULT_REGIONS: 
          {{- range $default_region := $.Values.global.portal.configMap.REACT_APP_DEFAULT_REGIONS }}
            - {{ $default_region }}
          {{- end }}
          REACT_APP_FEATURE_KaaS: {{ $.Values.global.portal.configMap.REACT_APP_FEATURE_KaaS }}
          REACT_APP_FEATURE_API_KEYS: {{ $.Values.global.portal.configMap.REACT_APP_FEATURE_API_KEYS }}
          REACT_APP_FEATURE_OBJECT_STORAGE: {{ $.Values.global.portal.configMap.REACT_APP_FEATURE_OBJECT_STORAGE }}
          REACT_APP_SELECTED_REGION: {{ $.Values.global.portal.configMap.REACT_APP_SELECTED_REGION }}
      - image:
          registry: {{ (.Values.image).registry | quote }}
          repository: "{{ (.Values.image).repositoryPrefix }}idcs-portal"
          tag: "dev-{{ $.Values.global.portal.version }}"
      - ingress:
          enabled: {{ $.Values.global.portal.ingress.enabled }}
          className: {{ $.Values.global.portal.ingress.className | quote }}
          hosts:
            - host: {{ $.Values.global.portal.ingress.host | quote }}
              paths:
                - path: /
                  pathType: Prefix
          {{- if $.Values.global.portal.ingress.host }}
          tls:
            - secretName: {{ $.Values.global.portal.ingress.tls.secretName | quote }}
              hosts:
                - {{ $.Values.global.portal.ingress.host | quote }}
          {{- end }}
      - tls:
          issueCa: {{ $.Values.global.issueCa }}
      - vault:
          authPath: {{ $.Values.global.vault.authPath | quote }}

{{- end }}
{{- end }}
{{- end }}
