bases:
  - environments.yaml

---

{{- $helmChartVersionsDir := requiredEnv "HELM_CHART_VERSIONS_DIR" }}
{{- $secretsDir := requiredEnv "SECRETS_DIR" }}

repositories:
  - name: idc
    url: {{ (.Values.idcHelmRepository).url | quote }}
    oci: true

releases:

{{- $computeEnabled := or $.Values.components.computeBm.enabled $.Values.components.computeVm.enabled }}

{{- if $computeEnabled }}
{{- range $regionIndex, $region := .Values.regions }}
{{- $region := mustMergeOverwrite (deepCopy $.Values.defaults.region) $region }}
{{- range $availabilityZoneIndex, $availabilityZone := $region.availabilityZones }}
{{- $availabilityZone := mustMergeOverwrite (deepCopy $.Values.defaults.availabilityZone) $availabilityZone }}

  {{- if ($availabilityZone.sshProxyOperator.enabled) }}
  - name: {{ include "idc-common.toReleaseName" (print $availabilityZone.availabilityZone "-ssh-proxy-operator") }}
    namespace: idcs-system
    kubeContext: {{ $availabilityZone.kubeContext }}
    labels:
      component: computeSshProxy
      service: compute
      geographicScope: az
      availabilityZone: {{ $availabilityZone.availabilityZone }}
      region: {{ $region.region }}
      kubeContext: {{ $availabilityZone.kubeContext }}
      applicationName: ssh-proxy-operator
    chart: idc/ssh-proxy-operator
    version: {{ readFile (print $helmChartVersionsDir "/ssh-proxy-operator.version") | quote }}
    values:
      - proxy.yaml.gotmpl
      - idc-common.yaml.gotmpl
      - controllerManager:
          manager:
            image:
              repository: "{{ ($.Values.image).registry }}/{{ ($.Values.image).repositoryPrefix }}ssh-proxy-operator@sha256"
            {{- if $.Values.zeroResources }}
            resources:
            {{- end }}
      - managerConfig:
          controllerManagerConfigYaml:
            authorizedKeysScpTargets: {{ ($availabilityZone.sshProxy).authorizedKeysScpTargets | toJson }}
            proxyUser: {{ ($availabilityZone.sshProxy).proxyUser | quote }}
            proxyAddress: {{ ($availabilityZone.sshProxy).proxyAddress | quote }}
      - otel:
          exporter:
            otlp:
              endpoint: {{ $availabilityZone.otel.exporter.otlp.endpoint | quote }}
      - vault:
          agent:
            inject:
              secret:
                path: controlplane/data/{{ $availabilityZone.availabilityZone }}-ssh-proxy-operator
          authPath: {{ $availabilityZone.vault.authPath | quote }}
      - tls:
          issueCa: {{ $availabilityZone.availabilityZone }}-ca
      - serviceMonitor:
            enabled: {{ $.Values.serviceMonitor.regional.enabled }}
  {{- end }}

{{- end }}
{{- end }}
{{- end }}
