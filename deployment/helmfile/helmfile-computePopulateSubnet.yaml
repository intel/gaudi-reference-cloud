bases:
  - environments.yaml

---

{{- $helmChartVersionsDir := requiredEnv "HELM_CHART_VERSIONS_DIR" }}
{{- $secretsDir := requiredEnv "SECRETS_DIR" }}

repositories:
  - name: idc
    url: {{ (.Values.idcHelmRepository).url | quote }}
    oci: true

releases:

{{- $computeEnabled := or $.Values.components.computeBm.enabled $.Values.components.computeVm.enabled }}

{{- if $computeEnabled }}
{{- range $regionIndex, $region := .Values.regions }}
{{- $region := mustMergeOverwrite (deepCopy $.Values.defaults.region) $region }}

{{- $computeApiServerAddr := print $region.grpcProxy.internal.ingress.host ":443" }}
{{- $clusterName := ($region | get "clusterName" $region.region) }}

{{- $kind := "Subnet" }}
{{- $dirConfigPath := "computeApiServer.dirSubnet" }}
{{- $dirDefault := print "../../build/environments/" $.Environment.Name "/Subnet" }}

  - name: {{ include "idc-common.toReleaseName" (print $region.region "-populate-") }}{{ $kind | kebabcase }}
    namespace: idcs-system
    kubeContext: {{ $region.kubeContext }}
    labels:
      component: computePopulate{{ $kind }}
      service: compute
      geographicScope: regional
      region: {{ $region.region }}
      kubeContext: {{ $region.kubeContext }}
      applicationName: {{ $region.region }}-populate-{{ $kind | kebabcase }}
      clusterName: {{ $clusterName | quote }}
    chart: idc/git-to-grpc-synchronizer
    version: {{ readFile (print $helmChartVersionsDir "/git-to-grpc-synchronizer.version") | quote }}
    values:
      - proxy.yaml.gotmpl
      - idc-common.yaml.gotmpl
      - image:
          registry: {{ ($.Values.image).registry | quote }}
          repository: "{{ ($.Values.image).repositoryPrefix }}git-to-grpc-synchronizer@sha256"
      - kind: {{ $kind | quote }}
      - target: {{ $computeApiServerAddr | quote }}
      # sourceMap will be a map from filename to YAML file contents, generated from files in dirConfigPath.
      - sourceMap:
          {{- range $index, $filename := readDir ($region | get $dirConfigPath $dirDefault) }}
          {{- $basename := splitList "/" $filename | last }}
          {{- $regex := "^[-._a-zA-Z0-9]+$" }}
          {{- if not (mustRegexMatch $regex $basename) }}
            {{- fail (print "last element of " $filename " must match the regex `" $regex "`.") }}
          {{- end }}
          {{ $basename }}: {{ readFile $filename | quote }}
          {{- end }}
          {{- range $azindex, $az := ($region.availabilityZones) }}
          {{- $az := mustMergeOverwrite (deepCopy $.Values.defaults.availabilityZone) $az }}
          {{- if and ($az.acceleratorClusterSubnets.addSubnets) (eq $kind "Subnet") }}
          {{- range $a,$vlanDomain := untilStep 1 ($az.acceleratorClusterSubnets.vlanDomainCount | int ) 1 }}
          {{- $subnet := 0  }}
          {{- range $b,$vlanId := untilStep 101 133 1 }}
          {{- $addressSpace := $vlanDomain }}
          {{ $az.availabilityZone }}_192.168.{{$subnet}}.0_{{ $vlanDomain }}_{{ $vlanId }}.yaml: |
              region: {{ $region.region }}
              availabilityZone: {{ $az.availabilityZone }}
              addressSpace: {{ $addressSpace | quote }}
              vlanDomain: {{ $vlanDomain | quote }}
              subnet: 192.168.{{ $subnet }}.0/22
              vlanId: {{ $vlanId }}
          {{- $subnet = add $subnet 4}}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if and ($az.acceleratorClusterSubnets.addBgpCommunityId) (eq $kind "Subnet") }}
          {{- $communityIdRangeEnd := add ($az.acceleratorClusterSubnets.bgpCommunityIdCount) 1001 | int }}
          {{- $secondOctet := 25  }}
          {{- $thirdOctet := 0  }}
          {{- range $a,$communityId := untilStep 1001 $communityIdRangeEnd 1 }}
          {{- if (gt $thirdOctet 252) }}
          {{- $secondOctet = add $secondOctet 1 }}
          {{- $thirdOctet = 0 }}
          {{- end }}
          {{ $az.availabilityZone }}_172.{{$secondOctet}}.{{$thirdOctet}}.0_{{ $communityId }}.yaml: |
              region: {{ $region.region }}
              availabilityZone: {{ $az.availabilityZone }}
              addressSpace: "xbx"
              vlanDomain: "xbx"
              subnet: 172.{{ $secondOctet }}.{{ $thirdOctet }}.0/22
              vlanId: {{ $communityId }}
          {{- $thirdOctet = add $thirdOctet 4}}
          {{- end }}
          {{- end }}
          {{- end }}
      - chunkSize: 1000
      - otel:
          exporter:
            otlp:
              endpoint: {{ $region.otel.exporter.otlp.endpoint | quote }}
      - tls:
          issueCa: {{ $region.region }}-ca
      - ttlSecondsAfterFinished: {{ $region.gitToGrpcSynchronizer.ttlSecondsAfterFinished }}
      - vault:
          authPath: {{ $region.vault.authPath | quote }}

{{- end }}
{{- end }}
