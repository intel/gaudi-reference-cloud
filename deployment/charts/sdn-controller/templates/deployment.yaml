apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "idc-common.fullname" . }}
  labels:
    {{- include "idc-common.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "idc-common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: {{ .Chart.Name }}
        apparmor.security.beta.kubernetes.io/{{ .Chart.Name }}: runtime/default
        apparmor.security.beta.kubernetes.io/kube-rbac-proxy: runtime/default
        {{- include "idc-common.vaultPkiAnnotations" . | nindent 8 }}
        {{- include "idc-common.vaultAnnotations" . | nindent 8 }}
        {{- include "idc-common.otelAnnotations" . | nindent 8 }}
        {{- if eq .Values.managerConfig.controllerManagerConfigYaml.controllerConfig.switchImportSource "raven" }}
        vault.hashicorp.com/agent-inject-secret-raven: {{ .Values.vault.agent.inject.secret.path }}/raven
        vault.hashicorp.com/agent-inject-template-raven: |-
          {{`{{- with secret `}}"{{ .Values.vault.agent.inject.secret.path }}/raven"{{` -}}`}}
          ---
          credentials:
            username: "{{`{{ .Data.data.username | trimSpace }}`}}"
            password: "{{`{{ .Data.data.password | trimSpace }}`}}"
          {{`{{- end }}`}}
        {{- end }}
        vault.hashicorp.com/agent-inject-secret-eapi: {{ .Values.vault.agent.inject.secret.path }}/eapi
        vault.hashicorp.com/agent-inject-template-eapi: |-
          {{`{{- with secret `}}"{{ .Values.vault.agent.inject.secret.path }}/eapi"{{` -}}`}}
          ---
          credentials:
            username: "{{`{{ .Data.data.username | trimSpace }}`}}"
            password: "{{`{{ .Data.data.password | trimSpace }}`}}"
          {{`{{- end }}`}}
        {{- if eq .Values.managerConfig.controllerManagerConfigYaml.controllerConfig.switchPortImportSource "bmh" }}      
        {{- $bmhkubeconfigPaths := .Values.managerConfig.controllerManagerConfigYaml.controllerConfig.bmhClusterKubeConfigFilePath | split ";" }}
        {{- $secretPath := .Values.vault.agent.inject.secret.path }}
          {{- if eq $secretPath "" }}
            {{ fail (print "Error: secretPath is empty") }}
          {{- end }}
        {{- range $bmhKubeconfigPath := $bmhkubeconfigPaths }}       
        {{- $bmhKubeconfig := regexFind "[^/]+$" $bmhKubeconfigPath }}
        {{- if ne $bmhKubeconfig "" }} 
        vault.hashicorp.com/agent-inject-secret-{{ $bmhKubeconfig }}: {{ $secretPath }}/{{ $bmhKubeconfig }}
        vault.hashicorp.com/agent-inject-template-{{ $bmhKubeconfig }}: |-
          {{`{{- with secret "`}}{{ $secretPath }}/{{ $bmhKubeconfig }}{{`" -}}`}}
          {{`{{ .Data.data.kubeconfig }}`}}
          {{`{{- end }}`}}         
        {{- end }}
        {{- end }}                   
        {{- end }}
        {{ if or (eq .Values.managerConfig.controllerManagerConfigYaml.controllerConfig.switchImportSource "netbox") (eq .Values.managerConfig.controllerManagerConfigYaml.controllerConfig.switchPortImportSource "netbox") (eq .Values.managerConfig.controllerManagerConfigYaml.controllerConfig.nodeGroupToPoolMappingSource "netbox") }}
        vault.hashicorp.com/agent-inject-secret-netboxtoken: {{ .Values.vault.agent.inject.secret.path }}/netboxtoken
        vault.hashicorp.com/agent-inject-template-netboxtoken: |-
          {{`{{- with secret `}}"{{ .Values.vault.agent.inject.secret.path }}/netboxtoken"{{` -}}`}}
           {{`{{ .Data.data.token }}`}}
          {{`{{- end }}`}}
        {{- end }}
        # Add checksum to force deployment to restart pod if the configmap changes.
        checksum/configmap: {{ include (print $.Template.BasePath "/manager-config.yaml") . | sha256sum }}   
      labels:
        {{- include "idc-common.selectorLabels" . | nindent 8 }}
    spec:
      securityContext: # Apply to all containers unless overridden.
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "idc-common.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 10
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 10
      containers:
      - command:
        - /app/go/pkg/sdn-controller/sdn-controller_image_1.binary # TODO: this is the default binary name generated by bazel, can we change it?
        args:
        - --config=/controller_manager_config.yaml
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=0.0.0.0:8080
        - --leader-elect
        {{- include "idc-common.logArgs" . | nindent 8 }}
        env:
          {{- include "idc-common.proxyEnv" . | nindent 10 }}
          {{- include "idc-common.otelEnv" . | nindent 10 }}
        image: {{ include "idc-common.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
        # - containerPort: 8082
        #   protocol: TCP
        volumeMounts:
        - mountPath: /controller_manager_config.yaml
          name: manager-config
          subPath: controller_manager_config.yaml        
        - mountPath: /pool_config.json
          name: pool-config
          subPath: pool_config.json
        - mountPath: /group_pool_mapping_config.json
          name: group-pool-mapping-config
          subPath: group_pool_mapping_config.json
        - mountPath: /netbox
          name: netbox-filters-volume
      - name: kube-rbac-proxy
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: {{ .Values.kubeRBACPolicyImageRepo }}:{{ .Values.kubeRBACPolicyImageTag }}
        imagePullPolicy: {{ .Values.kubeRBACPolicyImagePullPolicy }}
        ports:
        - containerPort: 8443
          name: https
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - "ALL"
        resources:
          {{- toYaml .Values.kubeRBACProxyResources | nindent 10 }}
      volumes:
      - configMap:
          name: sdn-controller-manager-config
        name: manager-config
      - configMap:
          name: sdn-pool-config
        name: pool-config
      - configMap:
          name: group-pool-mapping-config
        name: group-pool-mapping-config
      - name: netbox-filters-volume
        configMap:
          name: netbox-filters-cm
          items:
          - key: netbox_provider_servers_filter.json
            path: netbox_provider_servers_filter.json
          - key: netbox_provider_interfaces_filter.json
            path: netbox_provider_interfaces_filter.json
          - key: switches_filter.json
            path: switches_filter.json
