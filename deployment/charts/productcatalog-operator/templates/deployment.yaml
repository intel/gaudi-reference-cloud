apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "productcatalog-operator.fullname" . }}
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: product-catalog
    app.kubernetes.io/part-of: product-catalog
  {{- include "productcatalog-operator.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "productcatalog-operator.fullname" . }}
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: product-catalog
    app.kubernetes.io/part-of: product-catalog
    control-plane: controller-manager
  {{- include "productcatalog-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "productcatalog-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "productcatalog-operator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- include "idc-common.vaultAnnotations" . | nindent 8 }}
        vault.hashicorp.com/agent-inject-secret-gts_username: "{{ .Values.gts.vaultCredentialsPath }}"
        vault.hashicorp.com/agent-inject-template-gts_username: |-
          {{`{{- with secret `}}"{{ .Values.gts.vaultCredentialsPath }}"{{` -}}`}}
          {{`{{ .Data.data.username }}`}}
          {{`{{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-gts_password: "{{ .Values.gts.vaultCredentialsPath }}"
        vault.hashicorp.com/agent-inject-template-gts_password: |-
          {{`{{- with secret `}}"{{ .Values.gts.vaultCredentialsPath }}"{{` -}}`}}
          {{`{{ .Data.data.password }}`}}
          {{`{{- end }}`}}
        vault.hashicorp.com/agent-inject-containers: "manager"
        {{- include "idc-common.vaultPkiAnnotations" . | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8082/
        - --logtostderr=true
        - --v=0
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag
          | default .Chart.AppVersion }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent
          10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8082
        - --leader-elect
        command:
        - /productcatalog_operator
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ .Values.kubernetesClusterDomain }}
        - name: usernameFile
          value: {{ .Values.gts.usernameFile }}
        - name: passwordFile
          value: {{ .Values.gts.passwordFile }}
        {{- include "idc-common.commonEnv" . | nindent 8 }}
        {{- include "idc-common.proxyEnv" . | nindent 8 }}
        {{- include "idc-common.otelEnv" . | nindent 8 }}
        {{- include "idc-common.gtsEnv" . | nindent 8 }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "productcatalog-operator.fullname" . }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}